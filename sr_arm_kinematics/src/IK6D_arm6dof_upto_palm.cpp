/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp

/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 60 generated on 2012-10-01 15:54:25.390252
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp

#include "IK6D_arm6dof_upto_palm.h"

IKFAST_API int GetNumFreeParameters()
{
    return 0;
}

IKFAST_API int* GetFreeParameters()
{
    return NULL;
}

IKFAST_API int GetNumJoints()
{
    return 6;
}

IKFAST_API int GetIkRealSize()
{
    return sizeof(IkReal);
}

IKFAST_API int GetIkType()
{
    return 0x67000001;
}

IKFAST_API const char* getKinematicsHash()
{
    return "<robot:genericrobot - arm_and_hand (82732ef00f754ce1d473a3459f21368b)>";
}

namespace ikfast
{


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
void IKSolver::fk(const IkReal* j, IkReal* eetrans, IkReal* eerot)
{
    IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66;
    x0=IKsin(j[0]);
    x1=IKcos(j[3]);
    x2=IKcos(j[0]);
    x3=IKsin(j[3]);
    x4=IKsin(j[1]);
    x5=IKsin(j[2]);
    x6=IKcos(j[1]);
    x7=IKcos(j[2]);
    x8=IKsin(j[4]);
    x9=IKcos(j[4]);
    x10=IKcos(j[5]);
    x11=IKsin(j[5]);
    x12=((IkReal(0.707106781186548))*(x3));
    x13=((IkReal(0.0240416305603426))*(x1));
    x14=((IkReal(0.338000000000000))*(x0));
    x15=((IkReal(0.00707106781186548))*(x1));
    x16=((IkReal(0.00707106781186548))*(x3));
    x17=((IkReal(1.00000000000000))*(x8));
    x18=((IkReal(0.0340000000000000))*(x6));
    x19=((IkReal(1.00000000000000))*(x0));
    x20=((IkReal(1.00000000000000))*(x9));
    x21=((IkReal(1.00000000000000))*(x2));
    x22=((IkReal(0.369000000000000))*(x4));
    x23=((IkReal(0.0240416305603426))*(x3));
    x24=((IkReal(0.0800000000000000))*(x0));
    x25=((IkReal(0.707106781186548))*(x1));
    x26=((x4)*(x7));
    x27=((IkReal(-0.707106781186548))*(x3));
    x28=((x2)*(x5));
    x29=((x2)*(x3));
    x30=((x5)*(x6));
    x31=((x6)*(x7));
    x32=((x4)*(x5));
    x33=((IkReal(-0.707106781186548))*(x1));
    x34=((x0)*(x25));
    x35=((x0)*(x12));
    x36=((x12)*(x2));
    x37=((x2)*(x25));
    x38=((x21)*(x31));
    x39=((x19)*(x31));
    x40=((((IkReal(-1.00000000000000))*(x32)))+(x31));
    x41=((x37)+(x36));
    x42=((((IkReal(0.707106781186548))*(x30)))+(((IkReal(0.707106781186548))*(x26))));
    x43=((IkReal(-1.00000000000000))*(x42));
    x44=((((IkReal(-0.00707106781186548))*(x30)))+(((IkReal(-0.00707106781186548))*(x26))));
    x45=((((IkReal(-1.00000000000000))*(x38)))+(((x28)*(x4))));
    x46=((((IkReal(-1.00000000000000))*(x39)))+(((x0)*(x32))));
    x47=((x1)*(x42));
    x48=((x3)*(x43));
    x49=((x3)*(x42));
    x50=((x38)+(((IkReal(-1.00000000000000))*(x21)*(x32))));
    x51=((((IkReal(-1.00000000000000))*(x19)*(x32)))+(x39));
    x52=((IkReal(1.00000000000000))*(x47));
    x53=((x21)*(((((IkReal(-1.00000000000000))*(x30)))+(((IkReal(-1.00000000000000))*(x26))))));
    x54=((x19)*(((((IkReal(-1.00000000000000))*(x30)))+(((IkReal(-1.00000000000000))*(x26))))));
    x55=((x1)*(x46));
    x56=((x25)*(x45));
    x57=((x25)*(x46));
    x58=((x12)*(x50));
    x59=((x12)*(x51));
    x60=((x35)+(x56));
    x61=((x34)+(x58));
    x62=((x59)+(x57));
    x63=((((IkReal(-1.00000000000000))*(x20)*(x40)))+(((x17)*(((x52)+(((IkReal(1.00000000000000))*(x48))))))));
    x64=((x60)+(x61));
    x65=((((IkReal(-1.00000000000000))*(x20)*(x54)))+(((x17)*(((x41)+(((IkReal(-1.00000000000000))*(x62))))))));
    x66=((((IkReal(-1.00000000000000))*(x64)*(x8)))+(((IkReal(-1.00000000000000))*(x53)*(x9))));
    eerot[0]=((((x53)*(x8)))+(((IkReal(-1.00000000000000))*(x64)*(x9))));
    eerot[1]=((((x11)*(x66)))+(((x10)*(((x61)+(((IkReal(-1.00000000000000))*(x60))))))));
    eerot[2]=((((x10)*(x66)))+(((x11)*(((x60)+(((IkReal(-1.00000000000000))*(x61))))))));
    IkReal x67=((IkReal(1.00000000000000))*(x13));
    IkReal x68=((x2)*(x26));
    IkReal x69=((IkReal(1.00000000000000))*(x50));
    IkReal x70=((IkReal(1.00000000000000))*(x0));
    eetrans[0]=((((IkReal(-1.00000000000000))*(x16)*(x69)))+(((IkReal(-1.00000000000000))*(x15)*(x70)))+(((x0)*(x16)))+(((IkReal(0.338000000000000))*(x68)))+(((IkReal(0.0800000000000000))*(x28)*(x4)))+(((x8)*(((((IkReal(-1.00000000000000))*(x45)*(x67)))+(((IkReal(-1.00000000000000))*(x0)*(x67)))+(((IkReal(-1.00000000000000))*(x23)*(x70)))+(((IkReal(-1.00000000000000))*(x23)*(x69)))))))+(((x15)*(x45)))+(((IkReal(0.338000000000000))*(x28)*(x6)))+(((IkReal(0.134000000000000))*(x0)))+(((x2)*(x22)))+(((x9)*(((((x18)*(x28)))+(((IkReal(0.0340000000000000))*(x68)))))))+(((IkReal(-0.0800000000000000))*(x2)*(x31))));
    eerot[3]=((((x9)*(((x41)+(((IkReal(-1.00000000000000))*(x62)))))))+(((x54)*(x8))));
    eerot[4]=((((x11)*(x65)))+(((x10)*(((((x2)*(x33)))+(x36)+(x59)+(((x33)*(x46))))))));
    eerot[5]=((((x11)*(((((x27)*(x51)))+(((x2)*(x27)))+(x37)+(x57)))))+(((x10)*(x65))));
    IkReal x71=((IkReal(1.00000000000000))*(x16));
    eetrans[1]=((((IkReal(-1.00000000000000))*(x2)*(x71)))+(((x0)*(x22)))+(((x14)*(x26)))+(((x15)*(x46)))+(((IkReal(-0.134000000000000))*(x2)))+(((x14)*(x30)))+(((IkReal(-1.00000000000000))*(x24)*(x31)))+(((x24)*(x32)))+(((x9)*(((((IkReal(0.0340000000000000))*(x0)*(x26)))+(((x0)*(x18)*(x5)))))))+(((IkReal(-1.00000000000000))*(x51)*(x71)))+(((x15)*(x2)))+(((x8)*(((((x2)*(x23)))+(((IkReal(-0.0240416305603426))*(x3)*(x51)))+(((IkReal(-0.0240416305603426))*(x55)))+(((x13)*(x2))))))));
    eerot[6]=((((x9)*(((x48)+(x47)))))+(((x40)*(x8))));
    eerot[7]=((((x11)*(x63)))+(((x10)*(((x49)+(x47))))));
    eerot[8]=((((x10)*(x63)))+(((x11)*(((((IkReal(-1.00000000000000))*(x49)))+(((IkReal(-1.00000000000000))*(x52))))))));
    eetrans[2]=((IkReal(0.540500000000000))+(((IkReal(-0.0800000000000000))*(x30)))+(((IkReal(-0.338000000000000))*(x31)))+(((IkReal(-0.0800000000000000))*(x26)))+(((x8)*(((((IkReal(0.0340000000000000))*(x48)))+(((IkReal(0.0340000000000000))*(x47)))))))+(((x3)*(x44)))+(((x9)*(((((IkReal(0.0340000000000000))*(x32)))+(((IkReal(-1.00000000000000))*(x18)*(x7)))))))+(((IkReal(0.338000000000000))*(x32)))+(((x1)*(x44)))+(((IkReal(-0.369000000000000))*(x6))));
}




bool IKSolver::ik(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions)
{
    j0=numeric_limits<IkReal>::quiet_NaN();
    _ij0[0] = -1;
    _ij0[1] = -1;
    _nj0 = -1;
    j1=numeric_limits<IkReal>::quiet_NaN();
    _ij1[0] = -1;
    _ij1[1] = -1;
    _nj1 = -1;
    j2=numeric_limits<IkReal>::quiet_NaN();
    _ij2[0] = -1;
    _ij2[1] = -1;
    _nj2 = -1;
    j3=numeric_limits<IkReal>::quiet_NaN();
    _ij3[0] = -1;
    _ij3[1] = -1;
    _nj3 = -1;
    j4=numeric_limits<IkReal>::quiet_NaN();
    _ij4[0] = -1;
    _ij4[1] = -1;
    _nj4 = -1;
    j5=numeric_limits<IkReal>::quiet_NaN();
    _ij5[0] = -1;
    _ij5[1] = -1;
    _nj5 = -1;
    for(int dummyiter = 0; dummyiter < 1; ++dummyiter)
    {
        solutions.Clear();
        r00 = eerot[0*3+0];
        r01 = eerot[0*3+1];
        r02 = eerot[0*3+2];
        r10 = eerot[1*3+0];
        r11 = eerot[1*3+1];
        r12 = eerot[1*3+2];
        r20 = eerot[2*3+0];
        r21 = eerot[2*3+1];
        r22 = eerot[2*3+2];
        px = eetrans[0];
        py = eetrans[1];
        pz = eetrans[2];

        new_r00=((IkReal(-1.00000000000000))*(r02));
        new_r01=r01;
        new_r02=r00;
        new_px=px;
        new_r10=((IkReal(-1.00000000000000))*(r12));
        new_r11=r11;
        new_r12=r10;
        new_py=py;
        new_r20=((IkReal(-1.00000000000000))*(r22));
        new_r21=r21;
        new_r22=r20;
        new_pz=((IkReal(-0.540500000000000))+(pz));
        r00 = new_r00;
        r01 = new_r01;
        r02 = new_r02;
        r10 = new_r10;
        r11 = new_r11;
        r12 = new_r12;
        r20 = new_r20;
        r21 = new_r21;
        r22 = new_r22;
        px = new_px;
        py = new_py;
        pz = new_pz;
        pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
        npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
        npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
        npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
        rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
        rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
        rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
        rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
        rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
        rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
        rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
        rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
        rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
        IkReal op[162], zeror[48];
        int numroots;
        IkReal x72=((IkReal(0.0100000000000000))*(r11));
        IkReal x73=((IkReal(0.0340000000000000))*(r10));
        IkReal x74=((IkReal(0.369000000000000))*(r21));
        IkReal x75=((IkReal(0.00804733727810651))*(r12));
        IkReal x76=((IkReal(0.236686390532544))*(rxp1_1));
        IkReal x77=((IkReal(0.134000000000000))*(r11));
        IkReal x78=((IkReal(0.0873372781065089))*(r01));
        IkReal x79=((IkReal(1.00000000000000))*(npy));
        IkReal x80=((IkReal(0.738000000000000))*(r20));
        IkReal x81=((IkReal(2.00000000000000))*(npx));
        IkReal x82=((IkReal(0.174674556213018))*(r00));
        IkReal x83=((IkReal(0.268000000000000))*(r10));
        IkReal x84=((IkReal(0.473372781065089))*(rxp0_1));
        IkReal x85=((IkReal(0.00118300000000000))*(r11));
        IkReal x86=((IkReal(0.268000000000000))*(npy));
        IkReal x87=((IkReal(0.0680000000000000))*(rxp2_1));
        IkReal x88=((IkReal(0.0988920000000000))*(r21));
        IkReal x89=((IkReal(0.738000000000000))*(rxp1_0));
        IkReal x90=((IkReal(0.0250920000000000))*(r02));
        IkReal x91=((IkReal(0.0501840000000000))*(r22));
        IkReal x92=((IkReal(0.197784000000000))*(r01));
        IkReal x93=((IkReal(1.47600000000000))*(rxp1_2));
        IkReal x94=((pp)*(r11));
        IkReal x95=((IkReal(0.197784000000000))*(r20));
        IkReal x96=((IkReal(0.00236600000000000))*(r10));
        IkReal x97=((IkReal(0.536000000000000))*(npx));
        IkReal x98=((IkReal(1.47600000000000))*(rxp0_0));
        IkReal x99=((IkReal(0.00911200000000000))*(r10));
        IkReal x100=((IkReal(0.0680000000000000))*(npx));
        IkReal x101=((IkReal(0.00174674556213018))*(r01));
        IkReal x102=((IkReal(0.0250920000000000))*(r20));
        IkReal x103=((IkReal(0.000160946745562130))*(r12));
        IkReal x104=((IkReal(0.268000000000000))*(py));
        IkReal x105=((IkReal(1.00000000000000))*(pp));
        IkReal x106=((IkReal(0.738000000000000))*(pz));
        IkReal x107=((IkReal(0.00473372781065089))*(rxp1_1));
        IkReal x108=((IkReal(1.47600000000000))*(px));
        IkReal x109=((IkReal(0.00349349112426036))*(r21));
        IkReal x110=((IkReal(0.0501840000000000))*(r00));
        IkReal x111=((IkReal(0.0182240000000000))*(r11));
        IkReal x112=((IkReal(0.136000000000000))*(npy));
        IkReal x113=((IkReal(0.00349349112426036))*(r00));
        IkReal x114=((IkReal(0.00946745562130178))*(rxp0_1));
        IkReal x115=((IkReal(0.0501840000000000))*(r21));
        IkReal x116=((IkReal(0.0540800000000000))*(r21));
        IkReal x117=((IkReal(0.738000000000000))*(rxp1_1));
        IkReal x118=((IkReal(0.0250920000000000))*(r12));
        IkReal x119=((IkReal(0.000680000000000000))*(r00));
        IkReal x120=((IkReal(0.0680000000000000))*(rxp2_0));
        IkReal x121=((IkReal(0.0200000000000000))*(px));
        IkReal x122=((IkReal(0.268000000000000))*(rxp1_2));
        IkReal x123=((IkReal(0.00911200000000000))*(r22));
        IkReal x124=((IkReal(0.0473290000000000))*(r01));
        IkReal x125=((IkReal(0.0182240000000000))*(r02));
        IkReal x126=((IkReal(0.00136000000000000))*(r20));
        IkReal x127=((IkReal(0.136000000000000))*(rxp2_2));
        IkReal x128=((IkReal(0.536000000000000))*(rxp1_0));
        IkReal x129=((IkReal(0.0946580000000000))*(r21));
        IkReal x130=((IkReal(0.0400000000000000))*(pz));
        IkReal x131=((IkReal(0.108160000000000))*(r01));
        IkReal x132=((IkReal(0.108160000000000))*(r20));
        IkReal x133=((IkReal(0.0946580000000000))*(r00));
        IkReal x134=((IkReal(0.536000000000000))*(rxp0_2));
        IkReal x135=((IkReal(1.47600000000000))*(rxp0_1));
        IkReal x136=((IkReal(0.00136000000000000))*(r01));
        IkReal x137=((pp)*(r01));
        IkReal x138=((IkReal(0.00911200000000000))*(r02));
        IkReal x139=((IkReal(0.738000000000000))*(npy));
        IkReal x140=((IkReal(0.268000000000000))*(rxp1_0));
        IkReal x141=((IkReal(0.0680000000000000))*(rxp2_2));
        IkReal x142=((IkReal(0.0988920000000000))*(r11));
        IkReal x143=((IkReal(0.000680000000000000))*(r20));
        IkReal x144=((IkReal(0.224993000000000))*(r21));
        IkReal x145=((IkReal(0.0200000000000000))*(pz));
        IkReal x146=((IkReal(0.0540800000000000))*(r01));
        IkReal x147=((IkReal(0.0400000000000000))*(px));
        IkReal x148=((IkReal(0.0182240000000000))*(r22));
        IkReal x149=((IkReal(0.536000000000000))*(rxp1_2));
        IkReal x150=((IkReal(0.108160000000000))*(r21));
        IkReal x151=((IkReal(0.136000000000000))*(rxp2_0));
        IkReal x152=((IkReal(0.449986000000000))*(r01));
        IkReal x153=((IkReal(0.00136000000000000))*(r00));
        IkReal x154=((IkReal(0.536000000000000))*(rxp0_0));
        IkReal x155=((IkReal(0.449986000000000))*(r20));
        IkReal x156=((IkReal(0.00136000000000000))*(r21));
        IkReal x157=((IkReal(0.108160000000000))*(r00));
        IkReal x158=((IkReal(1.47600000000000))*(npx));
        IkReal x159=((IkReal(0.197784000000000))*(r10));
        IkReal x160=((pp)*(r21));
        IkReal x161=((IkReal(0.0200000000000000))*(r01));
        IkReal x162=((IkReal(0.0680000000000000))*(r00));
        IkReal x163=((IkReal(2.00000000000000))*(px));
        IkReal x164=((IkReal(0.473372781065089))*(rxp1_0));
        IkReal x165=((IkReal(0.174674556213018))*(r11));
        IkReal x166=((IkReal(0.268000000000000))*(r01));
        IkReal x167=((IkReal(0.0160946745562130))*(r02));
        IkReal x168=((IkReal(0.946745562130177))*(rxp0_0));
        IkReal x169=((IkReal(0.536000000000000))*(r00));
        IkReal x170=((IkReal(0.349349112426036))*(r10));
        IkReal x171=((IkReal(0.00236600000000000))*(r01));
        IkReal x172=((IkReal(0.0501840000000000))*(r12));
        IkReal x173=((IkReal(1.47600000000000))*(rxp1_1));
        IkReal x174=((IkReal(0.00473200000000000))*(r00));
        IkReal x175=((IkReal(2.95200000000000))*(rxp0_1));
        IkReal x176=((IkReal(0.536000000000000))*(px));
        IkReal x177=((IkReal(0.000321893491124260))*(r02));
        IkReal x178=((IkReal(0.00349349112426036))*(r11));
        IkReal x179=((IkReal(0.00946745562130178))*(rxp1_0));
        IkReal x180=((IkReal(0.0182240000000000))*(r00));
        IkReal x181=((IkReal(2.95200000000000))*(py));
        IkReal x182=((IkReal(0.100368000000000))*(r10));
        IkReal x183=((IkReal(0.00698698224852071))*(r10));
        IkReal x184=((IkReal(0.0364480000000000))*(r01));
        IkReal x185=((IkReal(0.0189349112426036))*(rxp0_0));
        IkReal x186=((IkReal(0.136000000000000))*(rxp2_1));
        IkReal x187=((IkReal(0.00136000000000000))*(r10));
        IkReal x188=((IkReal(0.0400000000000000))*(py));
        IkReal x189=((IkReal(0.0501840000000000))*(r02));
        IkReal x190=((IkReal(0.0946580000000000))*(r11));
        IkReal x191=((IkReal(1.47600000000000))*(rxp1_0));
        IkReal x192=((IkReal(0.0364480000000000))*(r12));
        IkReal x193=((IkReal(1.07200000000000))*(rxp1_1));
        IkReal x194=((IkReal(0.216320000000000))*(r11));
        IkReal x195=((IkReal(2.95200000000000))*(rxp0_0));
        IkReal x196=((IkReal(0.00272000000000000))*(r11));
        IkReal x197=((IkReal(0.189316000000000))*(r10));
        IkReal x198=((IkReal(0.395568000000000))*(r00));
        IkReal x199=((IkReal(0.0182240000000000))*(r12));
        IkReal x200=((IkReal(0.536000000000000))*(rxp1_1));
        IkReal x201=((IkReal(0.108160000000000))*(r11));
        IkReal x202=((IkReal(0.0800000000000000))*(py));
        IkReal x203=((IkReal(0.00272000000000000))*(r10));
        IkReal x204=((IkReal(0.899972000000000))*(r11));
        IkReal x205=((IkReal(0.272000000000000))*(rxp2_1));
        IkReal x206=((IkReal(1.07200000000000))*(rxp0_1));
        IkReal x207=((IkReal(0.216320000000000))*(r10));
        IkReal x208=((IkReal(0.0680000000000000))*(r11));
        IkReal x209=((IkReal(0.0200000000000000))*(r10));
        IkReal x210=((IkReal(1.00000000000000))*(py));
        IkReal x211=((IkReal(0.174674556213018))*(r21));
        IkReal x212=((IkReal(0.738000000000000))*(r01));
        IkReal x213=((IkReal(0.349349112426036))*(r20));
        IkReal x214=((IkReal(1.47600000000000))*(r00));
        IkReal x215=((IkReal(2.95200000000000))*(rxp0_2));
        IkReal x216=((IkReal(0.100368000000000))*(r01));
        IkReal x217=((IkReal(0.00698698224852071))*(r20));
        IkReal x218=((IkReal(1.07200000000000))*(rxp0_0));
        IkReal x219=((IkReal(0.00272000000000000))*(r21));
        IkReal x220=((IkReal(0.189316000000000))*(r20));
        IkReal x221=((IkReal(0.216320000000000))*(r00));
        IkReal x222=((IkReal(0.00272000000000000))*(r01));
        IkReal x223=((IkReal(0.216320000000000))*(r20));
        IkReal x224=((IkReal(1.07200000000000))*(rxp0_2));
        IkReal x225=((IkReal(0.899972000000000))*(r00));
        IkReal x226=((IkReal(0.134000000000000))+(py));
        IkReal x227=((IkReal(-0.0100000000000000))+(npy));
        IkReal x228=((npy)*(px));
        IkReal x229=((npy)*(pz));
        IkReal x230=((npy)*(py));
        IkReal x231=((npx)*(py));
        IkReal x232=((IkReal(8.00000000000000))*(npx));
        IkReal x233=((pp)*(r10));
        IkReal x234=((IkReal(2.00000000000000))*(pp));
        IkReal x235=((IkReal(4.00000000000000))*(pp));
        IkReal x236=((IkReal(4.00000000000000))*(npx));
        IkReal x237=((IkReal(2.00000000000000))*(x230));
        IkReal x238=((IkReal(2.00000000000000))*(x233));
        IkReal x239=((IkReal(4.00000000000000))*(x231));
        IkReal x240=((IkReal(1.00000000000000))*(x94));
        IkReal x241=((npy)*(x163));
        IkReal x242=((IkReal(4.00000000000000))*(x229));
        IkReal x243=((IkReal(2.00000000000000))*(x160));
        IkReal x244=((r01)*(x105));
        IkReal x245=((px)*(x236));
        IkReal x246=((r00)*(x234));
        IkReal x247=((IkReal(2.00000000000000))*(x229));
        IkReal x248=((IkReal(2.00000000000000))*(x137));
        IkReal x249=((IkReal(4.00000000000000))*(x228));
        IkReal x250=((r21)*(x105));
        IkReal x251=((pz)*(x236));
        IkReal x252=((r20)*(x234));
        IkReal x253=((px)*(x232));
        IkReal x254=((r00)*(x235));
        IkReal x255=((IkReal(4.00000000000000))*(x230));
        IkReal x256=((IkReal(2.00000000000000))*(x94));
        IkReal x257=((IkReal(8.00000000000000))*(x231));
        IkReal x258=((IkReal(4.00000000000000))*(x233));
        IkReal x259=((IkReal(4.00000000000000))*(x94));
        IkReal x260=((IkReal(8.00000000000000))*(x230));
        IkReal x261=((r20)*(x235));
        IkReal x262=((pz)*(x232));
        IkReal x263=((IkReal(-0.0345290000000000))+(x101));
        IkReal x264=((IkReal(-0.00738000000000000))+(x141));
        IkReal x265=((IkReal(-0.0345290000000000))+(x107));
        IkReal x266=((IkReal(-0.0100000000000000))+(x78));
        IkReal x267=((IkReal(-0.00738000000000000))+(x145));
        IkReal x268=((x211)+(x212));
        IkReal x269=((x137)+(x116));
        IkReal x270=((x75)+(x74));
        IkReal x271=((x79)+(x78));
        IkReal x272=((x167)+(x165));
        IkReal x273=((x88)+(x90));
        IkReal x274=((x106)+(x102));
        IkReal x275=((x110)+(x109));
        IkReal x276=((x199)+(x200));
        IkReal x277=((x86)+(x94));
        IkReal x278=((x145)+(x139));
        IkReal x279=((x141)+(x138));
        IkReal x280=((x179)+(x178));
        IkReal x281=((x148)+(x149));
        IkReal x282=((x93)+(x92));
        IkReal x283=((x77)+(x76));
        IkReal x284=((x130)+(x128));
        IkReal x285=((x121)+(x118));
        IkReal x286=((x177)+(x176));
        IkReal x287=((x88)+(x87));
        IkReal x288=((x98)+(x95));
        IkReal x289=((x178)+(x180));
        IkReal x290=((x159)+(x158));
        IkReal x291=((x105)+(x99));
        IkReal x292=((x191)+(x188));
        IkReal x293=((x131)+(x127));
        IkReal x294=((x73)+(x72));
        IkReal x295=((x83)+(x84));
        IkReal x296=((x172)+(x151));
        IkReal x297=((x162)+(x161));
        IkReal x298=((x89)+(x90));
        IkReal x299=((x124)+(x121));
        IkReal x300=((x184)+(x185));
        IkReal x301=((x117)+(x116));
        IkReal x302=((x89)+(x87));
        IkReal x303=((x100)+(x99));
        IkReal x304=((x166)+(x164));
        IkReal x305=((x120)+(x118));
        IkReal x306=((x104)+(x103));
        IkReal x307=((x131)+(x130));
        IkReal x308=((x168)+(x169));
        IkReal x309=((x191)+(x186));
        IkReal x310=((x201)+(x92));
        IkReal x311=((x123)+(x116));
        IkReal x312=((x80)+(x81));
        IkReal x313=((x150)+(x148));
        IkReal x314=((x127)+(x128));
        IkReal x315=((x112)+(x115));
        IkReal x316=((x122)+(x123));
        IkReal x317=((x137)+(x124));
        IkReal x318=((x160)+(x140));
        IkReal x319=((x111)+(x114));
        IkReal x320=((x142)+(x138));
        IkReal x321=((x173)+(x248));
        IkReal x322=((x238)+(x97));
        IkReal x323=((IkReal(-0.00738000000000000))+(x160)+(x146));
        IkReal x324=((x147)+(x248));
        IkReal x325=((x139)+(x250));
        IkReal x326=((x122)+(x244));
        IkReal x327=((x254)+(x222));
        IkReal x328=((x132)+(x245));
        IkReal x329=((x119)+(x241));
        IkReal x330=((x253)+(x225));
        IkReal x331=((x156)+(x252));
        IkReal x332=((x187)+(x255));
        IkReal x333=((x190)+(x256));
        IkReal x334=((x171)+(x249));
        IkReal x335=((x174)+(x253));
        IkReal x336=((x126)+(x242));
        IkReal x337=((x239)+(x96));
        IkReal x338=((x124)+(x244));
        IkReal x339=((x151)+(x248));
        IkReal x340=((x129)+(x243));
        IkReal x341=((x237)+(x85));
        IkReal x342=((x240)+(x86));
        IkReal x343=((x145)+(x250));
        IkReal x344=((x134)+(x245));
        IkReal x345=((x124)+(x120)+(x117));
        IkReal x346=((x100)+(x306));
        IkReal x347=((x113)+(x319));
        IkReal x348=((x105)+(x107)+(x100));
        IkReal x349=((x341)+(x86));
        IkReal x350=((x125)+(x340));
        IkReal x351=((x197)+(x196)+(x258));
        IkReal x352=((x204)+(x203)+(x260));
        IkReal x353=((x155)+(x154)+(x251));
        IkReal x354=((x219)+(x220)+(x261));
        IkReal x355=((x157)+(x155)+(x251));
        IkReal x356=((x106)+(x107)+(x306));
        IkReal x357=((x134)+(x136)+(x133)+(x246));
        IkReal x358=((x143)+(x144)+(x146)+(x247));
        IkReal x359=((x153)+(x152)+(x151)+(x249));
        IkReal x360=((x140)+(x143)+(x144)+(x247));
        IkReal x361=((x136)+(x133)+(x132)+(x246));
        IkReal x362=((x153)+(x152)+(x147)+(x249));
        op[0]=((x226)+(x294));
        op[1]=((((IkReal(-1.00000000000000))*(x208)))+(x209));
        op[2]=((((IkReal(-1.00000000000000))*(x294)))+(x226));
        op[3]=IkReal(0);
        op[4]=IkReal(0);
        op[5]=IkReal(0);
        op[6]=IkReal(0);
        op[7]=IkReal(0);
        op[8]=IkReal(0);
        op[9]=((((IkReal(-1.00000000000000))*(x74)))+(((IkReal(-1.00000000000000))*(x79)))+(x266)+(x75)+(((IkReal(-1.00000000000000))*(x283))));
        op[10]=((((IkReal(-1.00000000000000))*(x295)))+(((IkReal(-1.00000000000000))*(x312)))+(x82));
        op[11]=((((IkReal(-1.00000000000000))*(x78)))+(x227)+(x270)+(x283));
        op[12]=x268;
        op[13]=((x213)+(x214));
        op[14]=((IkReal(-1.00000000000000))*(x268));
        op[15]=((IkReal(-0.0100000000000000))+(x270)+(((IkReal(-1.00000000000000))*(x271)))+(((IkReal(-1.00000000000000))*(x283))));
        op[16]=((((IkReal(-1.00000000000000))*(x295)))+(x80)+(((IkReal(-1.00000000000000))*(x81)))+(((IkReal(-1.00000000000000))*(x82))));
        op[17]=((((IkReal(-1.00000000000000))*(x74)))+(x227)+(x283)+(x75)+(x78));
        op[18]=((x302)+(x94)+(((IkReal(-1.00000000000000))*(x273)))+(((IkReal(-1.00000000000000))*(x349))));
        op[19]=((x238)+(x98)+(((IkReal(-1.00000000000000))*(x337)))+(((IkReal(-1.00000000000000))*(x97)))+(((IkReal(-1.00000000000000))*(x95))));
        op[20]=((((IkReal(-1.00000000000000))*(x298)))+(x349)+(x287)+(((IkReal(-1.00000000000000))*(x240))));
        op[21]=((x282)+(((IkReal(-1.00000000000000))*(x91))));
        op[22]=((x198)+(x215));
        op[23]=((((IkReal(-1.00000000000000))*(x91)))+(((IkReal(-1.00000000000000))*(x282))));
        op[24]=((x273)+(x87)+(x94)+(((IkReal(-1.00000000000000))*(x89)))+(((IkReal(-1.00000000000000))*(x349))));
        op[25]=((x238)+(x95)+(((IkReal(-1.00000000000000))*(x337)))+(((IkReal(-1.00000000000000))*(x97)))+(((IkReal(-1.00000000000000))*(x98))));
        op[26]=((x349)+(x298)+(x87)+(((IkReal(-1.00000000000000))*(x240)))+(((IkReal(-1.00000000000000))*(x88))));
        op[27]=((((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x291)))+(x265)+(((IkReal(-1.00000000000000))*(x274)))+(((IkReal(-1.00000000000000))*(x346))));
        op[28]=((((IkReal(-1.00000000000000))*(x113)))+(x319)+(x315));
        op[29]=((((IkReal(-1.00000000000000))*(x356)))+(((IkReal(-1.00000000000000))*(x105)))+(x102)+(x303)+(x263));
        op[30]=((((IkReal(-1.00000000000000))*(x109)))+(x110)+(x108));
        op[31]=((((IkReal(-1.00000000000000))*(x217)))+(((IkReal(-1.00000000000000))*(x216))));
        op[32]=((((IkReal(-1.00000000000000))*(x110)))+(x108)+(x109));
        op[33]=((((IkReal(-1.00000000000000))*(x291)))+(x107)+(x263)+(x274)+(((IkReal(-1.00000000000000))*(x346))));
        op[34]=((((IkReal(-1.00000000000000))*(x115)))+(x112)+(x347));
        op[35]=((IkReal(-0.0345290000000000))+(((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x107)))+(((IkReal(-1.00000000000000))*(x105)))+(((IkReal(-1.00000000000000))*(x102)))+(x106)+(x303)+(((IkReal(-1.00000000000000))*(x306))));
        op[36]=((((IkReal(-1.00000000000000))*(x329)))+(((IkReal(-1.00000000000000))*(x121)))+(((IkReal(-1.00000000000000))*(x123)))+(x122)+(x305)+(x317)+(((IkReal(-1.00000000000000))*(x301))));
        op[37]=((((IkReal(-1.00000000000000))*(x328)))+(x357)+(((IkReal(-1.00000000000000))*(x135))));
        op[38]=((((IkReal(-1.00000000000000))*(x299)))+(x305)+(x301)+(x329)+(((IkReal(-1.00000000000000))*(x316)))+(((IkReal(-1.00000000000000))*(x244))));
        op[39]=((x350)+(x293)+(((IkReal(-1.00000000000000))*(x336)))+(((IkReal(-1.00000000000000))*(x284))));
        op[40]=((x354)+(x221)+(((IkReal(-1.00000000000000))*(x218)))+(((IkReal(-1.00000000000000))*(x262))));
        op[41]=((x125)+(x336)+(x314)+(((IkReal(-1.00000000000000))*(x340)))+(((IkReal(-1.00000000000000))*(x307))));
        op[42]=((((IkReal(-1.00000000000000))*(x326)))+(x329)+(x311)+(x285)+(((IkReal(-1.00000000000000))*(x345))));
        op[43]=((((IkReal(-1.00000000000000))*(x357)))+(x328)+(((IkReal(-1.00000000000000))*(x135))));
        op[44]=((((IkReal(-1.00000000000000))*(x329)))+(((IkReal(-1.00000000000000))*(x116)))+(((IkReal(-1.00000000000000))*(x120)))+(x117)+(x317)+(x316)+(x285));
        op[45]=((((IkReal(-1.00000000000000))*(x142)))+(((IkReal(-1.00000000000000))*(x360)))+(x160)+(x146)+(x138)+(x264)+(((IkReal(-1.00000000000000))*(x278))));
        op[46]=((((IkReal(-1.00000000000000))*(x353)))+(((IkReal(-1.00000000000000))*(x290)))+(x157)+(x331));
        op[47]=((((IkReal(-1.00000000000000))*(x146)))+(x139)+(x320)+(x360)+(x264)+(((IkReal(-1.00000000000000))*(x343))));
        op[48]=((((IkReal(-1.00000000000000))*(x149)))+(x313)+(x362)+(((IkReal(-1.00000000000000))*(x339))));
        op[49]=((((IkReal(-1.00000000000000))*(x327)))+(x330)+(x223)+(((IkReal(-1.00000000000000))*(x224))));
        op[50]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x359)))+(x324)+(x281));
        op[51]=((((IkReal(-1.00000000000000))*(x142)))+(((IkReal(-1.00000000000000))*(x146)))+(((IkReal(-1.00000000000000))*(x325)))+(x360)+(x267)+(((IkReal(-1.00000000000000))*(x279))));
        op[52]=((((IkReal(-1.00000000000000))*(x157)))+(((IkReal(-1.00000000000000))*(x290)))+(x353)+(((IkReal(-1.00000000000000))*(x331))));
        op[53]=((((IkReal(-1.00000000000000))*(x360)))+(x160)+(x142)+(x146)+(x139)+(x267)+(((IkReal(-1.00000000000000))*(x279))));
        op[54]=((((IkReal(-1.00000000000000))*(x163)))+(((IkReal(-1.00000000000000))*(x297))));
        op[55]=((((IkReal(-0.0400000000000000))*(r00)))+(((IkReal(0.136000000000000))*(r01))));
        op[56]=((((IkReal(-1.00000000000000))*(x163)))+(x297));
        op[57]=IkReal(0);
        op[58]=IkReal(0);
        op[59]=IkReal(0);
        op[60]=IkReal(0);
        op[61]=IkReal(0);
        op[62]=IkReal(0);
        op[63]=((((IkReal(-1.00000000000000))*(x167)))+(x165)+(x304));
        op[64]=((x170)+(x308));
        op[65]=((((IkReal(-1.00000000000000))*(x272)))+(((IkReal(-1.00000000000000))*(x304))));
        op[66]=((IkReal(1.47600000000000))*(r11));
        op[67]=((IkReal(2.95200000000000))*(r10));
        op[68]=((IkReal(-1.47600000000000))*(r11));
        op[69]=((x304)+(((IkReal(-1.00000000000000))*(x272))));
        op[70]=((((IkReal(-1.00000000000000))*(x170)))+(x308));
        op[71]=((((IkReal(-1.00000000000000))*(x167)))+(x165)+(((IkReal(-1.00000000000000))*(x304))));
        op[72]=((((IkReal(-1.00000000000000))*(x296)))+(x173)+(x334)+(((IkReal(-1.00000000000000))*(x248))));
        op[73]=((x175)+(x335)+(((IkReal(-1.00000000000000))*(x254))));
        op[74]=((((IkReal(-1.00000000000000))*(x173)))+(((IkReal(-1.00000000000000))*(x296)))+(x248)+(((IkReal(-1.00000000000000))*(x334))));
        op[75]=((IkReal(0.395568000000000))*(r11));
        op[76]=((IkReal(0.791136000000000))*(r10));
        op[77]=((IkReal(-0.395568000000000))*(r11));
        op[78]=((((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x321)))+(x172)+(x334));
        op[79]=((((IkReal(-1.00000000000000))*(x175)))+(x335)+(((IkReal(-1.00000000000000))*(x254))));
        op[80]=((((IkReal(-1.00000000000000))*(x151)))+(x172)+(x321)+(((IkReal(-1.00000000000000))*(x334))));
        op[81]=((x180)+(x286)+(((IkReal(-1.00000000000000))*(x280))));
        op[82]=((((IkReal(-1.00000000000000))*(x183)))+(((IkReal(-1.00000000000000))*(x300))));
        op[83]=((((IkReal(-1.00000000000000))*(x180)))+(x286)+(x280));
        op[84]=((x181)+(x182));
        op[85]=((IkReal(-0.200736000000000))*(r11));
        op[86]=((((IkReal(-1.00000000000000))*(x182)))+(x181));
        op[87]=((((IkReal(-1.00000000000000))*(x179)))+(x289)+(x286));
        op[88]=((x183)+(((IkReal(-1.00000000000000))*(x300))));
        op[89]=((x179)+(x286)+(((IkReal(-1.00000000000000))*(x289))));
        op[90]=((((IkReal(-1.00000000000000))*(x189)))+(((IkReal(-1.00000000000000))*(x188)))+(x309)+(x333)+(((IkReal(-1.00000000000000))*(x332))));
        op[91]=((x195)+(x351)+(((IkReal(-1.00000000000000))*(x257))));
        op[92]=((((IkReal(-1.00000000000000))*(x189)))+(((IkReal(-1.00000000000000))*(x292)))+(x186)+(x332)+(((IkReal(-1.00000000000000))*(x333))));
        op[93]=((((IkReal(-1.00000000000000))*(x193)))+(x192)+(x194));
        op[94]=((((IkReal(-2.14400000000000))*(rxp0_1)))+(((IkReal(0.432640000000000))*(r10))));
        op[95]=((((IkReal(-1.00000000000000))*(x194)))+(x193)+(x192));
        op[96]=((((IkReal(-1.00000000000000))*(x186)))+(((IkReal(-1.00000000000000))*(x189)))+(x332)+(x292)+(((IkReal(-1.00000000000000))*(x333))));
        op[97]=((((IkReal(-1.00000000000000))*(x351)))+(x195)+(x257));
        op[98]=((((IkReal(-1.00000000000000))*(x189)))+(x188)+(x333)+(((IkReal(-1.00000000000000))*(x332)))+(((IkReal(-1.00000000000000))*(x309))));
        op[99]=((x199)+(((IkReal(-1.00000000000000))*(x200)))+(x310));
        op[100]=((x198)+(((IkReal(-1.00000000000000))*(x206)))+(x207));
        op[101]=((x276)+(((IkReal(-1.00000000000000))*(x310))));
        op[102]=((((IkReal(-1.00000000000000))*(x205)))+(x352)+(x202)+(((IkReal(-1.00000000000000))*(x259))));
        op[103]=((((IkReal(-8.00000000000000))*(x233)))+(((IkReal(1.79994400000000))*(r10)))+(((IkReal(-0.00544000000000000))*(r11)))+(((IkReal(16.0000000000000))*(x231))));
        op[104]=((((IkReal(-1.00000000000000))*(x352)))+(((IkReal(-1.00000000000000))*(x205)))+(x259)+(x202));
        op[105]=((((IkReal(-1.00000000000000))*(x199)))+(((IkReal(-1.00000000000000))*(x201)))+(x200)+(x92));
        op[106]=((x198)+(((IkReal(-1.00000000000000))*(x207)))+(x206));
        op[107]=((x201)+(((IkReal(-1.00000000000000))*(x92)))+(((IkReal(-1.00000000000000))*(x276))));
        op[108]=((IkReal(0.134000000000000))+(((IkReal(-1.00000000000000))*(x294)))+(((IkReal(-1.00000000000000))*(x210))));
        op[109]=((((IkReal(-1.00000000000000))*(x209)))+(x208));
        op[110]=((IkReal(0.134000000000000))+(x294)+(((IkReal(-1.00000000000000))*(x210))));
        op[111]=IkReal(0);
        op[112]=IkReal(0);
        op[113]=IkReal(0);
        op[114]=IkReal(0);
        op[115]=IkReal(0);
        op[116]=IkReal(0);
        op[117]=((IkReal(-0.0100000000000000))+(x283)+(((IkReal(-1.00000000000000))*(x271)))+(((IkReal(-1.00000000000000))*(x270))));
        op[118]=((x295)+(((IkReal(-1.00000000000000))*(x312)))+(((IkReal(-1.00000000000000))*(x82))));
        op[119]=((((IkReal(-1.00000000000000))*(x75)))+(x227)+(x74)+(x78)+(((IkReal(-1.00000000000000))*(x283))));
        op[120]=((x211)+(((IkReal(-1.00000000000000))*(x212))));
        op[121]=((x213)+(((IkReal(-1.00000000000000))*(x214))));
        op[122]=((x212)+(((IkReal(-1.00000000000000))*(x211))));
        op[123]=((((IkReal(-1.00000000000000))*(x75)))+(((IkReal(-1.00000000000000))*(x79)))+(x266)+(x283)+(x74));
        op[124]=((x295)+(x82)+(x80)+(((IkReal(-1.00000000000000))*(x81))));
        op[125]=((((IkReal(-1.00000000000000))*(x78)))+(x227)+(((IkReal(-1.00000000000000))*(x270)))+(((IkReal(-1.00000000000000))*(x283))));
        op[126]=((x341)+(x90)+(((IkReal(-1.00000000000000))*(x287)))+(((IkReal(-1.00000000000000))*(x89)))+(((IkReal(-1.00000000000000))*(x342))));
        op[127]=((((IkReal(-1.00000000000000))*(x322)))+(x337)+(((IkReal(-1.00000000000000))*(x288))));
        op[128]=((x277)+(x273)+(x89)+(((IkReal(-1.00000000000000))*(x87)))+(((IkReal(-1.00000000000000))*(x341))));
        op[129]=((x93)+(((IkReal(-1.00000000000000))*(x91)))+(((IkReal(-1.00000000000000))*(x92))));
        op[130]=((((IkReal(-1.00000000000000))*(x198)))+(x215));
        op[131]=((x92)+(((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x91))));
        op[132]=((x341)+(x88)+(x89)+(((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x87)))+(((IkReal(-1.00000000000000))*(x342))));
        op[133]=((((IkReal(-1.00000000000000))*(x322)))+(x337)+(x288));
        op[134]=((x277)+(((IkReal(-1.00000000000000))*(x273)))+(((IkReal(-1.00000000000000))*(x341)))+(((IkReal(-1.00000000000000))*(x302))));
        op[135]=((x306)+(x263)+(x99)+(((IkReal(-1.00000000000000))*(x274)))+(((IkReal(-1.00000000000000))*(x348))));
        op[136]=((x113)+(x315)+(((IkReal(-1.00000000000000))*(x319))));
        op[137]=((((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x106)))+(((IkReal(-1.00000000000000))*(x291)))+(x102)+(x346)+(x265));
        op[138]=((((IkReal(-1.00000000000000))*(x108)))+(((IkReal(-1.00000000000000))*(x275))));
        op[139]=((x216)+(((IkReal(-1.00000000000000))*(x217))));
        op[140]=((((IkReal(-1.00000000000000))*(x108)))+(x275));
        op[141]=((IkReal(-0.0345290000000000))+(((IkReal(-1.00000000000000))*(x101)))+(x306)+(x274)+(x99)+(((IkReal(-1.00000000000000))*(x348))));
        op[142]=((((IkReal(-1.00000000000000))*(x115)))+(x112)+(((IkReal(-1.00000000000000))*(x347))));
        op[143]=((((IkReal(-1.00000000000000))*(x102)))+(((IkReal(-1.00000000000000))*(x291)))+(x106)+(x107)+(x346)+(x263));
        op[144]=((x122)+(x121)+(x117)+(x329)+(((IkReal(-1.00000000000000))*(x311)))+(((IkReal(-1.00000000000000))*(x338)))+(((IkReal(-1.00000000000000))*(x305))));
        op[145]=((((IkReal(-1.00000000000000))*(x361)))+(x135)+(x344));
        op[146]=((((IkReal(-1.00000000000000))*(x329)))+(((IkReal(-1.00000000000000))*(x117)))+(x299)+(x269)+(((IkReal(-1.00000000000000))*(x316)))+(((IkReal(-1.00000000000000))*(x305))));
        op[147]=((((IkReal(-1.00000000000000))*(x125)))+(x314)+(x340)+(((IkReal(-1.00000000000000))*(x336)))+(((IkReal(-1.00000000000000))*(x307))));
        op[148]=((x354)+(x218)+(((IkReal(-1.00000000000000))*(x262)))+(((IkReal(-1.00000000000000))*(x221))));
        op[149]=((((IkReal(-1.00000000000000))*(x350)))+(x336)+(x293)+(((IkReal(-1.00000000000000))*(x284))));
        op[150]=((((IkReal(-1.00000000000000))*(x329)))+(((IkReal(-1.00000000000000))*(x122)))+(x123)+(x345)+(x269)+(((IkReal(-1.00000000000000))*(x285))));
        op[151]=((x135)+(x361)+(((IkReal(-1.00000000000000))*(x344))));
        op[152]=((x120)+(x329)+(x316)+(((IkReal(-1.00000000000000))*(x338)))+(((IkReal(-1.00000000000000))*(x285)))+(((IkReal(-1.00000000000000))*(x301))));
        op[153]=((((IkReal(-1.00000000000000))*(x358)))+(x142)+(x318)+(((IkReal(-1.00000000000000))*(x138)))+(x264)+(((IkReal(-1.00000000000000))*(x278))));
        op[154]=((((IkReal(-1.00000000000000))*(x158)))+(((IkReal(-1.00000000000000))*(x355)))+(x154)+(x159)+(x331));
        op[155]=((((IkReal(-1.00000000000000))*(x140)))+(((IkReal(-1.00000000000000))*(x320)))+(x139)+(x358)+(x264)+(((IkReal(-1.00000000000000))*(x343))));
        op[156]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x362)))+(x339)+(x313));
        op[157]=((x327)+(x223)+(((IkReal(-1.00000000000000))*(x330)))+(((IkReal(-1.00000000000000))*(x224))));
        op[158]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x324)))+(x359)+(x281));
        op[159]=((((IkReal(-1.00000000000000))*(x141)))+(((IkReal(-1.00000000000000))*(x140)))+(((IkReal(-1.00000000000000))*(x325)))+(x320)+(x358)+(x267));
        op[160]=((((IkReal(-1.00000000000000))*(x154)))+(((IkReal(-1.00000000000000))*(x158)))+(x159)+(x355)+(((IkReal(-1.00000000000000))*(x331))));
        op[161]=((((IkReal(-1.00000000000000))*(x142)))+(((IkReal(-1.00000000000000))*(x141)))+(((IkReal(-1.00000000000000))*(x358)))+(x139)+(x138)+(x318)+(x267));
        solvedialyticpoly12qep(op,zeror,numroots);
        IkReal j0array[16], cj0array[16], sj0array[16], j1array[16], cj1array[16], sj1array[16], j5array[16], cj5array[16], sj5array[16];
        int numsolutions = 0;
        for(int ij0 = 0; ij0 < numroots; ij0 += 3)
        {
            IkReal htj0 = zeror[ij0+0], htj1 = zeror[ij0+1], htj5 = zeror[ij0+2];
            j0array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj0)));
            j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
            j5array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj5)));
            IkReal x363=(htj0)*(htj0);
            IkReal x364=(htj1)*(htj1);
            IkReal x365=(htj5)*(htj5);
            cj0array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x363))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x363)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x363))))));
            cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x364))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x364)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x364))))));
            cj5array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x365))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x365)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x365))))));
            sj0array[numsolutions]=((IkReal(2.00000000000000))*(htj0)*(((IKabs(((IkReal(1.00000000000000))+((htj0)*(htj0)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj0)*(htj0))))):(IkReal)1.0e30)));
            sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
            sj5array[numsolutions]=((IkReal(2.00000000000000))*(htj5)*(((IKabs(((IkReal(1.00000000000000))+((htj5)*(htj5)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj5)*(htj5))))):(IkReal)1.0e30)));
            if( j0array[numsolutions] > IKPI )
            {
                j0array[numsolutions]-=IK2PI;
            }
            else if( j0array[numsolutions] < -IKPI )
            {
                j0array[numsolutions]+=IK2PI;
            }
            if( j1array[numsolutions] > IKPI )
            {
                j1array[numsolutions]-=IK2PI;
            }
            else if( j1array[numsolutions] < -IKPI )
            {
                j1array[numsolutions]+=IK2PI;
            }
            if( j5array[numsolutions] > IKPI )
            {
                j5array[numsolutions]-=IK2PI;
            }
            else if( j5array[numsolutions] < -IKPI )
            {
                j5array[numsolutions]+=IK2PI;
            }
            numsolutions++;
        }
        bool j0valid[16]= {true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
        _nj0 = 16;
        _nj1 = 1;
        _nj5 = 1;
        for(int ij0 = 0; ij0 < numsolutions; ++ij0)
        {
            if( !j0valid[ij0] )
            {
                continue;
            }
            _ij0[0] = ij0;
            _ij0[1] = -1;
            _ij1[0] = 0;
            _ij1[1] = -1;
            _ij5[0] = 0;
            _ij5[1] = -1;
            for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
            {
                if( !j0valid[iij0] )
                {
                    continue;
                }
                if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj1array[ij0]-cj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij0]-sj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij0]-cj5array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij0]-sj5array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
                {
                    j0valid[iij0]=false;
                    _ij0[1] = iij0;
                    _ij1[1] = 0;
                    _ij5[1] = 0;
                    break;
                }
            }
            j0 = j0array[ij0];
            cj0 = cj0array[ij0];
            sj0 = sj0array[ij0];

            j1 = j1array[ij0];
            cj1 = cj1array[ij0];
            sj1 = sj1array[ij0];

            j5 = j5array[ij0];
            cj5 = cj5array[ij0];
            sj5 = sj5array[ij0];

            {
                IkReal j3array[2], cj3array[2], sj3array[2];
                bool j3valid[2]= {false};
                _nj3 = 2;
                IkReal x366=((IkReal(1.00000000000000))*(cj0));
                if( (((((IkReal(-1.00000000000000))*(r00)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj0)))+(((cj5)*(r11)*(x366)))+(((r10)*(sj5)*(x366))))) < -1-IKFAST_SINCOS_THRESH || (((((IkReal(-1.00000000000000))*(r00)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj0)))+(((cj5)*(r11)*(x366)))+(((r10)*(sj5)*(x366))))) > 1+IKFAST_SINCOS_THRESH )
                    continue;
                IkReal x367=IKasin(((((IkReal(-1.00000000000000))*(r00)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj0)))+(((cj5)*(r11)*(x366)))+(((r10)*(sj5)*(x366)))));
                j3array[0]=((IkReal(-2.35619449019234))+(((IkReal(-1.00000000000000))*(x367))));
                sj3array[0]=IKsin(j3array[0]);
                cj3array[0]=IKcos(j3array[0]);
                j3array[1]=((IkReal(0.785398163397448))+(((IkReal(1.00000000000000))*(x367))));
                sj3array[1]=IKsin(j3array[1]);
                cj3array[1]=IKcos(j3array[1]);
                if( j3array[0] > IKPI )
                {
                    j3array[0]-=IK2PI;
                }
                else if( j3array[0] < -IKPI )
                {
                    j3array[0]+=IK2PI;
                }
                j3valid[0] = true;
                if( j3array[1] > IKPI )
                {
                    j3array[1]-=IK2PI;
                }
                else if( j3array[1] < -IKPI )
                {
                    j3array[1]+=IK2PI;
                }
                j3valid[1] = true;
                for(int ij3 = 0; ij3 < 2; ++ij3)
                {
                    if( !j3valid[ij3] )
                    {
                        continue;
                    }
                    _ij3[0] = ij3;
                    _ij3[1] = -1;
                    for(int iij3 = ij3+1; iij3 < 2; ++iij3)
                    {
                        if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
                        {
                            j3valid[iij3]=false;
                            _ij3[1] = iij3;
                            break;
                        }
                    }
                    j3 = j3array[ij3];
                    cj3 = cj3array[ij3];
                    sj3 = sj3array[ij3];
                    {
                        IkReal evalcond[1];
                        IkReal x368=((IkReal(0.0340000000000000))*(cj5));
                        IkReal x369=((IkReal(0.0340000000000000))*(sj5));
                        evalcond[0]=((IkReal(0.134000000000000))+(((IkReal(-0.00707106781186548))*(IKcos(j3))))+(((cj0)*(r10)*(x368)))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x368)))+(((IkReal(0.00707106781186548))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x369)))+(((r01)*(sj0)*(x369)))+(((IkReal(-1.00000000000000))*(px)*(sj0)))+(((cj0)*(py))));
                        if( IKabs(evalcond[0]) > 0.000001  )
                        {
                            continue;
                        }
                    }

                    {
                        IkReal dummyeval[1];
                        IkReal gconst1;
                        gconst1=IKsign(((((IkReal(0.707106781186548))*(sj3)))+(((IkReal(0.707106781186548))*(cj3)))));
                        dummyeval[0]=((sj3)+(cj3));
                        if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                        {
                            {
                                IkReal dummyeval[1];
                                IkReal gconst0;
                                gconst0=IKsign(((((IkReal(-0.707106781186548))*(cj3)))+(((IkReal(-0.707106781186548))*(sj3)))));
                                dummyeval[0]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj3))));
                                if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                {
                                    {
                                        IkReal evalcond[7];
                                        IkReal x370=((IkReal(1.00000000000000))*(sj0));
                                        IkReal x371=((r00)*(sj5));
                                        IkReal x372=((cj5)*(r01));
                                        IkReal x373=((IkReal(0.0340000000000000))*(cj5));
                                        IkReal x374=((cj0)*(r10));
                                        IkReal x375=((cj0)*(cj1));
                                        IkReal x376=((cj1)*(cj5));
                                        IkReal x377=((sj1)*(sj5));
                                        IkReal x378=((cj5)*(r11));
                                        IkReal x379=((cj1)*(sj5));
                                        IkReal x380=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                        IkReal x381=((r01)*(sj0)*(sj5));
                                        IkReal x382=((cj0)*(r11)*(sj5));
                                        evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(0.785398163397448))+(j3)), IkReal(6.28318530717959))));
                                        evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x370)))+(((cj0)*(r12))));
                                        evalcond[2]=((IkReal(-1.00000000167803))+(((IkReal(-1.00000000000000))*(x370)*(x372)))+(((IkReal(-1.00000000000000))*(x370)*(x371)))+(((sj5)*(x374)))+(((cj0)*(x378))));
                                        evalcond[3]=((((cj5)*(x374)))+(x381)+(((IkReal(-1.00000000000000))*(x382)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x370))));
                                        evalcond[4]=((IkReal(0.144000000016780))+(((IkReal(-0.0340000000000000))*(x382)))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x373)))+(((cj0)*(py)))+(((x373)*(x374)))+(((IkReal(-1.00000000000000))*(px)*(x370)))+(((IkReal(0.0340000000000000))*(x381))));
                                        evalcond[5]=((((r10)*(sj0)*(x379)))+(((r20)*(x377)))+(((cj5)*(r21)*(sj1)))+(((x372)*(x375)))+(((r11)*(sj0)*(x376)))+(((x371)*(x375))));
                                        evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x370)*(x377)))+(((r20)*(x379)))+(((IkReal(-1.00000000000000))*(sj1)*(x370)*(x378)))+(((r21)*(x376)))+(((IkReal(-1.00000000000000))*(x371)*(x380)))+(((IkReal(-1.00000000000000))*(x372)*(x380))));
                                        if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
                                        {
                                            {
                                                IkReal j2array[1], cj2array[1], sj2array[1];
                                                bool j2valid[1]= {false};
                                                _nj2 = 1;
                                                IkReal x383=((cj1)*(cj5));
                                                IkReal x384=((IkReal(0.0225456715626140))*(r20));
                                                IkReal x385=((IkReal(0.0952554623520440))*(sj0));
                                                IkReal x386=((cj5)*(sj1));
                                                IkReal x387=((cj0)*(r00));
                                                IkReal x388=((r11)*(sj5));
                                                IkReal x389=((IkReal(0.0225456715626140))*(sj0));
                                                IkReal x390=((IkReal(2.80163124564835))*(sj1));
                                                IkReal x391=((IkReal(0.0952554623520440))*(sj5));
                                                IkReal x392=((cj1)*(r21));
                                                IkReal x393=((IkReal(0.0952554623520440))*(r20));
                                                IkReal x394=((py)*(sj0));
                                                IkReal x395=((IkReal(2.80163124564835))*(cj1));
                                                IkReal x396=((cj0)*(px));
                                                IkReal x397=((IkReal(0.663107987135705))*(sj1));
                                                IkReal x398=((IkReal(0.0225456715626140))*(sj5));
                                                IkReal x399=((r21)*(sj1));
                                                IkReal x400=((IkReal(0.663107987135705))*(cj1));
                                                IkReal x401=((cj0)*(r01)*(sj1));
                                                IkReal x402=((cj0)*(cj1)*(r01));
                                                if( IKabs(((IkReal(-0.244686847253075))+(((r10)*(x383)*(x385)))+(((IkReal(-1.00000000000000))*(cj1)*(x385)*(x388)))+(((x395)*(x396)))+(((r10)*(x386)*(x389)))+(((x394)*(x395)))+(((x394)*(x397)))+(((IkReal(-1.00000000000000))*(sj1)*(x388)*(x389)))+(((pz)*(x390)))+(((x396)*(x397)))+(((IkReal(-1.00000000000000))*(x391)*(x399)))+(((IkReal(-1.00000000000000))*(x391)*(x402)))+(((IkReal(-1.00000000000000))*(x398)*(x401)))+(((IkReal(0.0225456715626140))*(x386)*(x387)))+(((IkReal(-1.00000000000000))*(pz)*(x400)))+(((x386)*(x393)))+(((x392)*(x398)))+(((IkReal(0.0952554623520440))*(x383)*(x387)))+(((IkReal(-1.00000000000000))*(x383)*(x384))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.03380192964424))+(((IkReal(-0.0225456715626140))*(x383)*(x387)))+(((cj1)*(x388)*(x389)))+(((IkReal(-1.00000000000000))*(sj1)*(x385)*(x388)))+(((x398)*(x399)))+(((IkReal(-1.00000000000000))*(x394)*(x400)))+(((IkReal(-1.00000000000000))*(x384)*(x386)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(pz)*(x397)))+(((IkReal(-1.00000000000000))*(pz)*(x395)))+(((IkReal(-1.00000000000000))*(x391)*(x401)))+(((IkReal(-1.00000000000000))*(x383)*(x393)))+(((IkReal(-1.00000000000000))*(x396)*(x400)))+(((x398)*(x402)))+(((r10)*(x385)*(x386)))+(((x390)*(x394)))+(((x390)*(x396)))+(((IkReal(0.0952554623520440))*(x386)*(x387)))+(((IkReal(-1.00000000000000))*(r10)*(x383)*(x389))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-0.244686847253075))+(((r10)*(x383)*(x385)))+(((IkReal(-1.00000000000000))*(cj1)*(x385)*(x388)))+(((x395)*(x396)))+(((r10)*(x386)*(x389)))+(((x394)*(x395)))+(((x394)*(x397)))+(((IkReal(-1.00000000000000))*(sj1)*(x388)*(x389)))+(((pz)*(x390)))+(((x396)*(x397)))+(((IkReal(-1.00000000000000))*(x391)*(x399)))+(((IkReal(-1.00000000000000))*(x391)*(x402)))+(((IkReal(-1.00000000000000))*(x398)*(x401)))+(((IkReal(0.0225456715626140))*(x386)*(x387)))+(((IkReal(-1.00000000000000))*(pz)*(x400)))+(((x386)*(x393)))+(((x392)*(x398)))+(((IkReal(0.0952554623520440))*(x383)*(x387)))+(((IkReal(-1.00000000000000))*(x383)*(x384)))))+IKsqr(((IkReal(-1.03380192964424))+(((IkReal(-0.0225456715626140))*(x383)*(x387)))+(((cj1)*(x388)*(x389)))+(((IkReal(-1.00000000000000))*(sj1)*(x385)*(x388)))+(((x398)*(x399)))+(((IkReal(-1.00000000000000))*(x394)*(x400)))+(((IkReal(-1.00000000000000))*(x384)*(x386)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(pz)*(x397)))+(((IkReal(-1.00000000000000))*(pz)*(x395)))+(((IkReal(-1.00000000000000))*(x391)*(x401)))+(((IkReal(-1.00000000000000))*(x383)*(x393)))+(((IkReal(-1.00000000000000))*(x396)*(x400)))+(((x398)*(x402)))+(((r10)*(x385)*(x386)))+(((x390)*(x394)))+(((x390)*(x396)))+(((IkReal(0.0952554623520440))*(x386)*(x387)))+(((IkReal(-1.00000000000000))*(r10)*(x383)*(x389)))))-1) <= IKFAST_SINCOS_THRESH )
                                                    continue;
                                                j2array[0]=IKatan2(((IkReal(-0.244686847253075))+(((r10)*(x383)*(x385)))+(((IkReal(-1.00000000000000))*(cj1)*(x385)*(x388)))+(((x395)*(x396)))+(((r10)*(x386)*(x389)))+(((x394)*(x395)))+(((x394)*(x397)))+(((IkReal(-1.00000000000000))*(sj1)*(x388)*(x389)))+(((pz)*(x390)))+(((x396)*(x397)))+(((IkReal(-1.00000000000000))*(x391)*(x399)))+(((IkReal(-1.00000000000000))*(x391)*(x402)))+(((IkReal(-1.00000000000000))*(x398)*(x401)))+(((IkReal(0.0225456715626140))*(x386)*(x387)))+(((IkReal(-1.00000000000000))*(pz)*(x400)))+(((x386)*(x393)))+(((x392)*(x398)))+(((IkReal(0.0952554623520440))*(x383)*(x387)))+(((IkReal(-1.00000000000000))*(x383)*(x384)))), ((IkReal(-1.03380192964424))+(((IkReal(-0.0225456715626140))*(x383)*(x387)))+(((cj1)*(x388)*(x389)))+(((IkReal(-1.00000000000000))*(sj1)*(x385)*(x388)))+(((x398)*(x399)))+(((IkReal(-1.00000000000000))*(x394)*(x400)))+(((IkReal(-1.00000000000000))*(x384)*(x386)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(pz)*(x397)))+(((IkReal(-1.00000000000000))*(pz)*(x395)))+(((IkReal(-1.00000000000000))*(x391)*(x401)))+(((IkReal(-1.00000000000000))*(x383)*(x393)))+(((IkReal(-1.00000000000000))*(x396)*(x400)))+(((x398)*(x402)))+(((r10)*(x385)*(x386)))+(((x390)*(x394)))+(((x390)*(x396)))+(((IkReal(0.0952554623520440))*(x386)*(x387)))+(((IkReal(-1.00000000000000))*(r10)*(x383)*(x389)))));
                                                sj2array[0]=IKsin(j2array[0]);
                                                cj2array[0]=IKcos(j2array[0]);
                                                if( j2array[0] > IKPI )
                                                {
                                                    j2array[0]-=IK2PI;
                                                }
                                                else if( j2array[0] < -IKPI )
                                                {
                                                    j2array[0]+=IK2PI;
                                                }
                                                j2valid[0] = true;
                                                for(int ij2 = 0; ij2 < 1; ++ij2)
                                                {
                                                    if( !j2valid[ij2] )
                                                    {
                                                        continue;
                                                    }
                                                    _ij2[0] = ij2;
                                                    _ij2[1] = -1;
                                                    for(int iij2 = ij2+1; iij2 < 1; ++iij2)
                                                    {
                                                        if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
                                                        {
                                                            j2valid[iij2]=false;
                                                            _ij2[1] = iij2;
                                                            break;
                                                        }
                                                    }
                                                    j2 = j2array[ij2];
                                                    cj2 = cj2array[ij2];
                                                    sj2 = sj2array[ij2];
                                                    {
                                                        IkReal evalcond[2];
                                                        IkReal x403=IKsin(j2);
                                                        IkReal x404=IKcos(j2);
                                                        IkReal x405=((IkReal(0.0340000000000000))*(cj1));
                                                        IkReal x406=((r21)*(sj5));
                                                        IkReal x407=((cj0)*(sj1));
                                                        IkReal x408=((IkReal(0.0340000000000000))*(sj1));
                                                        IkReal x409=((cj5)*(r20));
                                                        IkReal x410=((r01)*(sj5));
                                                        IkReal x411=((py)*(sj0));
                                                        IkReal x412=((cj0)*(cj5)*(r00));
                                                        IkReal x413=((r11)*(sj0)*(sj5));
                                                        IkReal x414=((cj5)*(r10)*(sj0));
                                                        evalcond[0]=((((IkReal(-0.338000000000000))*(x403)))+(((IkReal(-1.00000000000000))*(x406)*(x408)))+(((x405)*(x414)))+(((x405)*(x412)))+(((IkReal(0.0800000000000000))*(x404)))+(((x408)*(x409)))+(((IkReal(-1.00000000000000))*(cj0)*(x405)*(x410)))+(((cj0)*(cj1)*(px)))+(((IkReal(-1.00000000000000))*(x405)*(x413)))+(((pz)*(sj1)))+(((cj1)*(x411))));
                                                        evalcond[1]=((IkReal(0.369000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x411)))+(((x405)*(x409)))+(((IkReal(0.0800000000000000))*(x403)))+(((IkReal(0.0340000000000000))*(x407)*(x410)))+(((x408)*(x413)))+(((cj1)*(pz)))+(((IkReal(-1.00000000000000))*(px)*(x407)))+(((IkReal(0.338000000000000))*(x404)))+(((IkReal(-1.00000000000000))*(x405)*(x406)))+(((IkReal(-0.0340000000000000))*(cj5)*(r00)*(x407)))+(((IkReal(-1.00000000000000))*(x408)*(x414))));
                                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
                                                        {
                                                            continue;
                                                        }
                                                    }

                                                    {
                                                        IkReal dummyeval[1];
                                                        IkReal gconst7;
                                                        gconst7=IKsign(((((IkReal(1.24999999580492e+15))*((sj2)*(sj2))))+(((IkReal(1.25000000000000e+15))*((cj2)*(cj2))))));
                                                        dummyeval[0]=(((sj2)*(sj2))+(((IkReal(1.00000000335606))*((cj2)*(cj2)))));
                                                        if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                        {
                                                            {
                                                                IkReal dummyeval[1];
                                                                dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
                                                                if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                {
                                                                    continue;

                                                                }
                                                                else
                                                                {
                                                                    {
                                                                        IkReal j4array[1], cj4array[1], sj4array[1];
                                                                        bool j4valid[1]= {false};
                                                                        _nj4 = 1;
                                                                        IkReal x415=(cj2)*(cj2);
                                                                        IkReal x416=(sj2)*(sj2);
                                                                        IkReal x417=((cj1)*(sj2));
                                                                        IkReal x418=((cj0)*(r02));
                                                                        IkReal x419=((IkReal(49999999.9160984))*(r22));
                                                                        IkReal x420=((r12)*(sj0));
                                                                        IkReal x421=((cj1)*(cj2));
                                                                        IkReal x422=((sj1)*(sj2));
                                                                        IkReal x423=((cj2)*(sj1));
                                                                        if( IKabs(((((IKabs(((x416)+(x415))) != 0)?((IkReal)1/(((x416)+(x415)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x417)*(x418)))+(((IkReal(-1.00000000000000))*(x420)*(x423)))+(((IkReal(-1.00000000000000))*(x418)*(x423)))+(((IkReal(-1.00000000000000))*(x417)*(x420)))+(((IkReal(-1.00000000000000))*(r22)*(x422)))+(((r22)*(x421))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-50000000.0000000))*(x416)))+(((IkReal(-50000000.0000000))*(x415))))) != 0)?((IkReal)1/(((((IkReal(-50000000.0000000))*(x416)))+(((IkReal(-50000000.0000000))*(x415)))))):(IkReal)1.0e30))*(((((IkReal(49999999.9160984))*(x418)*(x421)))+(((x419)*(x423)))+(((x417)*(x419)))+(((IkReal(49999999.9160984))*(x420)*(x421)))+(((IkReal(-49999999.9160984))*(x418)*(x422)))+(((IkReal(-49999999.9160984))*(x420)*(x422))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x416)+(x415))) != 0)?((IkReal)1/(((x416)+(x415)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x417)*(x418)))+(((IkReal(-1.00000000000000))*(x420)*(x423)))+(((IkReal(-1.00000000000000))*(x418)*(x423)))+(((IkReal(-1.00000000000000))*(x417)*(x420)))+(((IkReal(-1.00000000000000))*(r22)*(x422)))+(((r22)*(x421)))))))+IKsqr(((((IKabs(((((IkReal(-50000000.0000000))*(x416)))+(((IkReal(-50000000.0000000))*(x415))))) != 0)?((IkReal)1/(((((IkReal(-50000000.0000000))*(x416)))+(((IkReal(-50000000.0000000))*(x415)))))):(IkReal)1.0e30))*(((((IkReal(49999999.9160984))*(x418)*(x421)))+(((x419)*(x423)))+(((x417)*(x419)))+(((IkReal(49999999.9160984))*(x420)*(x421)))+(((IkReal(-49999999.9160984))*(x418)*(x422)))+(((IkReal(-49999999.9160984))*(x420)*(x422)))))))-1) <= IKFAST_SINCOS_THRESH )
                                                                            continue;
                                                                        j4array[0]=IKatan2(((((IKabs(((x416)+(x415))) != 0)?((IkReal)1/(((x416)+(x415)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x417)*(x418)))+(((IkReal(-1.00000000000000))*(x420)*(x423)))+(((IkReal(-1.00000000000000))*(x418)*(x423)))+(((IkReal(-1.00000000000000))*(x417)*(x420)))+(((IkReal(-1.00000000000000))*(r22)*(x422)))+(((r22)*(x421)))))), ((((IKabs(((((IkReal(-50000000.0000000))*(x416)))+(((IkReal(-50000000.0000000))*(x415))))) != 0)?((IkReal)1/(((((IkReal(-50000000.0000000))*(x416)))+(((IkReal(-50000000.0000000))*(x415)))))):(IkReal)1.0e30))*(((((IkReal(49999999.9160984))*(x418)*(x421)))+(((x419)*(x423)))+(((x417)*(x419)))+(((IkReal(49999999.9160984))*(x420)*(x421)))+(((IkReal(-49999999.9160984))*(x418)*(x422)))+(((IkReal(-49999999.9160984))*(x420)*(x422)))))));
                                                                        sj4array[0]=IKsin(j4array[0]);
                                                                        cj4array[0]=IKcos(j4array[0]);
                                                                        if( j4array[0] > IKPI )
                                                                        {
                                                                            j4array[0]-=IK2PI;
                                                                        }
                                                                        else if( j4array[0] < -IKPI )
                                                                        {
                                                                            j4array[0]+=IK2PI;
                                                                        }
                                                                        j4valid[0] = true;
                                                                        for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                        {
                                                                            if( !j4valid[ij4] )
                                                                            {
                                                                                continue;
                                                                            }
                                                                            _ij4[0] = ij4;
                                                                            _ij4[1] = -1;
                                                                            for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                            {
                                                                                if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                {
                                                                                    j4valid[iij4]=false;
                                                                                    _ij4[1] = iij4;
                                                                                    break;
                                                                                }
                                                                            }
                                                                            j4 = j4array[ij4];
                                                                            cj4 = cj4array[ij4];
                                                                            sj4 = sj4array[ij4];
                                                                            {
                                                                                IkReal evalcond[4];
                                                                                IkReal x424=IKcos(j4);
                                                                                IkReal x425=IKsin(j4);
                                                                                IkReal x426=((cj1)*(cj5));
                                                                                IkReal x427=((r10)*(sj0));
                                                                                IkReal x428=((IkReal(1.00000000000000))*(sj1));
                                                                                IkReal x429=((r21)*(sj5));
                                                                                IkReal x430=((r12)*(sj0));
                                                                                IkReal x431=((cj0)*(r02));
                                                                                IkReal x432=((IkReal(1.00000000000000))*(cj1));
                                                                                IkReal x433=((cj0)*(r00));
                                                                                IkReal x434=((cj2)*(x425));
                                                                                IkReal x435=((cj0)*(r01)*(sj5));
                                                                                IkReal x436=((sj2)*(x425));
                                                                                IkReal x437=((r11)*(sj0)*(sj5));
                                                                                IkReal x438=((sj2)*(x424));
                                                                                IkReal x439=((cj2)*(x424));
                                                                                evalcond[0]=((((cj1)*(x430)))+(((cj1)*(x431)))+(((r22)*(sj1)))+(((IkReal(1.00000000167803))*(x439)))+(x436));
                                                                                evalcond[1]=((((IkReal(-1.00000000000000))*(x434)))+(((IkReal(1.00000000167803))*(x438)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x428)*(x430)))+(((IkReal(-1.00000000000000))*(x428)*(x431))));
                                                                                evalcond[2]=((((x426)*(x427)))+(((x426)*(x433)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x432)*(x437)))+(((IkReal(-1.00000000000000))*(x432)*(x435)))+(x438)+(((IkReal(-1.00000000000000))*(x428)*(x429)))+(((IkReal(-1.00000000167803))*(x434))));
                                                                                evalcond[3]=((((r20)*(x426)))+(((IkReal(-1.00000000000000))*(x439)))+(((IkReal(-1.00000000000000))*(cj5)*(x428)*(x433)))+(((IkReal(-1.00000000000000))*(x429)*(x432)))+(((IkReal(-1.00000000000000))*(cj5)*(x427)*(x428)))+(((IkReal(-1.00000000167803))*(x436)))+(((sj1)*(x437)))+(((sj1)*(x435))));
                                                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                {
                                                                                    continue;
                                                                                }
                                                                            }

                                                                            {
                                                                                std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                vinfos[0].jointtype = 1;
                                                                                vinfos[0].foffset = j0;
                                                                                vinfos[0].indices[0] = _ij0[0];
                                                                                vinfos[0].indices[1] = _ij0[1];
                                                                                vinfos[0].maxsolutions = _nj0;
                                                                                vinfos[1].jointtype = 1;
                                                                                vinfos[1].foffset = j1;
                                                                                vinfos[1].indices[0] = _ij1[0];
                                                                                vinfos[1].indices[1] = _ij1[1];
                                                                                vinfos[1].maxsolutions = _nj1;
                                                                                vinfos[2].jointtype = 1;
                                                                                vinfos[2].foffset = j2;
                                                                                vinfos[2].indices[0] = _ij2[0];
                                                                                vinfos[2].indices[1] = _ij2[1];
                                                                                vinfos[2].maxsolutions = _nj2;
                                                                                vinfos[3].jointtype = 1;
                                                                                vinfos[3].foffset = j3;
                                                                                vinfos[3].indices[0] = _ij3[0];
                                                                                vinfos[3].indices[1] = _ij3[1];
                                                                                vinfos[3].maxsolutions = _nj3;
                                                                                vinfos[4].jointtype = 1;
                                                                                vinfos[4].foffset = j4;
                                                                                vinfos[4].indices[0] = _ij4[0];
                                                                                vinfos[4].indices[1] = _ij4[1];
                                                                                vinfos[4].maxsolutions = _nj4;
                                                                                vinfos[5].jointtype = 1;
                                                                                vinfos[5].foffset = j5;
                                                                                vinfos[5].indices[0] = _ij5[0];
                                                                                vinfos[5].indices[1] = _ij5[1];
                                                                                vinfos[5].maxsolutions = _nj5;
                                                                                std::vector<int> vfree(0);
                                                                                solutions.AddSolution(vinfos,vfree);
                                                                            }
                                                                        }
                                                                    }

                                                                }

                                                            }

                                                        }
                                                        else
                                                        {
                                                            {
                                                                IkReal j4array[1], cj4array[1], sj4array[1];
                                                                bool j4valid[1]= {false};
                                                                _nj4 = 1;
                                                                IkReal x440=((r10)*(sj0));
                                                                IkReal x441=((r01)*(sj5));
                                                                IkReal x442=((cj5)*(r20));
                                                                IkReal x443=((r21)*(sj5));
                                                                IkReal x444=((r12)*(sj0));
                                                                IkReal x445=((IkReal(1.24999999790246e+15))*(cj2)*(sj1));
                                                                IkReal x446=((IkReal(1.24999999580492e+15))*(sj1)*(sj2));
                                                                IkReal x447=((IkReal(1.24999999790246e+15))*(cj1)*(cj2));
                                                                IkReal x448=((IkReal(1.24999999580492e+15))*(cj1)*(sj2));
                                                                IkReal x449=((r11)*(sj0)*(sj5));
                                                                IkReal x450=((cj5)*(x448));
                                                                IkReal x451=((cj0)*(x447));
                                                                if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj0)*(r02)*(x448)))+(((IkReal(-1.00000000000000))*(x444)*(x448)))+(((cj5)*(x440)*(x447)))+(((IkReal(-1.00000000000000))*(x443)*(x445)))+(((IkReal(-1.00000000000000))*(x447)*(x449)))+(((x442)*(x445)))+(((IkReal(-1.00000000000000))*(r22)*(x446)))+(((cj5)*(r00)*(x451)))+(((IkReal(-1.00000000000000))*(x441)*(x451))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x444)*(x447)))+(((IkReal(-1.00000000000000))*(x440)*(x450)))+(((cj0)*(x441)*(x448)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x450)))+(((x448)*(x449)))+(((IkReal(-1.00000000000000))*(r22)*(x445)))+(((IkReal(-1.00000000000000))*(r02)*(x451)))+(((x443)*(x446)))+(((IkReal(-1.00000000000000))*(x442)*(x446))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                                    continue;
                                                                j4array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(cj0)*(r02)*(x448)))+(((IkReal(-1.00000000000000))*(x444)*(x448)))+(((cj5)*(x440)*(x447)))+(((IkReal(-1.00000000000000))*(x443)*(x445)))+(((IkReal(-1.00000000000000))*(x447)*(x449)))+(((x442)*(x445)))+(((IkReal(-1.00000000000000))*(r22)*(x446)))+(((cj5)*(r00)*(x451)))+(((IkReal(-1.00000000000000))*(x441)*(x451)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x444)*(x447)))+(((IkReal(-1.00000000000000))*(x440)*(x450)))+(((cj0)*(x441)*(x448)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x450)))+(((x448)*(x449)))+(((IkReal(-1.00000000000000))*(r22)*(x445)))+(((IkReal(-1.00000000000000))*(r02)*(x451)))+(((x443)*(x446)))+(((IkReal(-1.00000000000000))*(x442)*(x446)))))));
                                                                sj4array[0]=IKsin(j4array[0]);
                                                                cj4array[0]=IKcos(j4array[0]);
                                                                if( j4array[0] > IKPI )
                                                                {
                                                                    j4array[0]-=IK2PI;
                                                                }
                                                                else if( j4array[0] < -IKPI )
                                                                {
                                                                    j4array[0]+=IK2PI;
                                                                }
                                                                j4valid[0] = true;
                                                                for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                {
                                                                    if( !j4valid[ij4] )
                                                                    {
                                                                        continue;
                                                                    }
                                                                    _ij4[0] = ij4;
                                                                    _ij4[1] = -1;
                                                                    for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                    {
                                                                        if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                        {
                                                                            j4valid[iij4]=false;
                                                                            _ij4[1] = iij4;
                                                                            break;
                                                                        }
                                                                    }
                                                                    j4 = j4array[ij4];
                                                                    cj4 = cj4array[ij4];
                                                                    sj4 = sj4array[ij4];
                                                                    {
                                                                        IkReal evalcond[4];
                                                                        IkReal x452=IKcos(j4);
                                                                        IkReal x453=IKsin(j4);
                                                                        IkReal x454=((cj1)*(cj5));
                                                                        IkReal x455=((r10)*(sj0));
                                                                        IkReal x456=((IkReal(1.00000000000000))*(sj1));
                                                                        IkReal x457=((r21)*(sj5));
                                                                        IkReal x458=((r12)*(sj0));
                                                                        IkReal x459=((cj0)*(r02));
                                                                        IkReal x460=((IkReal(1.00000000000000))*(cj1));
                                                                        IkReal x461=((cj0)*(r00));
                                                                        IkReal x462=((cj2)*(x453));
                                                                        IkReal x463=((cj0)*(r01)*(sj5));
                                                                        IkReal x464=((sj2)*(x453));
                                                                        IkReal x465=((r11)*(sj0)*(sj5));
                                                                        IkReal x466=((sj2)*(x452));
                                                                        IkReal x467=((cj2)*(x452));
                                                                        evalcond[0]=((((r22)*(sj1)))+(((IkReal(1.00000000167803))*(x467)))+(((cj1)*(x458)))+(((cj1)*(x459)))+(x464));
                                                                        evalcond[1]=((((IkReal(1.00000000167803))*(x466)))+(((IkReal(-1.00000000000000))*(x462)))+(((IkReal(-1.00000000000000))*(x456)*(x458)))+(((IkReal(-1.00000000000000))*(x456)*(x459)))+(((cj1)*(r22))));
                                                                        evalcond[2]=((((x454)*(x455)))+(((x454)*(x461)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x460)*(x465)))+(((IkReal(-1.00000000000000))*(x460)*(x463)))+(((IkReal(-1.00000000000000))*(x456)*(x457)))+(x466)+(((IkReal(-1.00000000167803))*(x462))));
                                                                        evalcond[3]=((((IkReal(-1.00000000000000))*(x467)))+(((r20)*(x454)))+(((IkReal(-1.00000000000000))*(cj5)*(x455)*(x456)))+(((IkReal(-1.00000000000000))*(cj5)*(x456)*(x461)))+(((sj1)*(x465)))+(((sj1)*(x463)))+(((IkReal(-1.00000000167803))*(x464)))+(((IkReal(-1.00000000000000))*(x457)*(x460))));
                                                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                        {
                                                                            continue;
                                                                        }
                                                                    }

                                                                    {
                                                                        std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                        vinfos[0].jointtype = 1;
                                                                        vinfos[0].foffset = j0;
                                                                        vinfos[0].indices[0] = _ij0[0];
                                                                        vinfos[0].indices[1] = _ij0[1];
                                                                        vinfos[0].maxsolutions = _nj0;
                                                                        vinfos[1].jointtype = 1;
                                                                        vinfos[1].foffset = j1;
                                                                        vinfos[1].indices[0] = _ij1[0];
                                                                        vinfos[1].indices[1] = _ij1[1];
                                                                        vinfos[1].maxsolutions = _nj1;
                                                                        vinfos[2].jointtype = 1;
                                                                        vinfos[2].foffset = j2;
                                                                        vinfos[2].indices[0] = _ij2[0];
                                                                        vinfos[2].indices[1] = _ij2[1];
                                                                        vinfos[2].maxsolutions = _nj2;
                                                                        vinfos[3].jointtype = 1;
                                                                        vinfos[3].foffset = j3;
                                                                        vinfos[3].indices[0] = _ij3[0];
                                                                        vinfos[3].indices[1] = _ij3[1];
                                                                        vinfos[3].maxsolutions = _nj3;
                                                                        vinfos[4].jointtype = 1;
                                                                        vinfos[4].foffset = j4;
                                                                        vinfos[4].indices[0] = _ij4[0];
                                                                        vinfos[4].indices[1] = _ij4[1];
                                                                        vinfos[4].maxsolutions = _nj4;
                                                                        vinfos[5].jointtype = 1;
                                                                        vinfos[5].foffset = j5;
                                                                        vinfos[5].indices[0] = _ij5[0];
                                                                        vinfos[5].indices[1] = _ij5[1];
                                                                        vinfos[5].maxsolutions = _nj5;
                                                                        std::vector<int> vfree(0);
                                                                        solutions.AddSolution(vinfos,vfree);
                                                                    }
                                                                }
                                                            }

                                                        }

                                                    }
                                                }
                                            }

                                        }
                                        else
                                        {
                                            IkReal x468=((IkReal(1.00000000000000))*(sj0));
                                            IkReal x469=((r00)*(sj5));
                                            IkReal x470=((cj5)*(r01));
                                            IkReal x471=((IkReal(0.0340000000000000))*(cj5));
                                            IkReal x472=((cj0)*(r10));
                                            IkReal x473=((cj0)*(cj1));
                                            IkReal x474=((cj1)*(cj5));
                                            IkReal x475=((sj1)*(sj5));
                                            IkReal x476=((cj5)*(r11));
                                            IkReal x477=((cj1)*(sj5));
                                            IkReal x478=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                            IkReal x479=((r01)*(sj0)*(sj5));
                                            IkReal x480=((cj0)*(r11)*(sj5));
                                            evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(-2.35619449019234))+(j3)), IkReal(6.28318530717959))));
                                            evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x468)))+(((cj0)*(r12))));
                                            evalcond[2]=((IkReal(1.00000000167803))+(((sj5)*(x472)))+(((IkReal(-1.00000000000000))*(x468)*(x470)))+(((IkReal(-1.00000000000000))*(x468)*(x469)))+(((cj0)*(x476))));
                                            evalcond[3]=((((cj5)*(x472)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x468)))+(((IkReal(-1.00000000000000))*(x480)))+(x479));
                                            evalcond[4]=((IkReal(0.123999999983220))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x471)))+(((x471)*(x472)))+(((IkReal(-0.0340000000000000))*(x480)))+(((IkReal(0.0340000000000000))*(x479)))+(((IkReal(-1.00000000000000))*(px)*(x468)))+(((cj0)*(py))));
                                            evalcond[5]=((((r10)*(sj0)*(x477)))+(((x469)*(x473)))+(((cj5)*(r21)*(sj1)))+(((r20)*(x475)))+(((x470)*(x473)))+(((r11)*(sj0)*(x474))));
                                            evalcond[6]=((((r21)*(x474)))+(((r20)*(x477)))+(((IkReal(-1.00000000000000))*(r10)*(x468)*(x475)))+(((IkReal(-1.00000000000000))*(x469)*(x478)))+(((IkReal(-1.00000000000000))*(sj1)*(x468)*(x476)))+(((IkReal(-1.00000000000000))*(x470)*(x478))));
                                            if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
                                            {
                                                {
                                                    IkReal j2array[1], cj2array[1], sj2array[1];
                                                    bool j2valid[1]= {false};
                                                    _nj2 = 1;
                                                    IkReal x481=((cj1)*(cj5));
                                                    IkReal x482=((IkReal(0.0225456715626140))*(r20));
                                                    IkReal x483=((IkReal(0.0952554623520440))*(sj0));
                                                    IkReal x484=((cj5)*(sj1));
                                                    IkReal x485=((cj0)*(r00));
                                                    IkReal x486=((r11)*(sj5));
                                                    IkReal x487=((IkReal(0.0225456715626140))*(sj0));
                                                    IkReal x488=((IkReal(2.80163124564835))*(sj1));
                                                    IkReal x489=((IkReal(0.0952554623520440))*(sj5));
                                                    IkReal x490=((cj1)*(r21));
                                                    IkReal x491=((IkReal(0.0952554623520440))*(r20));
                                                    IkReal x492=((py)*(sj0));
                                                    IkReal x493=((IkReal(2.80163124564835))*(cj1));
                                                    IkReal x494=((cj0)*(px));
                                                    IkReal x495=((IkReal(0.663107987135705))*(sj1));
                                                    IkReal x496=((IkReal(0.0225456715626140))*(sj5));
                                                    IkReal x497=((r21)*(sj1));
                                                    IkReal x498=((IkReal(0.663107987135705))*(cj1));
                                                    IkReal x499=((cj0)*(r01)*(sj1));
                                                    IkReal x500=((cj0)*(cj1)*(r01));
                                                    if( IKabs(((IkReal(-0.244686847253075))+(((IkReal(-1.00000000000000))*(x489)*(x500)))+(((IkReal(-1.00000000000000))*(x489)*(x497)))+(((pz)*(x488)))+(((IkReal(0.0952554623520440))*(x481)*(x485)))+(((IkReal(-1.00000000000000))*(x496)*(x499)))+(((x493)*(x494)))+(((IkReal(-1.00000000000000))*(cj1)*(x483)*(x486)))+(((x490)*(x496)))+(((x494)*(x495)))+(((r10)*(x484)*(x487)))+(((IkReal(-1.00000000000000))*(sj1)*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(0.0225456715626140))*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(pz)*(x498)))+(((x484)*(x491)))+(((x492)*(x495)))+(((x492)*(x493)))+(((r10)*(x481)*(x483))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.03380192964424))+(((x488)*(x492)))+(((x488)*(x494)))+(((IkReal(0.0952554623520440))*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(x494)*(x498)))+(((r10)*(x483)*(x484)))+(((IkReal(-1.00000000000000))*(x489)*(x499)))+(((x489)*(x490)))+(((x496)*(x497)))+(((x496)*(x500)))+(((IkReal(-0.0225456715626140))*(x481)*(x485)))+(((IkReal(-1.00000000000000))*(sj1)*(x483)*(x486)))+(((IkReal(-1.00000000000000))*(r10)*(x481)*(x487)))+(((IkReal(-1.00000000000000))*(x481)*(x491)))+(((cj1)*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x482)*(x484)))+(((IkReal(-1.00000000000000))*(pz)*(x495)))+(((IkReal(-1.00000000000000))*(pz)*(x493)))+(((IkReal(-1.00000000000000))*(x492)*(x498))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-0.244686847253075))+(((IkReal(-1.00000000000000))*(x489)*(x500)))+(((IkReal(-1.00000000000000))*(x489)*(x497)))+(((pz)*(x488)))+(((IkReal(0.0952554623520440))*(x481)*(x485)))+(((IkReal(-1.00000000000000))*(x496)*(x499)))+(((x493)*(x494)))+(((IkReal(-1.00000000000000))*(cj1)*(x483)*(x486)))+(((x490)*(x496)))+(((x494)*(x495)))+(((r10)*(x484)*(x487)))+(((IkReal(-1.00000000000000))*(sj1)*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(0.0225456715626140))*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(pz)*(x498)))+(((x484)*(x491)))+(((x492)*(x495)))+(((x492)*(x493)))+(((r10)*(x481)*(x483)))))+IKsqr(((IkReal(-1.03380192964424))+(((x488)*(x492)))+(((x488)*(x494)))+(((IkReal(0.0952554623520440))*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(x494)*(x498)))+(((r10)*(x483)*(x484)))+(((IkReal(-1.00000000000000))*(x489)*(x499)))+(((x489)*(x490)))+(((x496)*(x497)))+(((x496)*(x500)))+(((IkReal(-0.0225456715626140))*(x481)*(x485)))+(((IkReal(-1.00000000000000))*(sj1)*(x483)*(x486)))+(((IkReal(-1.00000000000000))*(r10)*(x481)*(x487)))+(((IkReal(-1.00000000000000))*(x481)*(x491)))+(((cj1)*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x482)*(x484)))+(((IkReal(-1.00000000000000))*(pz)*(x495)))+(((IkReal(-1.00000000000000))*(pz)*(x493)))+(((IkReal(-1.00000000000000))*(x492)*(x498)))))-1) <= IKFAST_SINCOS_THRESH )
                                                        continue;
                                                    j2array[0]=IKatan2(((IkReal(-0.244686847253075))+(((IkReal(-1.00000000000000))*(x489)*(x500)))+(((IkReal(-1.00000000000000))*(x489)*(x497)))+(((pz)*(x488)))+(((IkReal(0.0952554623520440))*(x481)*(x485)))+(((IkReal(-1.00000000000000))*(x496)*(x499)))+(((x493)*(x494)))+(((IkReal(-1.00000000000000))*(cj1)*(x483)*(x486)))+(((x490)*(x496)))+(((x494)*(x495)))+(((r10)*(x484)*(x487)))+(((IkReal(-1.00000000000000))*(sj1)*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(0.0225456715626140))*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(pz)*(x498)))+(((x484)*(x491)))+(((x492)*(x495)))+(((x492)*(x493)))+(((r10)*(x481)*(x483)))), ((IkReal(-1.03380192964424))+(((x488)*(x492)))+(((x488)*(x494)))+(((IkReal(0.0952554623520440))*(x484)*(x485)))+(((IkReal(-1.00000000000000))*(x494)*(x498)))+(((r10)*(x483)*(x484)))+(((IkReal(-1.00000000000000))*(x489)*(x499)))+(((x489)*(x490)))+(((x496)*(x497)))+(((x496)*(x500)))+(((IkReal(-0.0225456715626140))*(x481)*(x485)))+(((IkReal(-1.00000000000000))*(sj1)*(x483)*(x486)))+(((IkReal(-1.00000000000000))*(r10)*(x481)*(x487)))+(((IkReal(-1.00000000000000))*(x481)*(x491)))+(((cj1)*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x482)*(x484)))+(((IkReal(-1.00000000000000))*(pz)*(x495)))+(((IkReal(-1.00000000000000))*(pz)*(x493)))+(((IkReal(-1.00000000000000))*(x492)*(x498)))));
                                                    sj2array[0]=IKsin(j2array[0]);
                                                    cj2array[0]=IKcos(j2array[0]);
                                                    if( j2array[0] > IKPI )
                                                    {
                                                        j2array[0]-=IK2PI;
                                                    }
                                                    else if( j2array[0] < -IKPI )
                                                    {
                                                        j2array[0]+=IK2PI;
                                                    }
                                                    j2valid[0] = true;
                                                    for(int ij2 = 0; ij2 < 1; ++ij2)
                                                    {
                                                        if( !j2valid[ij2] )
                                                        {
                                                            continue;
                                                        }
                                                        _ij2[0] = ij2;
                                                        _ij2[1] = -1;
                                                        for(int iij2 = ij2+1; iij2 < 1; ++iij2)
                                                        {
                                                            if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
                                                            {
                                                                j2valid[iij2]=false;
                                                                _ij2[1] = iij2;
                                                                break;
                                                            }
                                                        }
                                                        j2 = j2array[ij2];
                                                        cj2 = cj2array[ij2];
                                                        sj2 = sj2array[ij2];
                                                        {
                                                            IkReal evalcond[2];
                                                            IkReal x501=IKsin(j2);
                                                            IkReal x502=IKcos(j2);
                                                            IkReal x503=((IkReal(0.0340000000000000))*(cj1));
                                                            IkReal x504=((r21)*(sj5));
                                                            IkReal x505=((cj0)*(sj1));
                                                            IkReal x506=((IkReal(0.0340000000000000))*(sj1));
                                                            IkReal x507=((cj5)*(r20));
                                                            IkReal x508=((r01)*(sj5));
                                                            IkReal x509=((py)*(sj0));
                                                            IkReal x510=((cj0)*(cj5)*(r00));
                                                            IkReal x511=((r11)*(sj0)*(sj5));
                                                            IkReal x512=((cj5)*(r10)*(sj0));
                                                            evalcond[0]=((((cj1)*(x509)))+(((IkReal(-1.00000000000000))*(x503)*(x511)))+(((x503)*(x512)))+(((x503)*(x510)))+(((x506)*(x507)))+(((IkReal(0.0800000000000000))*(x502)))+(((cj0)*(cj1)*(px)))+(((IkReal(-1.00000000000000))*(cj0)*(x503)*(x508)))+(((IkReal(-1.00000000000000))*(x504)*(x506)))+(((IkReal(-0.338000000000000))*(x501)))+(((pz)*(sj1))));
                                                            evalcond[1]=((IkReal(0.369000000000000))+(((IkReal(0.338000000000000))*(x502)))+(((IkReal(-1.00000000000000))*(sj1)*(x509)))+(((IkReal(-1.00000000000000))*(px)*(x505)))+(((cj1)*(pz)))+(((IkReal(-1.00000000000000))*(x503)*(x504)))+(((IkReal(0.0800000000000000))*(x501)))+(((IkReal(0.0340000000000000))*(x505)*(x508)))+(((x503)*(x507)))+(((IkReal(-1.00000000000000))*(x506)*(x512)))+(((x506)*(x511)))+(((IkReal(-0.0340000000000000))*(cj5)*(r00)*(x505))));
                                                            if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
                                                            {
                                                                continue;
                                                            }
                                                        }

                                                        {
                                                            IkReal dummyeval[1];
                                                            IkReal gconst8;
                                                            gconst8=IKsign(((((IkReal(-1.24999999580492e+15))*((sj2)*(sj2))))+(((IkReal(-1.25000000000000e+15))*((cj2)*(cj2))))));
                                                            dummyeval[0]=((((IkReal(-1.00000000000000))*((sj2)*(sj2))))+(((IkReal(-1.00000000335606))*((cj2)*(cj2)))));
                                                            if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                            {
                                                                {
                                                                    IkReal dummyeval[1];
                                                                    dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
                                                                    if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                    {
                                                                        continue;

                                                                    }
                                                                    else
                                                                    {
                                                                        {
                                                                            IkReal j4array[1], cj4array[1], sj4array[1];
                                                                            bool j4valid[1]= {false};
                                                                            _nj4 = 1;
                                                                            IkReal x513=(cj2)*(cj2);
                                                                            IkReal x514=(sj2)*(sj2);
                                                                            IkReal x515=((cj1)*(sj2));
                                                                            IkReal x516=((cj0)*(r02));
                                                                            IkReal x517=((IkReal(49999999.9160984))*(r22));
                                                                            IkReal x518=((r12)*(sj0));
                                                                            IkReal x519=((cj1)*(cj2));
                                                                            IkReal x520=((sj1)*(sj2));
                                                                            IkReal x521=((cj2)*(sj1));
                                                                            if( IKabs(((((IKabs(((x514)+(x513))) != 0)?((IkReal)1/(((x514)+(x513)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x518)*(x521)))+(((IkReal(-1.00000000000000))*(x516)*(x521)))+(((IkReal(-1.00000000000000))*(x515)*(x516)))+(((IkReal(-1.00000000000000))*(x515)*(x518)))+(((IkReal(-1.00000000000000))*(r22)*(x520)))+(((r22)*(x519))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(50000000.0000000))*(x514)))+(((IkReal(50000000.0000000))*(x513))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x514)))+(((IkReal(50000000.0000000))*(x513)))))):(IkReal)1.0e30))*(((((IkReal(49999999.9160984))*(x516)*(x519)))+(((IkReal(49999999.9160984))*(x518)*(x519)))+(((x517)*(x521)))+(((x515)*(x517)))+(((IkReal(-49999999.9160984))*(x516)*(x520)))+(((IkReal(-49999999.9160984))*(x518)*(x520))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x514)+(x513))) != 0)?((IkReal)1/(((x514)+(x513)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x518)*(x521)))+(((IkReal(-1.00000000000000))*(x516)*(x521)))+(((IkReal(-1.00000000000000))*(x515)*(x516)))+(((IkReal(-1.00000000000000))*(x515)*(x518)))+(((IkReal(-1.00000000000000))*(r22)*(x520)))+(((r22)*(x519)))))))+IKsqr(((((IKabs(((((IkReal(50000000.0000000))*(x514)))+(((IkReal(50000000.0000000))*(x513))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x514)))+(((IkReal(50000000.0000000))*(x513)))))):(IkReal)1.0e30))*(((((IkReal(49999999.9160984))*(x516)*(x519)))+(((IkReal(49999999.9160984))*(x518)*(x519)))+(((x517)*(x521)))+(((x515)*(x517)))+(((IkReal(-49999999.9160984))*(x516)*(x520)))+(((IkReal(-49999999.9160984))*(x518)*(x520)))))))-1) <= IKFAST_SINCOS_THRESH )
                                                                                continue;
                                                                            j4array[0]=IKatan2(((((IKabs(((x514)+(x513))) != 0)?((IkReal)1/(((x514)+(x513)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x518)*(x521)))+(((IkReal(-1.00000000000000))*(x516)*(x521)))+(((IkReal(-1.00000000000000))*(x515)*(x516)))+(((IkReal(-1.00000000000000))*(x515)*(x518)))+(((IkReal(-1.00000000000000))*(r22)*(x520)))+(((r22)*(x519)))))), ((((IKabs(((((IkReal(50000000.0000000))*(x514)))+(((IkReal(50000000.0000000))*(x513))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x514)))+(((IkReal(50000000.0000000))*(x513)))))):(IkReal)1.0e30))*(((((IkReal(49999999.9160984))*(x516)*(x519)))+(((IkReal(49999999.9160984))*(x518)*(x519)))+(((x517)*(x521)))+(((x515)*(x517)))+(((IkReal(-49999999.9160984))*(x516)*(x520)))+(((IkReal(-49999999.9160984))*(x518)*(x520)))))));
                                                                            sj4array[0]=IKsin(j4array[0]);
                                                                            cj4array[0]=IKcos(j4array[0]);
                                                                            if( j4array[0] > IKPI )
                                                                            {
                                                                                j4array[0]-=IK2PI;
                                                                            }
                                                                            else if( j4array[0] < -IKPI )
                                                                            {
                                                                                j4array[0]+=IK2PI;
                                                                            }
                                                                            j4valid[0] = true;
                                                                            for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                            {
                                                                                if( !j4valid[ij4] )
                                                                                {
                                                                                    continue;
                                                                                }
                                                                                _ij4[0] = ij4;
                                                                                _ij4[1] = -1;
                                                                                for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                {
                                                                                    if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                    {
                                                                                        j4valid[iij4]=false;
                                                                                        _ij4[1] = iij4;
                                                                                        break;
                                                                                    }
                                                                                }
                                                                                j4 = j4array[ij4];
                                                                                cj4 = cj4array[ij4];
                                                                                sj4 = sj4array[ij4];
                                                                                {
                                                                                    IkReal evalcond[4];
                                                                                    IkReal x522=IKsin(j4);
                                                                                    IkReal x523=IKcos(j4);
                                                                                    IkReal x524=((cj1)*(cj5));
                                                                                    IkReal x525=((r10)*(sj0));
                                                                                    IkReal x526=((IkReal(1.00000000000000))*(sj1));
                                                                                    IkReal x527=((r21)*(sj5));
                                                                                    IkReal x528=((r12)*(sj0));
                                                                                    IkReal x529=((cj0)*(r02));
                                                                                    IkReal x530=((IkReal(1.00000000000000))*(cj1));
                                                                                    IkReal x531=((cj0)*(r00));
                                                                                    IkReal x532=((cj2)*(x522));
                                                                                    IkReal x533=((cj0)*(r01)*(sj5));
                                                                                    IkReal x534=((sj2)*(x522));
                                                                                    IkReal x535=((r11)*(sj0)*(sj5));
                                                                                    IkReal x536=((sj2)*(x523));
                                                                                    IkReal x537=((cj2)*(x523));
                                                                                    evalcond[0]=((((IkReal(-1.00000000167803))*(x537)))+(((r22)*(sj1)))+(((cj1)*(x528)))+(((cj1)*(x529)))+(x534));
                                                                                    evalcond[1]=((((IkReal(-1.00000000167803))*(x536)))+(((IkReal(-1.00000000000000))*(x526)*(x528)))+(((IkReal(-1.00000000000000))*(x526)*(x529)))+(((IkReal(-1.00000000000000))*(x532)))+(((cj1)*(r22))));
                                                                                    evalcond[2]=((((IkReal(-1.00000000000000))*(x526)*(x527)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x530)*(x533)))+(((IkReal(-1.00000000000000))*(x530)*(x535)))+(((IkReal(1.00000000167803))*(x532)))+(x536)+(((x524)*(x525)))+(((x524)*(x531))));
                                                                                    evalcond[3]=((((r20)*(x524)))+(((sj1)*(x535)))+(((sj1)*(x533)))+(((IkReal(-1.00000000000000))*(x537)))+(((IkReal(-1.00000000000000))*(x527)*(x530)))+(((IkReal(-1.00000000000000))*(cj5)*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(cj5)*(x526)*(x531)))+(((IkReal(1.00000000167803))*(x534))));
                                                                                    if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                    {
                                                                                        continue;
                                                                                    }
                                                                                }

                                                                                {
                                                                                    std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                    vinfos[0].jointtype = 1;
                                                                                    vinfos[0].foffset = j0;
                                                                                    vinfos[0].indices[0] = _ij0[0];
                                                                                    vinfos[0].indices[1] = _ij0[1];
                                                                                    vinfos[0].maxsolutions = _nj0;
                                                                                    vinfos[1].jointtype = 1;
                                                                                    vinfos[1].foffset = j1;
                                                                                    vinfos[1].indices[0] = _ij1[0];
                                                                                    vinfos[1].indices[1] = _ij1[1];
                                                                                    vinfos[1].maxsolutions = _nj1;
                                                                                    vinfos[2].jointtype = 1;
                                                                                    vinfos[2].foffset = j2;
                                                                                    vinfos[2].indices[0] = _ij2[0];
                                                                                    vinfos[2].indices[1] = _ij2[1];
                                                                                    vinfos[2].maxsolutions = _nj2;
                                                                                    vinfos[3].jointtype = 1;
                                                                                    vinfos[3].foffset = j3;
                                                                                    vinfos[3].indices[0] = _ij3[0];
                                                                                    vinfos[3].indices[1] = _ij3[1];
                                                                                    vinfos[3].maxsolutions = _nj3;
                                                                                    vinfos[4].jointtype = 1;
                                                                                    vinfos[4].foffset = j4;
                                                                                    vinfos[4].indices[0] = _ij4[0];
                                                                                    vinfos[4].indices[1] = _ij4[1];
                                                                                    vinfos[4].maxsolutions = _nj4;
                                                                                    vinfos[5].jointtype = 1;
                                                                                    vinfos[5].foffset = j5;
                                                                                    vinfos[5].indices[0] = _ij5[0];
                                                                                    vinfos[5].indices[1] = _ij5[1];
                                                                                    vinfos[5].maxsolutions = _nj5;
                                                                                    std::vector<int> vfree(0);
                                                                                    solutions.AddSolution(vinfos,vfree);
                                                                                }
                                                                            }
                                                                        }

                                                                    }

                                                                }

                                                            }
                                                            else
                                                            {
                                                                {
                                                                    IkReal j4array[1], cj4array[1], sj4array[1];
                                                                    bool j4valid[1]= {false};
                                                                    _nj4 = 1;
                                                                    IkReal x538=((cj1)*(cj5));
                                                                    IkReal x539=((IkReal(1.24999999580492e+15))*(sj2));
                                                                    IkReal x540=((r10)*(sj0));
                                                                    IkReal x541=((cj1)*(sj5));
                                                                    IkReal x542=((cj1)*(r02));
                                                                    IkReal x543=((r11)*(sj0));
                                                                    IkReal x544=((IkReal(1.24999999790246e+15))*(cj2));
                                                                    IkReal x545=((r22)*(sj1));
                                                                    IkReal x546=((cj0)*(x544));
                                                                    IkReal x547=((r21)*(sj1)*(sj5));
                                                                    IkReal x548=((cj5)*(r20)*(sj1));
                                                                    IkReal x549=((cj1)*(r12)*(sj0));
                                                                    if( IKabs(((gconst8)*(((((x539)*(x549)))+(((x539)*(x545)))+(((IkReal(-1.00000000000000))*(x544)*(x547)))+(((IkReal(-1.00000000000000))*(r01)*(x541)*(x546)))+(((x544)*(x548)))+(((cj0)*(x539)*(x542)))+(((x538)*(x540)*(x544)))+(((IkReal(-1.00000000000000))*(x541)*(x543)*(x544)))+(((r00)*(x538)*(x546))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((x539)*(x548)))+(((IkReal(-1.00000000000000))*(x544)*(x545)))+(((IkReal(-1.00000000000000))*(x544)*(x549)))+(((IkReal(-1.00000000000000))*(x542)*(x546)))+(((IkReal(-1.00000000000000))*(x539)*(x541)*(x543)))+(((IkReal(-1.00000000000000))*(x539)*(x547)))+(((x538)*(x539)*(x540)))+(((cj0)*(r00)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x539)*(x541))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                                        continue;
                                                                    j4array[0]=IKatan2(((gconst8)*(((((x539)*(x549)))+(((x539)*(x545)))+(((IkReal(-1.00000000000000))*(x544)*(x547)))+(((IkReal(-1.00000000000000))*(r01)*(x541)*(x546)))+(((x544)*(x548)))+(((cj0)*(x539)*(x542)))+(((x538)*(x540)*(x544)))+(((IkReal(-1.00000000000000))*(x541)*(x543)*(x544)))+(((r00)*(x538)*(x546)))))), ((gconst8)*(((((x539)*(x548)))+(((IkReal(-1.00000000000000))*(x544)*(x545)))+(((IkReal(-1.00000000000000))*(x544)*(x549)))+(((IkReal(-1.00000000000000))*(x542)*(x546)))+(((IkReal(-1.00000000000000))*(x539)*(x541)*(x543)))+(((IkReal(-1.00000000000000))*(x539)*(x547)))+(((x538)*(x539)*(x540)))+(((cj0)*(r00)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x539)*(x541)))))));
                                                                    sj4array[0]=IKsin(j4array[0]);
                                                                    cj4array[0]=IKcos(j4array[0]);
                                                                    if( j4array[0] > IKPI )
                                                                    {
                                                                        j4array[0]-=IK2PI;
                                                                    }
                                                                    else if( j4array[0] < -IKPI )
                                                                    {
                                                                        j4array[0]+=IK2PI;
                                                                    }
                                                                    j4valid[0] = true;
                                                                    for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                    {
                                                                        if( !j4valid[ij4] )
                                                                        {
                                                                            continue;
                                                                        }
                                                                        _ij4[0] = ij4;
                                                                        _ij4[1] = -1;
                                                                        for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                        {
                                                                            if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                            {
                                                                                j4valid[iij4]=false;
                                                                                _ij4[1] = iij4;
                                                                                break;
                                                                            }
                                                                        }
                                                                        j4 = j4array[ij4];
                                                                        cj4 = cj4array[ij4];
                                                                        sj4 = sj4array[ij4];
                                                                        {
                                                                            IkReal evalcond[4];
                                                                            IkReal x550=IKsin(j4);
                                                                            IkReal x551=IKcos(j4);
                                                                            IkReal x552=((cj1)*(cj5));
                                                                            IkReal x553=((r10)*(sj0));
                                                                            IkReal x554=((IkReal(1.00000000000000))*(sj1));
                                                                            IkReal x555=((r21)*(sj5));
                                                                            IkReal x556=((r12)*(sj0));
                                                                            IkReal x557=((cj0)*(r02));
                                                                            IkReal x558=((IkReal(1.00000000000000))*(cj1));
                                                                            IkReal x559=((cj0)*(r00));
                                                                            IkReal x560=((cj2)*(x550));
                                                                            IkReal x561=((cj0)*(r01)*(sj5));
                                                                            IkReal x562=((sj2)*(x550));
                                                                            IkReal x563=((r11)*(sj0)*(sj5));
                                                                            IkReal x564=((sj2)*(x551));
                                                                            IkReal x565=((cj2)*(x551));
                                                                            evalcond[0]=((((r22)*(sj1)))+(((IkReal(-1.00000000167803))*(x565)))+(((cj1)*(x557)))+(((cj1)*(x556)))+(x562));
                                                                            evalcond[1]=((((IkReal(-1.00000000000000))*(x554)*(x556)))+(((IkReal(-1.00000000000000))*(x554)*(x557)))+(((IkReal(-1.00000000167803))*(x564)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x560))));
                                                                            evalcond[2]=((((IkReal(-1.00000000000000))*(x554)*(x555)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x558)*(x561)))+(((IkReal(-1.00000000000000))*(x558)*(x563)))+(((IkReal(1.00000000167803))*(x560)))+(x564)+(((x552)*(x553)))+(((x552)*(x559))));
                                                                            evalcond[3]=((((IkReal(-1.00000000000000))*(x555)*(x558)))+(((IkReal(-1.00000000000000))*(cj5)*(x553)*(x554)))+(((r20)*(x552)))+(((IkReal(1.00000000167803))*(x562)))+(((sj1)*(x561)))+(((sj1)*(x563)))+(((IkReal(-1.00000000000000))*(x565)))+(((IkReal(-1.00000000000000))*(cj5)*(x554)*(x559))));
                                                                            if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                            {
                                                                                continue;
                                                                            }
                                                                        }

                                                                        {
                                                                            std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                            vinfos[0].jointtype = 1;
                                                                            vinfos[0].foffset = j0;
                                                                            vinfos[0].indices[0] = _ij0[0];
                                                                            vinfos[0].indices[1] = _ij0[1];
                                                                            vinfos[0].maxsolutions = _nj0;
                                                                            vinfos[1].jointtype = 1;
                                                                            vinfos[1].foffset = j1;
                                                                            vinfos[1].indices[0] = _ij1[0];
                                                                            vinfos[1].indices[1] = _ij1[1];
                                                                            vinfos[1].maxsolutions = _nj1;
                                                                            vinfos[2].jointtype = 1;
                                                                            vinfos[2].foffset = j2;
                                                                            vinfos[2].indices[0] = _ij2[0];
                                                                            vinfos[2].indices[1] = _ij2[1];
                                                                            vinfos[2].maxsolutions = _nj2;
                                                                            vinfos[3].jointtype = 1;
                                                                            vinfos[3].foffset = j3;
                                                                            vinfos[3].indices[0] = _ij3[0];
                                                                            vinfos[3].indices[1] = _ij3[1];
                                                                            vinfos[3].maxsolutions = _nj3;
                                                                            vinfos[4].jointtype = 1;
                                                                            vinfos[4].foffset = j4;
                                                                            vinfos[4].indices[0] = _ij4[0];
                                                                            vinfos[4].indices[1] = _ij4[1];
                                                                            vinfos[4].maxsolutions = _nj4;
                                                                            vinfos[5].jointtype = 1;
                                                                            vinfos[5].foffset = j5;
                                                                            vinfos[5].indices[0] = _ij5[0];
                                                                            vinfos[5].indices[1] = _ij5[1];
                                                                            vinfos[5].maxsolutions = _nj5;
                                                                            std::vector<int> vfree(0);
                                                                            solutions.AddSolution(vinfos,vfree);
                                                                        }
                                                                    }
                                                                }

                                                            }

                                                        }
                                                    }
                                                }

                                            }
                                            else
                                            {
                                                IkReal x566=((IkReal(1.00000000000000))*(sj0));
                                                IkReal x567=((r00)*(sj5));
                                                IkReal x568=((cj5)*(r01));
                                                IkReal x569=((IkReal(0.0340000000000000))*(cj5));
                                                IkReal x570=((cj0)*(r10));
                                                IkReal x571=((cj0)*(cj1));
                                                IkReal x572=((cj1)*(cj5));
                                                IkReal x573=((sj1)*(sj5));
                                                IkReal x574=((cj5)*(r11));
                                                IkReal x575=((cj1)*(sj5));
                                                IkReal x576=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                                IkReal x577=((r01)*(sj0)*(sj5));
                                                IkReal x578=((cj0)*(r11)*(sj5));
                                                evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.92699081698724))+(j3)), IkReal(6.28318530717959))));
                                                evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x566)))+(((cj0)*(r12))));
                                                evalcond[2]=((IkReal(1.00000000167803))+(((IkReal(-1.00000000000000))*(x566)*(x568)))+(((IkReal(-1.00000000000000))*(x566)*(x567)))+(((cj0)*(x574)))+(((sj5)*(x570))));
                                                evalcond[3]=((((cj5)*(x570)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x566)))+(((IkReal(-1.00000000000000))*(x578)))+(x577));
                                                evalcond[4]=((IkReal(0.123999999983220))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x569)))+(((IkReal(-0.0340000000000000))*(x578)))+(((x569)*(x570)))+(((cj0)*(py)))+(((IkReal(0.0340000000000000))*(x577)))+(((IkReal(-1.00000000000000))*(px)*(x566))));
                                                evalcond[5]=((((x567)*(x571)))+(((r11)*(sj0)*(x572)))+(((cj5)*(r21)*(sj1)))+(((r20)*(x573)))+(((x568)*(x571)))+(((r10)*(sj0)*(x575))));
                                                evalcond[6]=((((r20)*(x575)))+(((IkReal(-1.00000000000000))*(sj1)*(x566)*(x574)))+(((IkReal(-1.00000000000000))*(x567)*(x576)))+(((r21)*(x572)))+(((IkReal(-1.00000000000000))*(x568)*(x576)))+(((IkReal(-1.00000000000000))*(r10)*(x566)*(x573))));
                                                if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
                                                {
                                                    {
                                                        IkReal j2array[1], cj2array[1], sj2array[1];
                                                        bool j2valid[1]= {false};
                                                        _nj2 = 1;
                                                        IkReal x579=((cj1)*(cj5));
                                                        IkReal x580=((IkReal(0.0225456715626140))*(r20));
                                                        IkReal x581=((IkReal(0.0952554623520440))*(sj0));
                                                        IkReal x582=((cj5)*(sj1));
                                                        IkReal x583=((cj0)*(r00));
                                                        IkReal x584=((r11)*(sj5));
                                                        IkReal x585=((IkReal(0.0225456715626140))*(sj0));
                                                        IkReal x586=((IkReal(2.80163124564835))*(sj1));
                                                        IkReal x587=((IkReal(0.0952554623520440))*(sj5));
                                                        IkReal x588=((cj1)*(r21));
                                                        IkReal x589=((IkReal(0.0952554623520440))*(r20));
                                                        IkReal x590=((py)*(sj0));
                                                        IkReal x591=((IkReal(2.80163124564835))*(cj1));
                                                        IkReal x592=((cj0)*(px));
                                                        IkReal x593=((IkReal(0.663107987135705))*(sj1));
                                                        IkReal x594=((IkReal(0.0225456715626140))*(sj5));
                                                        IkReal x595=((r21)*(sj1));
                                                        IkReal x596=((IkReal(0.663107987135705))*(cj1));
                                                        IkReal x597=((cj0)*(r01)*(sj1));
                                                        IkReal x598=((cj0)*(cj1)*(r01));
                                                        if( IKabs(((IkReal(-0.244686847253075))+(((r10)*(x579)*(x581)))+(((IkReal(-1.00000000000000))*(x587)*(x598)))+(((IkReal(-1.00000000000000))*(x587)*(x595)))+(((x582)*(x589)))+(((IkReal(0.0225456715626140))*(x582)*(x583)))+(((IkReal(-1.00000000000000))*(cj1)*(x581)*(x584)))+(((IkReal(-1.00000000000000))*(sj1)*(x584)*(x585)))+(((IkReal(-1.00000000000000))*(x579)*(x580)))+(((IkReal(0.0952554623520440))*(x579)*(x583)))+(((r10)*(x582)*(x585)))+(((IkReal(-1.00000000000000))*(pz)*(x596)))+(((IkReal(-1.00000000000000))*(x594)*(x597)))+(((x590)*(x591)))+(((x590)*(x593)))+(((x591)*(x592)))+(((x588)*(x594)))+(((pz)*(x586)))+(((x592)*(x593))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.03380192964424))+(((r10)*(x581)*(x582)))+(((cj1)*(x584)*(x585)))+(((IkReal(-1.00000000000000))*(x580)*(x582)))+(((IkReal(0.0952554623520440))*(x582)*(x583)))+(((x594)*(x595)))+(((x594)*(x598)))+(((IkReal(-1.00000000000000))*(x587)*(x597)))+(((IkReal(-1.00000000000000))*(r10)*(x579)*(x585)))+(((IkReal(-1.00000000000000))*(x579)*(x589)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(pz)*(x593)))+(((IkReal(-1.00000000000000))*(pz)*(x591)))+(((IkReal(-1.00000000000000))*(x592)*(x596)))+(((IkReal(-1.00000000000000))*(x590)*(x596)))+(((IkReal(-1.00000000000000))*(sj1)*(x581)*(x584)))+(((IkReal(-0.0225456715626140))*(x579)*(x583)))+(((x586)*(x590)))+(((x586)*(x592))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-0.244686847253075))+(((r10)*(x579)*(x581)))+(((IkReal(-1.00000000000000))*(x587)*(x598)))+(((IkReal(-1.00000000000000))*(x587)*(x595)))+(((x582)*(x589)))+(((IkReal(0.0225456715626140))*(x582)*(x583)))+(((IkReal(-1.00000000000000))*(cj1)*(x581)*(x584)))+(((IkReal(-1.00000000000000))*(sj1)*(x584)*(x585)))+(((IkReal(-1.00000000000000))*(x579)*(x580)))+(((IkReal(0.0952554623520440))*(x579)*(x583)))+(((r10)*(x582)*(x585)))+(((IkReal(-1.00000000000000))*(pz)*(x596)))+(((IkReal(-1.00000000000000))*(x594)*(x597)))+(((x590)*(x591)))+(((x590)*(x593)))+(((x591)*(x592)))+(((x588)*(x594)))+(((pz)*(x586)))+(((x592)*(x593)))))+IKsqr(((IkReal(-1.03380192964424))+(((r10)*(x581)*(x582)))+(((cj1)*(x584)*(x585)))+(((IkReal(-1.00000000000000))*(x580)*(x582)))+(((IkReal(0.0952554623520440))*(x582)*(x583)))+(((x594)*(x595)))+(((x594)*(x598)))+(((IkReal(-1.00000000000000))*(x587)*(x597)))+(((IkReal(-1.00000000000000))*(r10)*(x579)*(x585)))+(((IkReal(-1.00000000000000))*(x579)*(x589)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(pz)*(x593)))+(((IkReal(-1.00000000000000))*(pz)*(x591)))+(((IkReal(-1.00000000000000))*(x592)*(x596)))+(((IkReal(-1.00000000000000))*(x590)*(x596)))+(((IkReal(-1.00000000000000))*(sj1)*(x581)*(x584)))+(((IkReal(-0.0225456715626140))*(x579)*(x583)))+(((x586)*(x590)))+(((x586)*(x592)))))-1) <= IKFAST_SINCOS_THRESH )
                                                            continue;
                                                        j2array[0]=IKatan2(((IkReal(-0.244686847253075))+(((r10)*(x579)*(x581)))+(((IkReal(-1.00000000000000))*(x587)*(x598)))+(((IkReal(-1.00000000000000))*(x587)*(x595)))+(((x582)*(x589)))+(((IkReal(0.0225456715626140))*(x582)*(x583)))+(((IkReal(-1.00000000000000))*(cj1)*(x581)*(x584)))+(((IkReal(-1.00000000000000))*(sj1)*(x584)*(x585)))+(((IkReal(-1.00000000000000))*(x579)*(x580)))+(((IkReal(0.0952554623520440))*(x579)*(x583)))+(((r10)*(x582)*(x585)))+(((IkReal(-1.00000000000000))*(pz)*(x596)))+(((IkReal(-1.00000000000000))*(x594)*(x597)))+(((x590)*(x591)))+(((x590)*(x593)))+(((x591)*(x592)))+(((x588)*(x594)))+(((pz)*(x586)))+(((x592)*(x593)))), ((IkReal(-1.03380192964424))+(((r10)*(x581)*(x582)))+(((cj1)*(x584)*(x585)))+(((IkReal(-1.00000000000000))*(x580)*(x582)))+(((IkReal(0.0952554623520440))*(x582)*(x583)))+(((x594)*(x595)))+(((x594)*(x598)))+(((IkReal(-1.00000000000000))*(x587)*(x597)))+(((IkReal(-1.00000000000000))*(r10)*(x579)*(x585)))+(((IkReal(-1.00000000000000))*(x579)*(x589)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(pz)*(x593)))+(((IkReal(-1.00000000000000))*(pz)*(x591)))+(((IkReal(-1.00000000000000))*(x592)*(x596)))+(((IkReal(-1.00000000000000))*(x590)*(x596)))+(((IkReal(-1.00000000000000))*(sj1)*(x581)*(x584)))+(((IkReal(-0.0225456715626140))*(x579)*(x583)))+(((x586)*(x590)))+(((x586)*(x592)))));
                                                        sj2array[0]=IKsin(j2array[0]);
                                                        cj2array[0]=IKcos(j2array[0]);
                                                        if( j2array[0] > IKPI )
                                                        {
                                                            j2array[0]-=IK2PI;
                                                        }
                                                        else if( j2array[0] < -IKPI )
                                                        {
                                                            j2array[0]+=IK2PI;
                                                        }
                                                        j2valid[0] = true;
                                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                                        {
                                                            if( !j2valid[ij2] )
                                                            {
                                                                continue;
                                                            }
                                                            _ij2[0] = ij2;
                                                            _ij2[1] = -1;
                                                            for(int iij2 = ij2+1; iij2 < 1; ++iij2)
                                                            {
                                                                if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
                                                                {
                                                                    j2valid[iij2]=false;
                                                                    _ij2[1] = iij2;
                                                                    break;
                                                                }
                                                            }
                                                            j2 = j2array[ij2];
                                                            cj2 = cj2array[ij2];
                                                            sj2 = sj2array[ij2];
                                                            {
                                                                IkReal evalcond[2];
                                                                IkReal x599=IKsin(j2);
                                                                IkReal x600=IKcos(j2);
                                                                IkReal x601=((IkReal(0.0340000000000000))*(cj1));
                                                                IkReal x602=((r21)*(sj5));
                                                                IkReal x603=((cj0)*(sj1));
                                                                IkReal x604=((IkReal(0.0340000000000000))*(sj1));
                                                                IkReal x605=((cj5)*(r20));
                                                                IkReal x606=((r01)*(sj5));
                                                                IkReal x607=((py)*(sj0));
                                                                IkReal x608=((cj0)*(cj5)*(r00));
                                                                IkReal x609=((r11)*(sj0)*(sj5));
                                                                IkReal x610=((cj5)*(r10)*(sj0));
                                                                evalcond[0]=((((IkReal(-1.00000000000000))*(x602)*(x604)))+(((IkReal(-1.00000000000000))*(cj0)*(x601)*(x606)))+(((x601)*(x608)))+(((x604)*(x605)))+(((IkReal(0.0800000000000000))*(x600)))+(((x601)*(x610)))+(((IkReal(-0.338000000000000))*(x599)))+(((cj1)*(x607)))+(((cj0)*(cj1)*(px)))+(((pz)*(sj1)))+(((IkReal(-1.00000000000000))*(x601)*(x609))));
                                                                evalcond[1]=((IkReal(0.369000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x607)))+(((IkReal(0.0800000000000000))*(x599)))+(((x601)*(x605)))+(((x604)*(x609)))+(((IkReal(0.338000000000000))*(x600)))+(((cj1)*(pz)))+(((IkReal(-1.00000000000000))*(x604)*(x610)))+(((IkReal(-1.00000000000000))*(px)*(x603)))+(((IkReal(0.0340000000000000))*(x603)*(x606)))+(((IkReal(-0.0340000000000000))*(cj5)*(r00)*(x603)))+(((IkReal(-1.00000000000000))*(x601)*(x602))));
                                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
                                                                {
                                                                    continue;
                                                                }
                                                            }

                                                            {
                                                                IkReal dummyeval[1];
                                                                IkReal gconst9;
                                                                gconst9=IKsign(((((IkReal(-1.24999999580492e+15))*((sj2)*(sj2))))+(((IkReal(-1.25000000000000e+15))*((cj2)*(cj2))))));
                                                                dummyeval[0]=((((IkReal(-1.00000000000000))*((sj2)*(sj2))))+(((IkReal(-1.00000000335606))*((cj2)*(cj2)))));
                                                                if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                {
                                                                    {
                                                                        IkReal dummyeval[1];
                                                                        dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
                                                                        if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                        {
                                                                            continue;

                                                                        }
                                                                        else
                                                                        {
                                                                            {
                                                                                IkReal j4array[1], cj4array[1], sj4array[1];
                                                                                bool j4valid[1]= {false};
                                                                                _nj4 = 1;
                                                                                IkReal x611=(cj2)*(cj2);
                                                                                IkReal x612=(sj2)*(sj2);
                                                                                IkReal x613=((cj1)*(sj2));
                                                                                IkReal x614=((cj0)*(r02));
                                                                                IkReal x615=((IkReal(49999999.9160984))*(r22));
                                                                                IkReal x616=((r12)*(sj0));
                                                                                IkReal x617=((cj1)*(cj2));
                                                                                IkReal x618=((sj1)*(sj2));
                                                                                IkReal x619=((cj2)*(sj1));
                                                                                if( IKabs(((((IKabs(((x611)+(x612))) != 0)?((IkReal)1/(((x611)+(x612)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x614)*(x619)))+(((IkReal(-1.00000000000000))*(x613)*(x614)))+(((IkReal(-1.00000000000000))*(x613)*(x616)))+(((IkReal(-1.00000000000000))*(r22)*(x618)))+(((IkReal(-1.00000000000000))*(x616)*(x619)))+(((r22)*(x617))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(50000000.0000000))*(x612)))+(((IkReal(50000000.0000000))*(x611))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x612)))+(((IkReal(50000000.0000000))*(x611)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x614)*(x618)))+(((IkReal(-49999999.9160984))*(x616)*(x618)))+(((IkReal(49999999.9160984))*(x614)*(x617)))+(((x613)*(x615)))+(((x615)*(x619)))+(((IkReal(49999999.9160984))*(x616)*(x617))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x611)+(x612))) != 0)?((IkReal)1/(((x611)+(x612)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x614)*(x619)))+(((IkReal(-1.00000000000000))*(x613)*(x614)))+(((IkReal(-1.00000000000000))*(x613)*(x616)))+(((IkReal(-1.00000000000000))*(r22)*(x618)))+(((IkReal(-1.00000000000000))*(x616)*(x619)))+(((r22)*(x617)))))))+IKsqr(((((IKabs(((((IkReal(50000000.0000000))*(x612)))+(((IkReal(50000000.0000000))*(x611))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x612)))+(((IkReal(50000000.0000000))*(x611)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x614)*(x618)))+(((IkReal(-49999999.9160984))*(x616)*(x618)))+(((IkReal(49999999.9160984))*(x614)*(x617)))+(((x613)*(x615)))+(((x615)*(x619)))+(((IkReal(49999999.9160984))*(x616)*(x617)))))))-1) <= IKFAST_SINCOS_THRESH )
                                                                                    continue;
                                                                                j4array[0]=IKatan2(((((IKabs(((x611)+(x612))) != 0)?((IkReal)1/(((x611)+(x612)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x614)*(x619)))+(((IkReal(-1.00000000000000))*(x613)*(x614)))+(((IkReal(-1.00000000000000))*(x613)*(x616)))+(((IkReal(-1.00000000000000))*(r22)*(x618)))+(((IkReal(-1.00000000000000))*(x616)*(x619)))+(((r22)*(x617)))))), ((((IKabs(((((IkReal(50000000.0000000))*(x612)))+(((IkReal(50000000.0000000))*(x611))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x612)))+(((IkReal(50000000.0000000))*(x611)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x614)*(x618)))+(((IkReal(-49999999.9160984))*(x616)*(x618)))+(((IkReal(49999999.9160984))*(x614)*(x617)))+(((x613)*(x615)))+(((x615)*(x619)))+(((IkReal(49999999.9160984))*(x616)*(x617)))))));
                                                                                sj4array[0]=IKsin(j4array[0]);
                                                                                cj4array[0]=IKcos(j4array[0]);
                                                                                if( j4array[0] > IKPI )
                                                                                {
                                                                                    j4array[0]-=IK2PI;
                                                                                }
                                                                                else if( j4array[0] < -IKPI )
                                                                                {
                                                                                    j4array[0]+=IK2PI;
                                                                                }
                                                                                j4valid[0] = true;
                                                                                for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                                {
                                                                                    if( !j4valid[ij4] )
                                                                                    {
                                                                                        continue;
                                                                                    }
                                                                                    _ij4[0] = ij4;
                                                                                    _ij4[1] = -1;
                                                                                    for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                    {
                                                                                        if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                        {
                                                                                            j4valid[iij4]=false;
                                                                                            _ij4[1] = iij4;
                                                                                            break;
                                                                                        }
                                                                                    }
                                                                                    j4 = j4array[ij4];
                                                                                    cj4 = cj4array[ij4];
                                                                                    sj4 = sj4array[ij4];
                                                                                    {
                                                                                        IkReal evalcond[4];
                                                                                        IkReal x620=IKsin(j4);
                                                                                        IkReal x621=IKcos(j4);
                                                                                        IkReal x622=((cj1)*(cj5));
                                                                                        IkReal x623=((r10)*(sj0));
                                                                                        IkReal x624=((IkReal(1.00000000000000))*(sj1));
                                                                                        IkReal x625=((r21)*(sj5));
                                                                                        IkReal x626=((r12)*(sj0));
                                                                                        IkReal x627=((cj0)*(r02));
                                                                                        IkReal x628=((IkReal(1.00000000000000))*(cj1));
                                                                                        IkReal x629=((cj0)*(r00));
                                                                                        IkReal x630=((cj2)*(x620));
                                                                                        IkReal x631=((cj0)*(r01)*(sj5));
                                                                                        IkReal x632=((sj2)*(x620));
                                                                                        IkReal x633=((r11)*(sj0)*(sj5));
                                                                                        IkReal x634=((sj2)*(x621));
                                                                                        IkReal x635=((cj2)*(x621));
                                                                                        evalcond[0]=((((r22)*(sj1)))+(((IkReal(-1.00000000167803))*(x635)))+(x632)+(((cj1)*(x627)))+(((cj1)*(x626))));
                                                                                        evalcond[1]=((((IkReal(-1.00000000167803))*(x634)))+(((IkReal(-1.00000000000000))*(x624)*(x626)))+(((IkReal(-1.00000000000000))*(x624)*(x627)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x630))));
                                                                                        evalcond[2]=((((IkReal(1.00000000167803))*(x630)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x628)*(x633)))+(((IkReal(-1.00000000000000))*(x628)*(x631)))+(((IkReal(-1.00000000000000))*(x624)*(x625)))+(x634)+(((x622)*(x629)))+(((x622)*(x623))));
                                                                                        evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(x624)*(x629)))+(((IkReal(1.00000000167803))*(x632)))+(((IkReal(-1.00000000000000))*(cj5)*(x623)*(x624)))+(((sj1)*(x631)))+(((sj1)*(x633)))+(((IkReal(-1.00000000000000))*(x625)*(x628)))+(((IkReal(-1.00000000000000))*(x635)))+(((r20)*(x622))));
                                                                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                        {
                                                                                            continue;
                                                                                        }
                                                                                    }

                                                                                    {
                                                                                        std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                        vinfos[0].jointtype = 1;
                                                                                        vinfos[0].foffset = j0;
                                                                                        vinfos[0].indices[0] = _ij0[0];
                                                                                        vinfos[0].indices[1] = _ij0[1];
                                                                                        vinfos[0].maxsolutions = _nj0;
                                                                                        vinfos[1].jointtype = 1;
                                                                                        vinfos[1].foffset = j1;
                                                                                        vinfos[1].indices[0] = _ij1[0];
                                                                                        vinfos[1].indices[1] = _ij1[1];
                                                                                        vinfos[1].maxsolutions = _nj1;
                                                                                        vinfos[2].jointtype = 1;
                                                                                        vinfos[2].foffset = j2;
                                                                                        vinfos[2].indices[0] = _ij2[0];
                                                                                        vinfos[2].indices[1] = _ij2[1];
                                                                                        vinfos[2].maxsolutions = _nj2;
                                                                                        vinfos[3].jointtype = 1;
                                                                                        vinfos[3].foffset = j3;
                                                                                        vinfos[3].indices[0] = _ij3[0];
                                                                                        vinfos[3].indices[1] = _ij3[1];
                                                                                        vinfos[3].maxsolutions = _nj3;
                                                                                        vinfos[4].jointtype = 1;
                                                                                        vinfos[4].foffset = j4;
                                                                                        vinfos[4].indices[0] = _ij4[0];
                                                                                        vinfos[4].indices[1] = _ij4[1];
                                                                                        vinfos[4].maxsolutions = _nj4;
                                                                                        vinfos[5].jointtype = 1;
                                                                                        vinfos[5].foffset = j5;
                                                                                        vinfos[5].indices[0] = _ij5[0];
                                                                                        vinfos[5].indices[1] = _ij5[1];
                                                                                        vinfos[5].maxsolutions = _nj5;
                                                                                        std::vector<int> vfree(0);
                                                                                        solutions.AddSolution(vinfos,vfree);
                                                                                    }
                                                                                }
                                                                            }

                                                                        }

                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    {
                                                                        IkReal j4array[1], cj4array[1], sj4array[1];
                                                                        bool j4valid[1]= {false};
                                                                        _nj4 = 1;
                                                                        IkReal x636=((IkReal(1.24999999580492e+15))*(sj2));
                                                                        IkReal x637=((r01)*(sj5));
                                                                        IkReal x638=((cj5)*(r00));
                                                                        IkReal x639=((cj5)*(r10));
                                                                        IkReal x640=((r11)*(sj5));
                                                                        IkReal x641=((cj1)*(sj0));
                                                                        IkReal x642=((cj0)*(cj1));
                                                                        IkReal x643=((IkReal(1.24999999790246e+15))*(cj2));
                                                                        IkReal x644=((r22)*(sj1));
                                                                        IkReal x645=((r21)*(sj1)*(sj5));
                                                                        IkReal x646=((cj5)*(r20)*(sj1));
                                                                        IkReal x647=((x642)*(x643));
                                                                        IkReal x648=((x641)*(x643));
                                                                        if( IKabs(((gconst9)*(((((x638)*(x647)))+(((x636)*(x644)))+(((x643)*(x646)))+(((x639)*(x648)))+(((IkReal(-1.00000000000000))*(x640)*(x648)))+(((r02)*(x636)*(x642)))+(((r12)*(x636)*(x641)))+(((IkReal(-1.00000000000000))*(x643)*(x645)))+(((IkReal(-1.00000000000000))*(x637)*(x647))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x636)*(x637)*(x642)))+(((x636)*(x646)))+(((x636)*(x639)*(x641)))+(((IkReal(-1.00000000000000))*(r12)*(x648)))+(((IkReal(-1.00000000000000))*(x636)*(x640)*(x641)))+(((IkReal(-1.00000000000000))*(r02)*(x647)))+(((x636)*(x638)*(x642)))+(((IkReal(-1.00000000000000))*(x643)*(x644)))+(((IkReal(-1.00000000000000))*(x636)*(x645))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                                            continue;
                                                                        j4array[0]=IKatan2(((gconst9)*(((((x638)*(x647)))+(((x636)*(x644)))+(((x643)*(x646)))+(((x639)*(x648)))+(((IkReal(-1.00000000000000))*(x640)*(x648)))+(((r02)*(x636)*(x642)))+(((r12)*(x636)*(x641)))+(((IkReal(-1.00000000000000))*(x643)*(x645)))+(((IkReal(-1.00000000000000))*(x637)*(x647)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(x636)*(x637)*(x642)))+(((x636)*(x646)))+(((x636)*(x639)*(x641)))+(((IkReal(-1.00000000000000))*(r12)*(x648)))+(((IkReal(-1.00000000000000))*(x636)*(x640)*(x641)))+(((IkReal(-1.00000000000000))*(r02)*(x647)))+(((x636)*(x638)*(x642)))+(((IkReal(-1.00000000000000))*(x643)*(x644)))+(((IkReal(-1.00000000000000))*(x636)*(x645)))))));
                                                                        sj4array[0]=IKsin(j4array[0]);
                                                                        cj4array[0]=IKcos(j4array[0]);
                                                                        if( j4array[0] > IKPI )
                                                                        {
                                                                            j4array[0]-=IK2PI;
                                                                        }
                                                                        else if( j4array[0] < -IKPI )
                                                                        {
                                                                            j4array[0]+=IK2PI;
                                                                        }
                                                                        j4valid[0] = true;
                                                                        for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                        {
                                                                            if( !j4valid[ij4] )
                                                                            {
                                                                                continue;
                                                                            }
                                                                            _ij4[0] = ij4;
                                                                            _ij4[1] = -1;
                                                                            for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                            {
                                                                                if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                {
                                                                                    j4valid[iij4]=false;
                                                                                    _ij4[1] = iij4;
                                                                                    break;
                                                                                }
                                                                            }
                                                                            j4 = j4array[ij4];
                                                                            cj4 = cj4array[ij4];
                                                                            sj4 = sj4array[ij4];
                                                                            {
                                                                                IkReal evalcond[4];
                                                                                IkReal x649=IKsin(j4);
                                                                                IkReal x650=IKcos(j4);
                                                                                IkReal x651=((cj1)*(cj5));
                                                                                IkReal x652=((r10)*(sj0));
                                                                                IkReal x653=((IkReal(1.00000000000000))*(sj1));
                                                                                IkReal x654=((r21)*(sj5));
                                                                                IkReal x655=((r12)*(sj0));
                                                                                IkReal x656=((cj0)*(r02));
                                                                                IkReal x657=((IkReal(1.00000000000000))*(cj1));
                                                                                IkReal x658=((cj0)*(r00));
                                                                                IkReal x659=((cj2)*(x649));
                                                                                IkReal x660=((cj0)*(r01)*(sj5));
                                                                                IkReal x661=((sj2)*(x649));
                                                                                IkReal x662=((r11)*(sj0)*(sj5));
                                                                                IkReal x663=((sj2)*(x650));
                                                                                IkReal x664=((cj2)*(x650));
                                                                                evalcond[0]=((((IkReal(-1.00000000167803))*(x664)))+(((r22)*(sj1)))+(((cj1)*(x655)))+(((cj1)*(x656)))+(x661));
                                                                                evalcond[1]=((((IkReal(-1.00000000167803))*(x663)))+(((IkReal(-1.00000000000000))*(x659)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x653)*(x656)))+(((IkReal(-1.00000000000000))*(x653)*(x655))));
                                                                                evalcond[2]=((((cj5)*(r20)*(sj1)))+(((x651)*(x652)))+(((x651)*(x658)))+(((IkReal(-1.00000000000000))*(x657)*(x662)))+(((IkReal(-1.00000000000000))*(x657)*(x660)))+(x663)+(((IkReal(1.00000000167803))*(x659)))+(((IkReal(-1.00000000000000))*(x653)*(x654))));
                                                                                evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(x652)*(x653)))+(((sj1)*(x662)))+(((sj1)*(x660)))+(((IkReal(-1.00000000000000))*(cj5)*(x653)*(x658)))+(((IkReal(-1.00000000000000))*(x664)))+(((IkReal(1.00000000167803))*(x661)))+(((IkReal(-1.00000000000000))*(x654)*(x657)))+(((r20)*(x651))));
                                                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                {
                                                                                    continue;
                                                                                }
                                                                            }

                                                                            {
                                                                                std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                vinfos[0].jointtype = 1;
                                                                                vinfos[0].foffset = j0;
                                                                                vinfos[0].indices[0] = _ij0[0];
                                                                                vinfos[0].indices[1] = _ij0[1];
                                                                                vinfos[0].maxsolutions = _nj0;
                                                                                vinfos[1].jointtype = 1;
                                                                                vinfos[1].foffset = j1;
                                                                                vinfos[1].indices[0] = _ij1[0];
                                                                                vinfos[1].indices[1] = _ij1[1];
                                                                                vinfos[1].maxsolutions = _nj1;
                                                                                vinfos[2].jointtype = 1;
                                                                                vinfos[2].foffset = j2;
                                                                                vinfos[2].indices[0] = _ij2[0];
                                                                                vinfos[2].indices[1] = _ij2[1];
                                                                                vinfos[2].maxsolutions = _nj2;
                                                                                vinfos[3].jointtype = 1;
                                                                                vinfos[3].foffset = j3;
                                                                                vinfos[3].indices[0] = _ij3[0];
                                                                                vinfos[3].indices[1] = _ij3[1];
                                                                                vinfos[3].maxsolutions = _nj3;
                                                                                vinfos[4].jointtype = 1;
                                                                                vinfos[4].foffset = j4;
                                                                                vinfos[4].indices[0] = _ij4[0];
                                                                                vinfos[4].indices[1] = _ij4[1];
                                                                                vinfos[4].maxsolutions = _nj4;
                                                                                vinfos[5].jointtype = 1;
                                                                                vinfos[5].foffset = j5;
                                                                                vinfos[5].indices[0] = _ij5[0];
                                                                                vinfos[5].indices[1] = _ij5[1];
                                                                                vinfos[5].maxsolutions = _nj5;
                                                                                std::vector<int> vfree(0);
                                                                                solutions.AddSolution(vinfos,vfree);
                                                                            }
                                                                        }
                                                                    }

                                                                }

                                                            }
                                                        }
                                                    }

                                                }
                                                else
                                                {
                                                    if( 1 )
                                                    {
                                                        continue;

                                                    }
                                                    else
                                                    {
                                                    }
                                                }
                                            }
                                        }
                                    }

                                }
                                else
                                {
                                    {
                                        IkReal j2array[1], cj2array[1], sj2array[1];
                                        bool j2valid[1]= {false};
                                        _nj2 = 1;
                                        IkReal x665=((cj0)*(r01));
                                        IkReal x666=((IkReal(1.00000000000000))*(sj5));
                                        IkReal x667=((cj5)*(sj1));
                                        IkReal x668=((r11)*(sj0));
                                        IkReal x669=((r10)*(sj0));
                                        IkReal x670=((sj1)*(sj5));
                                        IkReal x671=((cj0)*(r00));
                                        IkReal x672=((IkReal(1.00000000000000))*(cj1)*(cj5));
                                        if( IKabs(((gconst0)*(((((x667)*(x668)))+(((x665)*(x667)))+(((IkReal(-1.00000000000000))*(r21)*(x672)))+(((x670)*(x671)))+(((x669)*(x670)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x666))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r21)*(x667)))+(((IkReal(-1.00000000000000))*(x668)*(x672)))+(((IkReal(-1.00000000000000))*(r20)*(sj1)*(x666)))+(((IkReal(-1.00000000000000))*(cj1)*(x666)*(x671)))+(((IkReal(-1.00000000000000))*(x665)*(x672)))+(((IkReal(-1.00000000000000))*(cj1)*(x666)*(x669))))))) < IKFAST_ATAN2_MAGTHRESH )
                                            continue;
                                        j2array[0]=IKatan2(((gconst0)*(((((x667)*(x668)))+(((x665)*(x667)))+(((IkReal(-1.00000000000000))*(r21)*(x672)))+(((x670)*(x671)))+(((x669)*(x670)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x666)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(r21)*(x667)))+(((IkReal(-1.00000000000000))*(x668)*(x672)))+(((IkReal(-1.00000000000000))*(r20)*(sj1)*(x666)))+(((IkReal(-1.00000000000000))*(cj1)*(x666)*(x671)))+(((IkReal(-1.00000000000000))*(x665)*(x672)))+(((IkReal(-1.00000000000000))*(cj1)*(x666)*(x669)))))));
                                        sj2array[0]=IKsin(j2array[0]);
                                        cj2array[0]=IKcos(j2array[0]);
                                        if( j2array[0] > IKPI )
                                        {
                                            j2array[0]-=IK2PI;
                                        }
                                        else if( j2array[0] < -IKPI )
                                        {
                                            j2array[0]+=IK2PI;
                                        }
                                        j2valid[0] = true;
                                        for(int ij2 = 0; ij2 < 1; ++ij2)
                                        {
                                            if( !j2valid[ij2] )
                                            {
                                                continue;
                                            }
                                            _ij2[0] = ij2;
                                            _ij2[1] = -1;
                                            for(int iij2 = ij2+1; iij2 < 1; ++iij2)
                                            {
                                                if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
                                                {
                                                    j2valid[iij2]=false;
                                                    _ij2[1] = iij2;
                                                    break;
                                                }
                                            }
                                            j2 = j2array[ij2];
                                            cj2 = cj2array[ij2];
                                            sj2 = sj2array[ij2];
                                            {
                                                IkReal evalcond[4];
                                                IkReal x673=IKcos(j2);
                                                IkReal x674=IKsin(j2);
                                                IkReal x675=((IkReal(1.00000000000000))*(sj1));
                                                IkReal x676=((py)*(sj0));
                                                IkReal x677=((r11)*(sj0));
                                                IkReal x678=((cj0)*(px));
                                                IkReal x679=((cj1)*(cj5));
                                                IkReal x680=((cj0)*(r01));
                                                IkReal x681=((IkReal(0.0340000000000000))*(sj1));
                                                IkReal x682=((cj0)*(r00));
                                                IkReal x683=((r20)*(sj5));
                                                IkReal x684=((r10)*(sj0));
                                                IkReal x685=((IkReal(0.707106781186548))*(sj3));
                                                IkReal x686=((cj1)*(sj5));
                                                IkReal x687=((IkReal(0.00707106781186548))*(x674));
                                                IkReal x688=((IkReal(0.0340000000000000))*(x686));
                                                IkReal x689=((cj3)*(x673));
                                                evalcond[0]=((((cj5)*(r21)*(sj1)))+(((x682)*(x686)))+(((x677)*(x679)))+(((x679)*(x680)))+(((IkReal(-1.00000000000000))*(x673)*(x685)))+(((sj1)*(x683)))+(((x684)*(x686)))+(((IkReal(-0.707106781186548))*(x689))));
                                                evalcond[1]=((((r21)*(x679)))+(((IkReal(-1.00000000000000))*(cj5)*(x675)*(x680)))+(((cj1)*(x683)))+(((IkReal(-1.00000000000000))*(cj5)*(x675)*(x677)))+(((IkReal(-1.00000000000000))*(x674)*(x685)))+(((IkReal(-0.707106781186548))*(cj3)*(x674)))+(((IkReal(-1.00000000000000))*(sj5)*(x675)*(x684)))+(((IkReal(-1.00000000000000))*(sj5)*(x675)*(x682))));
                                                evalcond[2]=((((IkReal(0.00707106781186548))*(x689)))+(((IkReal(-1.00000000000000))*(x680)*(x688)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x681)))+(((IkReal(0.00707106781186548))*(sj3)*(x673)))+(((IkReal(-0.338000000000000))*(x674)))+(((IkReal(0.0800000000000000))*(x673)))+(((cj5)*(r20)*(x681)))+(((IkReal(0.0340000000000000))*(x679)*(x682)))+(((IkReal(0.0340000000000000))*(x679)*(x684)))+(((pz)*(sj1)))+(((IkReal(-1.00000000000000))*(x677)*(x688)))+(((cj1)*(x678)))+(((cj1)*(x676))));
                                                evalcond[3]=((IkReal(0.369000000000000))+(((IkReal(0.338000000000000))*(x673)))+(((IkReal(-1.00000000000000))*(x675)*(x676)))+(((IkReal(-1.00000000000000))*(x675)*(x678)))+(((IkReal(-1.00000000000000))*(cj5)*(x681)*(x682)))+(((IkReal(-1.00000000000000))*(cj5)*(x681)*(x684)))+(((IkReal(0.0340000000000000))*(r20)*(x679)))+(((sj3)*(x687)))+(((sj5)*(x677)*(x681)))+(((cj1)*(pz)))+(((IkReal(0.0800000000000000))*(x674)))+(((IkReal(-1.00000000000000))*(r21)*(x688)))+(((sj5)*(x680)*(x681)))+(((cj3)*(x687))));
                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                {
                                                    continue;
                                                }
                                            }

                                            {
                                                IkReal dummyeval[1];
                                                IkReal gconst2;
                                                gconst2=IKsign(((((IkReal(0.707106781186548))*(sj3)))+(((IkReal(0.707106781186548))*(cj3)))));
                                                dummyeval[0]=((sj3)+(cj3));
                                                if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                {
                                                    {
                                                        IkReal dummyeval[2];
                                                        IkReal x690=((IkReal(1.00000000000000))*(sj3));
                                                        IkReal x691=((IkReal(1.00000000000000))*(cj3));
                                                        dummyeval[0]=((((IkReal(-1.00000000000000))*(sj2)*(x690)))+(((IkReal(-1.00000000000000))*(sj2)*(x691))));
                                                        dummyeval[1]=((((IkReal(-1.00000000000000))*(x691)))+(((IkReal(-1.00000000000000))*(x690))));
                                                        if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
                                                        {
                                                            {
                                                                IkReal evalcond[9];
                                                                IkReal x692=((IkReal(0.707106781186548))*(sj3));
                                                                IkReal x693=((IkReal(0.707106781186548))*(cj3));
                                                                IkReal x694=((IkReal(0.00707106781186548))*(cj3));
                                                                IkReal x695=((IkReal(0.00707106781186548))*(sj3));
                                                                IkReal x696=((IkReal(0.0340000000000000))*(sj5));
                                                                IkReal x697=((r21)*(sj1));
                                                                IkReal x698=((IkReal(1.00000000000000))*(sj0));
                                                                IkReal x699=((r00)*(sj5));
                                                                IkReal x700=((cj1)*(sj0));
                                                                IkReal x701=((cj5)*(r01));
                                                                IkReal x702=((cj1)*(r21));
                                                                IkReal x703=((cj0)*(cj1));
                                                                IkReal x704=((cj5)*(sj1));
                                                                IkReal x705=((IkReal(0.0340000000000000))*(cj5));
                                                                IkReal x706=((r10)*(sj5));
                                                                IkReal x707=((r20)*(sj5));
                                                                IkReal x708=((cj5)*(r11));
                                                                IkReal x709=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                                                evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
                                                                evalcond[1]=((((cj0)*(x708)))+(((cj0)*(x706)))+(((IkReal(-1.00000000000000))*(x698)*(x699)))+(x693)+(((IkReal(-1.00000000000000))*(x692)))+(((IkReal(-1.00000000000000))*(x698)*(x701))));
                                                                evalcond[2]=((IkReal(0.134000000000000))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x705)))+(((IkReal(-1.00000000000000))*(px)*(x698)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x696)))+(((r01)*(sj0)*(x696)))+(x695)+(((IkReal(-1.00000000000000))*(x694)))+(((cj0)*(r10)*(x705)))+(((cj0)*(py))));
                                                                evalcond[3]=((((x701)*(x703)))+(((x700)*(x706)))+(((x700)*(x708)))+(((IkReal(-1.00000000000000))*(x692)))+(((IkReal(-1.00000000000000))*(x693)))+(((sj1)*(x707)))+(((x699)*(x703)))+(((cj5)*(x697))));
                                                                evalcond[4]=((((IkReal(-1.00000000000000))*(sj1)*(x698)*(x706)))+(((cj5)*(x702)))+(((IkReal(-1.00000000000000))*(x699)*(x709)))+(((IkReal(-1.00000000000000))*(r11)*(x698)*(x704)))+(((cj1)*(x707)))+(((IkReal(-1.00000000000000))*(x701)*(x709))));
                                                                evalcond[5]=((IkReal(0.0800000000000000))+(((IkReal(-1.00000000000000))*(x696)*(x697)))+(((IkReal(-1.00000000000000))*(r11)*(x696)*(x700)))+(((IkReal(-1.00000000000000))*(r01)*(x696)*(x703)))+(((IkReal(0.0340000000000000))*(r20)*(x704)))+(((px)*(x703)))+(((r10)*(x700)*(x705)))+(x694)+(x695)+(((pz)*(sj1)))+(((py)*(x700)))+(((r00)*(x703)*(x705))));
                                                                evalcond[6]=((IkReal(0.707000000000000))+(((IkReal(-0.0340000000000000))*(r10)*(sj0)*(x704)))+(((r11)*(sj0)*(sj1)*(x696)))+(((IkReal(-1.00000000000000))*(py)*(sj1)*(x698)))+(((cj1)*(pz)))+(((IkReal(-1.00000000000000))*(px)*(x709)))+(((IkReal(-1.00000000000000))*(x696)*(x702)))+(((cj0)*(r01)*(sj1)*(x696)))+(((IkReal(-0.0340000000000000))*(cj0)*(r00)*(x704)))+(((cj1)*(r20)*(x705))));
                                                                if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
                                                                {
                                                                    {
                                                                        IkReal j4array[1], cj4array[1], sj4array[1];
                                                                        bool j4valid[1]= {false};
                                                                        _nj4 = 1;
                                                                        IkReal x710=((sj0)*(sj1));
                                                                        IkReal x711=((cj0)*(sj1));
                                                                        IkReal x712=((IkReal(1.00000000000000))*(cj5)*(sj1));
                                                                        if( IKabs(((((IkReal(-1.00000000000000))*(r12)*(x710)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(x711))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r11)*(sj5)*(x710)))+(((cj1)*(cj5)*(r20)))+(((r01)*(sj5)*(x711)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x711)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(x710)))+(((IkReal(-1.00000000000000))*(cj1)*(r21)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r12)*(x710)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(x711)))))+IKsqr(((((r11)*(sj5)*(x710)))+(((cj1)*(cj5)*(r20)))+(((r01)*(sj5)*(x711)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x711)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(x710)))+(((IkReal(-1.00000000000000))*(cj1)*(r21)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
                                                                            continue;
                                                                        j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r12)*(x710)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(x711)))), ((((r11)*(sj5)*(x710)))+(((cj1)*(cj5)*(r20)))+(((r01)*(sj5)*(x711)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x711)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(x710)))+(((IkReal(-1.00000000000000))*(cj1)*(r21)*(sj5)))));
                                                                        sj4array[0]=IKsin(j4array[0]);
                                                                        cj4array[0]=IKcos(j4array[0]);
                                                                        if( j4array[0] > IKPI )
                                                                        {
                                                                            j4array[0]-=IK2PI;
                                                                        }
                                                                        else if( j4array[0] < -IKPI )
                                                                        {
                                                                            j4array[0]+=IK2PI;
                                                                        }
                                                                        j4valid[0] = true;
                                                                        for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                        {
                                                                            if( !j4valid[ij4] )
                                                                            {
                                                                                continue;
                                                                            }
                                                                            _ij4[0] = ij4;
                                                                            _ij4[1] = -1;
                                                                            for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                            {
                                                                                if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                {
                                                                                    j4valid[iij4]=false;
                                                                                    _ij4[1] = iij4;
                                                                                    break;
                                                                                }
                                                                            }
                                                                            j4 = j4array[ij4];
                                                                            cj4 = cj4array[ij4];
                                                                            sj4 = sj4array[ij4];
                                                                            {
                                                                                IkReal evalcond[6];
                                                                                IkReal x713=IKcos(j4);
                                                                                IkReal x714=IKsin(j4);
                                                                                IkReal x715=((cj1)*(cj5));
                                                                                IkReal x716=((r10)*(sj0));
                                                                                IkReal x717=((IkReal(1.00000000000000))*(sj1));
                                                                                IkReal x718=((r21)*(sj5));
                                                                                IkReal x719=((r12)*(sj0));
                                                                                IkReal x720=((IkReal(1.00000000000000))*(sj0));
                                                                                IkReal x721=((cj5)*(r00));
                                                                                IkReal x722=((cj0)*(r02));
                                                                                IkReal x723=((r11)*(sj5));
                                                                                IkReal x724=((IkReal(0.707106781186548))*(sj3));
                                                                                IkReal x725=((IkReal(1.00000000000000))*(cj1));
                                                                                IkReal x726=((IkReal(0.707106781186548))*(cj3));
                                                                                IkReal x727=((cj0)*(r01)*(sj5));
                                                                                IkReal x728=((x713)*(x724));
                                                                                IkReal x729=((x713)*(x726));
                                                                                IkReal x730=((x714)*(x726));
                                                                                IkReal x731=((x714)*(x724));
                                                                                evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x720)))+(((IkReal(-1.00000000000000))*(x729)))+(((IkReal(-1.00000000000000))*(x728)))+(((cj0)*(r12))));
                                                                                evalcond[1]=((((cj1)*(x722)))+(((r22)*(sj1)))+(((IkReal(-1.00000000000000))*(x729)))+(x728)+(((cj1)*(x719))));
                                                                                evalcond[2]=((((cj0)*(cj5)*(r10)))+(((IkReal(-1.00000000000000))*(x720)*(x721)))+(((IkReal(-1.00000000000000))*(cj0)*(x723)))+(x731)+(x730)+(((r01)*(sj0)*(sj5))));
                                                                                evalcond[3]=((((IkReal(-1.00000000000000))*(x714)))+(((IkReal(-1.00000000000000))*(x717)*(x722)))+(((IkReal(-1.00000000000000))*(x717)*(x719)))+(((cj1)*(r22))));
                                                                                evalcond[4]=((((x715)*(x716)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x720)*(x723)))+(((IkReal(-1.00000000000000))*(x717)*(x718)))+(((IkReal(-1.00000000000000))*(x725)*(x727)))+(((IkReal(-1.00000000000000))*(x731)))+(((cj0)*(r00)*(x715)))+(x730));
                                                                                evalcond[5]=((((IkReal(-1.00000000000000))*(cj0)*(x717)*(x721)))+(((IkReal(-1.00000000000000))*(x713)))+(((IkReal(-1.00000000000000))*(cj5)*(x716)*(x717)))+(((r20)*(x715)))+(((sj0)*(sj1)*(x723)))+(((sj1)*(x727)))+(((IkReal(-1.00000000000000))*(x718)*(x725))));
                                                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
                                                                                {
                                                                                    continue;
                                                                                }
                                                                            }

                                                                            {
                                                                                std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                vinfos[0].jointtype = 1;
                                                                                vinfos[0].foffset = j0;
                                                                                vinfos[0].indices[0] = _ij0[0];
                                                                                vinfos[0].indices[1] = _ij0[1];
                                                                                vinfos[0].maxsolutions = _nj0;
                                                                                vinfos[1].jointtype = 1;
                                                                                vinfos[1].foffset = j1;
                                                                                vinfos[1].indices[0] = _ij1[0];
                                                                                vinfos[1].indices[1] = _ij1[1];
                                                                                vinfos[1].maxsolutions = _nj1;
                                                                                vinfos[2].jointtype = 1;
                                                                                vinfos[2].foffset = j2;
                                                                                vinfos[2].indices[0] = _ij2[0];
                                                                                vinfos[2].indices[1] = _ij2[1];
                                                                                vinfos[2].maxsolutions = _nj2;
                                                                                vinfos[3].jointtype = 1;
                                                                                vinfos[3].foffset = j3;
                                                                                vinfos[3].indices[0] = _ij3[0];
                                                                                vinfos[3].indices[1] = _ij3[1];
                                                                                vinfos[3].maxsolutions = _nj3;
                                                                                vinfos[4].jointtype = 1;
                                                                                vinfos[4].foffset = j4;
                                                                                vinfos[4].indices[0] = _ij4[0];
                                                                                vinfos[4].indices[1] = _ij4[1];
                                                                                vinfos[4].maxsolutions = _nj4;
                                                                                vinfos[5].jointtype = 1;
                                                                                vinfos[5].foffset = j5;
                                                                                vinfos[5].indices[0] = _ij5[0];
                                                                                vinfos[5].indices[1] = _ij5[1];
                                                                                vinfos[5].maxsolutions = _nj5;
                                                                                std::vector<int> vfree(0);
                                                                                solutions.AddSolution(vinfos,vfree);
                                                                            }
                                                                        }
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    IkReal x732=((IkReal(0.707106781186548))*(sj3));
                                                                    IkReal x733=((IkReal(0.707106781186548))*(cj3));
                                                                    IkReal x734=((IkReal(0.00707106781186548))*(cj3));
                                                                    IkReal x735=((IkReal(0.00707106781186548))*(sj3));
                                                                    IkReal x736=((IkReal(0.0340000000000000))*(sj5));
                                                                    IkReal x737=((r21)*(sj1));
                                                                    IkReal x738=((IkReal(1.00000000000000))*(sj0));
                                                                    IkReal x739=((r00)*(sj5));
                                                                    IkReal x740=((cj1)*(sj0));
                                                                    IkReal x741=((cj5)*(r01));
                                                                    IkReal x742=((cj1)*(r21));
                                                                    IkReal x743=((cj0)*(cj1));
                                                                    IkReal x744=((cj5)*(sj1));
                                                                    IkReal x745=((IkReal(0.0340000000000000))*(cj5));
                                                                    IkReal x746=((r10)*(sj5));
                                                                    IkReal x747=((r20)*(sj5));
                                                                    IkReal x748=((cj5)*(r11));
                                                                    IkReal x749=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                                                    evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
                                                                    evalcond[1]=((((IkReal(-1.00000000000000))*(x738)*(x741)))+(((IkReal(-1.00000000000000))*(x732)))+(x733)+(((IkReal(-1.00000000000000))*(x738)*(x739)))+(((cj0)*(x748)))+(((cj0)*(x746))));
                                                                    evalcond[2]=((IkReal(0.134000000000000))+(((r01)*(sj0)*(x736)))+(((cj0)*(r10)*(x745)))+(((IkReal(-1.00000000000000))*(px)*(x738)))+(((IkReal(-1.00000000000000))*(x734)))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x745)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(x736)))+(x735)+(((cj0)*(py))));
                                                                    evalcond[3]=((((cj5)*(x737)))+(((x739)*(x743)))+(((x740)*(x746)))+(((x740)*(x748)))+(((sj1)*(x747)))+(((x741)*(x743)))+(x733)+(x732));
                                                                    evalcond[4]=((((cj1)*(x747)))+(((IkReal(-1.00000000000000))*(r11)*(x738)*(x744)))+(((IkReal(-1.00000000000000))*(x741)*(x749)))+(((IkReal(-1.00000000000000))*(x739)*(x749)))+(((cj5)*(x742)))+(((IkReal(-1.00000000000000))*(sj1)*(x738)*(x746))));
                                                                    evalcond[5]=((IkReal(-0.0800000000000000))+(((py)*(x740)))+(((r00)*(x743)*(x745)))+(((IkReal(0.0340000000000000))*(r20)*(x744)))+(((IkReal(-1.00000000000000))*(x736)*(x737)))+(((IkReal(-1.00000000000000))*(r01)*(x736)*(x743)))+(((r10)*(x740)*(x745)))+(((IkReal(-1.00000000000000))*(r11)*(x736)*(x740)))+(((px)*(x743)))+(((IkReal(-1.00000000000000))*(x734)))+(((IkReal(-1.00000000000000))*(x735)))+(((pz)*(sj1))));
                                                                    evalcond[6]=((IkReal(0.0310000000000000))+(((IkReal(-1.00000000000000))*(px)*(x749)))+(((IkReal(-0.0340000000000000))*(cj0)*(r00)*(x744)))+(((IkReal(-1.00000000000000))*(py)*(sj1)*(x738)))+(((cj1)*(pz)))+(((IkReal(-0.0340000000000000))*(r10)*(sj0)*(x744)))+(((cj1)*(r20)*(x745)))+(((r11)*(sj0)*(sj1)*(x736)))+(((IkReal(-1.00000000000000))*(x736)*(x742)))+(((cj0)*(r01)*(sj1)*(x736))));
                                                                    if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
                                                                    {
                                                                        {
                                                                            IkReal j4array[1], cj4array[1], sj4array[1];
                                                                            bool j4valid[1]= {false};
                                                                            _nj4 = 1;
                                                                            IkReal x750=((IkReal(1.00000000000000))*(cj1));
                                                                            IkReal x751=((cj0)*(sj1));
                                                                            IkReal x752=((IkReal(1.00000000000000))*(sj5));
                                                                            IkReal x753=((sj0)*(sj1));
                                                                            if( IKabs(((((r02)*(x751)))+(((r12)*(x753)))+(((IkReal(-1.00000000000000))*(r22)*(x750))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(r00)*(x751)))+(((cj1)*(r21)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x752)*(x753)))+(((IkReal(-1.00000000000000))*(r01)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x750)))+(((cj5)*(r10)*(x753))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r02)*(x751)))+(((r12)*(x753)))+(((IkReal(-1.00000000000000))*(r22)*(x750)))))+IKsqr(((((cj5)*(r00)*(x751)))+(((cj1)*(r21)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x752)*(x753)))+(((IkReal(-1.00000000000000))*(r01)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x750)))+(((cj5)*(r10)*(x753)))))-1) <= IKFAST_SINCOS_THRESH )
                                                                                continue;
                                                                            j4array[0]=IKatan2(((((r02)*(x751)))+(((r12)*(x753)))+(((IkReal(-1.00000000000000))*(r22)*(x750)))), ((((cj5)*(r00)*(x751)))+(((cj1)*(r21)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x752)*(x753)))+(((IkReal(-1.00000000000000))*(r01)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x750)))+(((cj5)*(r10)*(x753)))));
                                                                            sj4array[0]=IKsin(j4array[0]);
                                                                            cj4array[0]=IKcos(j4array[0]);
                                                                            if( j4array[0] > IKPI )
                                                                            {
                                                                                j4array[0]-=IK2PI;
                                                                            }
                                                                            else if( j4array[0] < -IKPI )
                                                                            {
                                                                                j4array[0]+=IK2PI;
                                                                            }
                                                                            j4valid[0] = true;
                                                                            for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                            {
                                                                                if( !j4valid[ij4] )
                                                                                {
                                                                                    continue;
                                                                                }
                                                                                _ij4[0] = ij4;
                                                                                _ij4[1] = -1;
                                                                                for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                {
                                                                                    if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                    {
                                                                                        j4valid[iij4]=false;
                                                                                        _ij4[1] = iij4;
                                                                                        break;
                                                                                    }
                                                                                }
                                                                                j4 = j4array[ij4];
                                                                                cj4 = cj4array[ij4];
                                                                                sj4 = sj4array[ij4];
                                                                                {
                                                                                    IkReal evalcond[6];
                                                                                    IkReal x754=IKcos(j4);
                                                                                    IkReal x755=IKsin(j4);
                                                                                    IkReal x756=((cj1)*(cj5));
                                                                                    IkReal x757=((r10)*(sj0));
                                                                                    IkReal x758=((IkReal(1.00000000000000))*(sj1));
                                                                                    IkReal x759=((r21)*(sj5));
                                                                                    IkReal x760=((r12)*(sj0));
                                                                                    IkReal x761=((IkReal(1.00000000000000))*(sj0));
                                                                                    IkReal x762=((cj5)*(r00));
                                                                                    IkReal x763=((cj0)*(r02));
                                                                                    IkReal x764=((r11)*(sj5));
                                                                                    IkReal x765=((IkReal(0.707106781186548))*(sj3));
                                                                                    IkReal x766=((IkReal(1.00000000000000))*(cj1));
                                                                                    IkReal x767=((IkReal(0.707106781186548))*(cj3));
                                                                                    IkReal x768=((cj0)*(r01)*(sj5));
                                                                                    IkReal x769=((x754)*(x767));
                                                                                    IkReal x770=((x754)*(x765));
                                                                                    IkReal x771=((x755)*(x765));
                                                                                    IkReal x772=((x755)*(x767));
                                                                                    evalcond[0]=((((IkReal(-1.00000000000000))*(x769)))+(((IkReal(-1.00000000000000))*(r02)*(x761)))+(((IkReal(-1.00000000000000))*(x770)))+(((cj0)*(r12))));
                                                                                    evalcond[1]=((((cj1)*(x760)))+(((cj1)*(x763)))+(((r22)*(sj1)))+(x769)+(((IkReal(-1.00000000000000))*(x770))));
                                                                                    evalcond[2]=((((cj0)*(cj5)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(x764)))+(x772)+(x771)+(((r01)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x761)*(x762))));
                                                                                    evalcond[3]=((((IkReal(-1.00000000000000))*(x758)*(x763)))+(((IkReal(-1.00000000000000))*(x758)*(x760)))+(((cj1)*(r22)))+(x755));
                                                                                    evalcond[4]=((((x756)*(x757)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x761)*(x764)))+(((IkReal(-1.00000000000000))*(x766)*(x768)))+(x771)+(((IkReal(-1.00000000000000))*(x772)))+(((IkReal(-1.00000000000000))*(x758)*(x759)))+(((cj0)*(r00)*(x756))));
                                                                                    evalcond[5]=((((sj0)*(sj1)*(x764)))+(((sj1)*(x768)))+(((IkReal(-1.00000000000000))*(cj5)*(x757)*(x758)))+(((IkReal(-1.00000000000000))*(cj0)*(x758)*(x762)))+(x754)+(((r20)*(x756)))+(((IkReal(-1.00000000000000))*(x759)*(x766))));
                                                                                    if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
                                                                                    {
                                                                                        continue;
                                                                                    }
                                                                                }

                                                                                {
                                                                                    std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                    vinfos[0].jointtype = 1;
                                                                                    vinfos[0].foffset = j0;
                                                                                    vinfos[0].indices[0] = _ij0[0];
                                                                                    vinfos[0].indices[1] = _ij0[1];
                                                                                    vinfos[0].maxsolutions = _nj0;
                                                                                    vinfos[1].jointtype = 1;
                                                                                    vinfos[1].foffset = j1;
                                                                                    vinfos[1].indices[0] = _ij1[0];
                                                                                    vinfos[1].indices[1] = _ij1[1];
                                                                                    vinfos[1].maxsolutions = _nj1;
                                                                                    vinfos[2].jointtype = 1;
                                                                                    vinfos[2].foffset = j2;
                                                                                    vinfos[2].indices[0] = _ij2[0];
                                                                                    vinfos[2].indices[1] = _ij2[1];
                                                                                    vinfos[2].maxsolutions = _nj2;
                                                                                    vinfos[3].jointtype = 1;
                                                                                    vinfos[3].foffset = j3;
                                                                                    vinfos[3].indices[0] = _ij3[0];
                                                                                    vinfos[3].indices[1] = _ij3[1];
                                                                                    vinfos[3].maxsolutions = _nj3;
                                                                                    vinfos[4].jointtype = 1;
                                                                                    vinfos[4].foffset = j4;
                                                                                    vinfos[4].indices[0] = _ij4[0];
                                                                                    vinfos[4].indices[1] = _ij4[1];
                                                                                    vinfos[4].maxsolutions = _nj4;
                                                                                    vinfos[5].jointtype = 1;
                                                                                    vinfos[5].foffset = j5;
                                                                                    vinfos[5].indices[0] = _ij5[0];
                                                                                    vinfos[5].indices[1] = _ij5[1];
                                                                                    vinfos[5].maxsolutions = _nj5;
                                                                                    std::vector<int> vfree(0);
                                                                                    solutions.AddSolution(vinfos,vfree);
                                                                                }
                                                                            }
                                                                        }

                                                                    }
                                                                    else
                                                                    {
                                                                        IkReal x773=((IkReal(1.00000000000000))*(sj0));
                                                                        IkReal x774=((r00)*(sj5));
                                                                        IkReal x775=((r11)*(sj0));
                                                                        IkReal x776=((cj5)*(r01));
                                                                        IkReal x777=((IkReal(0.0340000000000000))*(cj5));
                                                                        IkReal x778=((cj0)*(r10));
                                                                        IkReal x779=((cj0)*(cj1));
                                                                        IkReal x780=((cj1)*(cj5));
                                                                        IkReal x781=((sj1)*(sj5));
                                                                        IkReal x782=((r10)*(sj0));
                                                                        IkReal x783=((cj0)*(r01));
                                                                        IkReal x784=((cj5)*(r11));
                                                                        IkReal x785=((cj1)*(r20));
                                                                        IkReal x786=((IkReal(0.0340000000000000))*(cj1)*(sj5));
                                                                        IkReal x787=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                                                        IkReal x788=((r01)*(sj0)*(sj5));
                                                                        IkReal x789=((cj0)*(r11)*(sj5));
                                                                        evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(0.785398163397448))+(j3)), IkReal(6.28318530717959))));
                                                                        evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x773)))+(((cj0)*(r12))));
                                                                        evalcond[2]=((IkReal(-1.00000000167803))+(((sj5)*(x778)))+(((IkReal(-1.00000000000000))*(x773)*(x774)))+(((IkReal(-1.00000000000000))*(x773)*(x776)))+(((cj0)*(x784))));
                                                                        evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x773)))+(x788)+(((IkReal(-1.00000000000000))*(x789)))+(((cj5)*(x778))));
                                                                        evalcond[4]=((IkReal(0.144000000016780))+(((IkReal(-1.00000000000000))*(px)*(x773)))+(((x777)*(x778)))+(((IkReal(0.0340000000000000))*(x788)))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x777)))+(((IkReal(-0.0340000000000000))*(x789)))+(((cj0)*(py))));
                                                                        evalcond[5]=((((x774)*(x779)))+(((x776)*(x779)))+(((r20)*(x781)))+(((cj5)*(r21)*(sj1)))+(((x775)*(x780)))+(((cj1)*(sj5)*(x782))));
                                                                        evalcond[6]=((((sj5)*(x785)))+(((IkReal(-1.00000000000000))*(r10)*(x773)*(x781)))+(((IkReal(-1.00000000000000))*(x776)*(x787)))+(((r21)*(x780)))+(((IkReal(-1.00000000000000))*(x774)*(x787)))+(((IkReal(-1.00000000000000))*(sj1)*(x773)*(x784))));
                                                                        evalcond[7]=((((IkReal(-1.00000000000000))*(x775)*(x786)))+(((cj1)*(py)*(sj0)))+(((px)*(x779)))+(((IkReal(-0.0340000000000000))*(r01)*(sj5)*(x779)))+(((IkReal(-0.338000000000000))*(sj2)))+(((r00)*(x777)*(x779)))+(((cj1)*(x777)*(x782)))+(((pz)*(sj1)))+(((IkReal(0.0800000000000000))*(cj2)))+(((r20)*(sj1)*(x777)))+(((IkReal(-0.0340000000000000))*(r21)*(x781))));
                                                                        evalcond[8]=((IkReal(0.369000000000000))+(((IkReal(0.0800000000000000))*(sj2)))+(((IkReal(0.338000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x787)))+(((IkReal(-1.00000000000000))*(sj1)*(x777)*(x782)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(sj1)*(x777)))+(((cj1)*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(x786)))+(((IkReal(0.0340000000000000))*(x775)*(x781)))+(((x777)*(x785)))+(((IkReal(0.0340000000000000))*(x781)*(x783)))+(((IkReal(-1.00000000000000))*(py)*(sj1)*(x773))));
                                                                        if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
                                                                        {
                                                                            {
                                                                                IkReal dummyeval[1];
                                                                                IkReal gconst3;
                                                                                gconst3=IKsign(((((IkReal(1.24999999580492e+15))*((sj2)*(sj2))))+(((IkReal(1.25000000000000e+15))*((cj2)*(cj2))))));
                                                                                dummyeval[0]=(((sj2)*(sj2))+(((IkReal(1.00000000335606))*((cj2)*(cj2)))));
                                                                                if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                                {
                                                                                    {
                                                                                        IkReal dummyeval[1];
                                                                                        dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
                                                                                        if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                                        {
                                                                                            continue;

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            {
                                                                                                IkReal j4array[1], cj4array[1], sj4array[1];
                                                                                                bool j4valid[1]= {false};
                                                                                                _nj4 = 1;
                                                                                                IkReal x790=(cj2)*(cj2);
                                                                                                IkReal x791=(sj2)*(sj2);
                                                                                                IkReal x792=((cj1)*(sj2));
                                                                                                IkReal x793=((cj0)*(r02));
                                                                                                IkReal x794=((IkReal(49999999.9160984))*(r22));
                                                                                                IkReal x795=((r12)*(sj0));
                                                                                                IkReal x796=((cj1)*(cj2));
                                                                                                IkReal x797=((sj1)*(sj2));
                                                                                                IkReal x798=((cj2)*(sj1));
                                                                                                if( IKabs(((((IKabs(((x791)+(x790))) != 0)?((IkReal)1/(((x791)+(x790)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x793)*(x798)))+(((IkReal(-1.00000000000000))*(x795)*(x798)))+(((r22)*(x796)))+(((IkReal(-1.00000000000000))*(x792)*(x793)))+(((IkReal(-1.00000000000000))*(x792)*(x795)))+(((IkReal(-1.00000000000000))*(r22)*(x797))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-50000000.0000000))*(x791)))+(((IkReal(-50000000.0000000))*(x790))))) != 0)?((IkReal)1/(((((IkReal(-50000000.0000000))*(x791)))+(((IkReal(-50000000.0000000))*(x790)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x795)*(x797)))+(((IkReal(-49999999.9160984))*(x793)*(x797)))+(((x792)*(x794)))+(((IkReal(49999999.9160984))*(x793)*(x796)))+(((x794)*(x798)))+(((IkReal(49999999.9160984))*(x795)*(x796))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x791)+(x790))) != 0)?((IkReal)1/(((x791)+(x790)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x793)*(x798)))+(((IkReal(-1.00000000000000))*(x795)*(x798)))+(((r22)*(x796)))+(((IkReal(-1.00000000000000))*(x792)*(x793)))+(((IkReal(-1.00000000000000))*(x792)*(x795)))+(((IkReal(-1.00000000000000))*(r22)*(x797)))))))+IKsqr(((((IKabs(((((IkReal(-50000000.0000000))*(x791)))+(((IkReal(-50000000.0000000))*(x790))))) != 0)?((IkReal)1/(((((IkReal(-50000000.0000000))*(x791)))+(((IkReal(-50000000.0000000))*(x790)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x795)*(x797)))+(((IkReal(-49999999.9160984))*(x793)*(x797)))+(((x792)*(x794)))+(((IkReal(49999999.9160984))*(x793)*(x796)))+(((x794)*(x798)))+(((IkReal(49999999.9160984))*(x795)*(x796)))))))-1) <= IKFAST_SINCOS_THRESH )
                                                                                                    continue;
                                                                                                j4array[0]=IKatan2(((((IKabs(((x791)+(x790))) != 0)?((IkReal)1/(((x791)+(x790)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x793)*(x798)))+(((IkReal(-1.00000000000000))*(x795)*(x798)))+(((r22)*(x796)))+(((IkReal(-1.00000000000000))*(x792)*(x793)))+(((IkReal(-1.00000000000000))*(x792)*(x795)))+(((IkReal(-1.00000000000000))*(r22)*(x797)))))), ((((IKabs(((((IkReal(-50000000.0000000))*(x791)))+(((IkReal(-50000000.0000000))*(x790))))) != 0)?((IkReal)1/(((((IkReal(-50000000.0000000))*(x791)))+(((IkReal(-50000000.0000000))*(x790)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x795)*(x797)))+(((IkReal(-49999999.9160984))*(x793)*(x797)))+(((x792)*(x794)))+(((IkReal(49999999.9160984))*(x793)*(x796)))+(((x794)*(x798)))+(((IkReal(49999999.9160984))*(x795)*(x796)))))));
                                                                                                sj4array[0]=IKsin(j4array[0]);
                                                                                                cj4array[0]=IKcos(j4array[0]);
                                                                                                if( j4array[0] > IKPI )
                                                                                                {
                                                                                                    j4array[0]-=IK2PI;
                                                                                                }
                                                                                                else if( j4array[0] < -IKPI )
                                                                                                {
                                                                                                    j4array[0]+=IK2PI;
                                                                                                }
                                                                                                j4valid[0] = true;
                                                                                                for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                                                {
                                                                                                    if( !j4valid[ij4] )
                                                                                                    {
                                                                                                        continue;
                                                                                                    }
                                                                                                    _ij4[0] = ij4;
                                                                                                    _ij4[1] = -1;
                                                                                                    for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                                    {
                                                                                                        if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                                        {
                                                                                                            j4valid[iij4]=false;
                                                                                                            _ij4[1] = iij4;
                                                                                                            break;
                                                                                                        }
                                                                                                    }
                                                                                                    j4 = j4array[ij4];
                                                                                                    cj4 = cj4array[ij4];
                                                                                                    sj4 = sj4array[ij4];
                                                                                                    {
                                                                                                        IkReal evalcond[4];
                                                                                                        IkReal x799=IKcos(j4);
                                                                                                        IkReal x800=IKsin(j4);
                                                                                                        IkReal x801=((cj1)*(cj5));
                                                                                                        IkReal x802=((r10)*(sj0));
                                                                                                        IkReal x803=((IkReal(1.00000000000000))*(sj1));
                                                                                                        IkReal x804=((r21)*(sj5));
                                                                                                        IkReal x805=((r12)*(sj0));
                                                                                                        IkReal x806=((cj0)*(r02));
                                                                                                        IkReal x807=((IkReal(1.00000000000000))*(cj1));
                                                                                                        IkReal x808=((cj0)*(r00));
                                                                                                        IkReal x809=((cj2)*(x800));
                                                                                                        IkReal x810=((cj0)*(r01)*(sj5));
                                                                                                        IkReal x811=((sj2)*(x800));
                                                                                                        IkReal x812=((r11)*(sj0)*(sj5));
                                                                                                        IkReal x813=((sj2)*(x799));
                                                                                                        IkReal x814=((cj2)*(x799));
                                                                                                        evalcond[0]=((((r22)*(sj1)))+(((cj1)*(x805)))+(((cj1)*(x806)))+(((IkReal(1.00000000167803))*(x814)))+(x811));
                                                                                                        evalcond[1]=((((IkReal(-1.00000000000000))*(x809)))+(((cj1)*(r22)))+(((IkReal(1.00000000167803))*(x813)))+(((IkReal(-1.00000000000000))*(x803)*(x805)))+(((IkReal(-1.00000000000000))*(x803)*(x806))));
                                                                                                        evalcond[2]=((((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((x801)*(x802)))+(((x801)*(x808)))+(((IkReal(-1.00000000167803))*(x809)))+(((IkReal(-1.00000000000000))*(x807)*(x810)))+(((IkReal(-1.00000000000000))*(x807)*(x812)))+(x813));
                                                                                                        evalcond[3]=((((IkReal(-1.00000000000000))*(x804)*(x807)))+(((sj1)*(x810)))+(((sj1)*(x812)))+(((IkReal(-1.00000000167803))*(x811)))+(((IkReal(-1.00000000000000))*(cj5)*(x802)*(x803)))+(((IkReal(-1.00000000000000))*(x814)))+(((r20)*(x801)))+(((IkReal(-1.00000000000000))*(cj5)*(x803)*(x808))));
                                                                                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                                        {
                                                                                                            continue;
                                                                                                        }
                                                                                                    }

                                                                                                    {
                                                                                                        std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                                        vinfos[0].jointtype = 1;
                                                                                                        vinfos[0].foffset = j0;
                                                                                                        vinfos[0].indices[0] = _ij0[0];
                                                                                                        vinfos[0].indices[1] = _ij0[1];
                                                                                                        vinfos[0].maxsolutions = _nj0;
                                                                                                        vinfos[1].jointtype = 1;
                                                                                                        vinfos[1].foffset = j1;
                                                                                                        vinfos[1].indices[0] = _ij1[0];
                                                                                                        vinfos[1].indices[1] = _ij1[1];
                                                                                                        vinfos[1].maxsolutions = _nj1;
                                                                                                        vinfos[2].jointtype = 1;
                                                                                                        vinfos[2].foffset = j2;
                                                                                                        vinfos[2].indices[0] = _ij2[0];
                                                                                                        vinfos[2].indices[1] = _ij2[1];
                                                                                                        vinfos[2].maxsolutions = _nj2;
                                                                                                        vinfos[3].jointtype = 1;
                                                                                                        vinfos[3].foffset = j3;
                                                                                                        vinfos[3].indices[0] = _ij3[0];
                                                                                                        vinfos[3].indices[1] = _ij3[1];
                                                                                                        vinfos[3].maxsolutions = _nj3;
                                                                                                        vinfos[4].jointtype = 1;
                                                                                                        vinfos[4].foffset = j4;
                                                                                                        vinfos[4].indices[0] = _ij4[0];
                                                                                                        vinfos[4].indices[1] = _ij4[1];
                                                                                                        vinfos[4].maxsolutions = _nj4;
                                                                                                        vinfos[5].jointtype = 1;
                                                                                                        vinfos[5].foffset = j5;
                                                                                                        vinfos[5].indices[0] = _ij5[0];
                                                                                                        vinfos[5].indices[1] = _ij5[1];
                                                                                                        vinfos[5].maxsolutions = _nj5;
                                                                                                        std::vector<int> vfree(0);
                                                                                                        solutions.AddSolution(vinfos,vfree);
                                                                                                    }
                                                                                                }
                                                                                            }

                                                                                        }

                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    {
                                                                                        IkReal j4array[1], cj4array[1], sj4array[1];
                                                                                        bool j4valid[1]= {false};
                                                                                        _nj4 = 1;
                                                                                        IkReal x815=((cj0)*(cj1));
                                                                                        IkReal x816=((IkReal(1.24999999790246e+15))*(cj2));
                                                                                        IkReal x817=((r01)*(sj5));
                                                                                        IkReal x818=((cj5)*(r00));
                                                                                        IkReal x819=((IkReal(1.24999999580492e+15))*(sj2));
                                                                                        IkReal x820=((r22)*(sj1));
                                                                                        IkReal x821=((r21)*(sj1)*(sj5));
                                                                                        IkReal x822=((cj5)*(r20)*(sj1));
                                                                                        IkReal x823=((cj1)*(r12)*(sj0));
                                                                                        IkReal x824=((cj1)*(cj5)*(r10)*(sj0));
                                                                                        IkReal x825=((cj1)*(r11)*(sj0)*(sj5));
                                                                                        if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x816)*(x821)))+(((IkReal(-1.00000000000000))*(x816)*(x825)))+(((IkReal(-1.00000000000000))*(x819)*(x823)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((x816)*(x824)))+(((x816)*(x822)))+(((x815)*(x816)*(x818)))+(((IkReal(-1.00000000000000))*(x815)*(x816)*(x817)))+(((IkReal(-1.00000000000000))*(r02)*(x815)*(x819))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x816)*(x823)))+(((IkReal(-1.00000000000000))*(x816)*(x820)))+(((IkReal(-1.00000000000000))*(x819)*(x824)))+(((IkReal(-1.00000000000000))*(x819)*(x822)))+(((x819)*(x821)))+(((x819)*(x825)))+(((IkReal(-1.00000000000000))*(x815)*(x818)*(x819)))+(((IkReal(-1.00000000000000))*(r02)*(x815)*(x816)))+(((x815)*(x817)*(x819))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                                                            continue;
                                                                                        j4array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(x816)*(x821)))+(((IkReal(-1.00000000000000))*(x816)*(x825)))+(((IkReal(-1.00000000000000))*(x819)*(x823)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((x816)*(x824)))+(((x816)*(x822)))+(((x815)*(x816)*(x818)))+(((IkReal(-1.00000000000000))*(x815)*(x816)*(x817)))+(((IkReal(-1.00000000000000))*(r02)*(x815)*(x819)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(x816)*(x823)))+(((IkReal(-1.00000000000000))*(x816)*(x820)))+(((IkReal(-1.00000000000000))*(x819)*(x824)))+(((IkReal(-1.00000000000000))*(x819)*(x822)))+(((x819)*(x821)))+(((x819)*(x825)))+(((IkReal(-1.00000000000000))*(x815)*(x818)*(x819)))+(((IkReal(-1.00000000000000))*(r02)*(x815)*(x816)))+(((x815)*(x817)*(x819)))))));
                                                                                        sj4array[0]=IKsin(j4array[0]);
                                                                                        cj4array[0]=IKcos(j4array[0]);
                                                                                        if( j4array[0] > IKPI )
                                                                                        {
                                                                                            j4array[0]-=IK2PI;
                                                                                        }
                                                                                        else if( j4array[0] < -IKPI )
                                                                                        {
                                                                                            j4array[0]+=IK2PI;
                                                                                        }
                                                                                        j4valid[0] = true;
                                                                                        for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                                        {
                                                                                            if( !j4valid[ij4] )
                                                                                            {
                                                                                                continue;
                                                                                            }
                                                                                            _ij4[0] = ij4;
                                                                                            _ij4[1] = -1;
                                                                                            for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                            {
                                                                                                if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                                {
                                                                                                    j4valid[iij4]=false;
                                                                                                    _ij4[1] = iij4;
                                                                                                    break;
                                                                                                }
                                                                                            }
                                                                                            j4 = j4array[ij4];
                                                                                            cj4 = cj4array[ij4];
                                                                                            sj4 = sj4array[ij4];
                                                                                            {
                                                                                                IkReal evalcond[4];
                                                                                                IkReal x826=IKcos(j4);
                                                                                                IkReal x827=IKsin(j4);
                                                                                                IkReal x828=((cj1)*(cj5));
                                                                                                IkReal x829=((r10)*(sj0));
                                                                                                IkReal x830=((IkReal(1.00000000000000))*(sj1));
                                                                                                IkReal x831=((r21)*(sj5));
                                                                                                IkReal x832=((r12)*(sj0));
                                                                                                IkReal x833=((cj0)*(r02));
                                                                                                IkReal x834=((IkReal(1.00000000000000))*(cj1));
                                                                                                IkReal x835=((cj0)*(r00));
                                                                                                IkReal x836=((cj2)*(x827));
                                                                                                IkReal x837=((cj0)*(r01)*(sj5));
                                                                                                IkReal x838=((sj2)*(x827));
                                                                                                IkReal x839=((r11)*(sj0)*(sj5));
                                                                                                IkReal x840=((sj2)*(x826));
                                                                                                IkReal x841=((cj2)*(x826));
                                                                                                evalcond[0]=((((r22)*(sj1)))+(((IkReal(1.00000000167803))*(x841)))+(x838)+(((cj1)*(x832)))+(((cj1)*(x833))));
                                                                                                evalcond[1]=((((IkReal(1.00000000167803))*(x840)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x830)*(x833)))+(((IkReal(-1.00000000000000))*(x830)*(x832)))+(((IkReal(-1.00000000000000))*(x836))));
                                                                                                evalcond[2]=((((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000167803))*(x836)))+(((IkReal(-1.00000000000000))*(x830)*(x831)))+(((IkReal(-1.00000000000000))*(x834)*(x839)))+(((IkReal(-1.00000000000000))*(x834)*(x837)))+(x840)+(((x828)*(x835)))+(((x828)*(x829))));
                                                                                                evalcond[3]=((((r20)*(x828)))+(((IkReal(-1.00000000000000))*(cj5)*(x830)*(x835)))+(((IkReal(-1.00000000167803))*(x838)))+(((IkReal(-1.00000000000000))*(x841)))+(((IkReal(-1.00000000000000))*(cj5)*(x829)*(x830)))+(((sj1)*(x839)))+(((sj1)*(x837)))+(((IkReal(-1.00000000000000))*(x831)*(x834))));
                                                                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                                {
                                                                                                    continue;
                                                                                                }
                                                                                            }

                                                                                            {
                                                                                                std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                                vinfos[0].jointtype = 1;
                                                                                                vinfos[0].foffset = j0;
                                                                                                vinfos[0].indices[0] = _ij0[0];
                                                                                                vinfos[0].indices[1] = _ij0[1];
                                                                                                vinfos[0].maxsolutions = _nj0;
                                                                                                vinfos[1].jointtype = 1;
                                                                                                vinfos[1].foffset = j1;
                                                                                                vinfos[1].indices[0] = _ij1[0];
                                                                                                vinfos[1].indices[1] = _ij1[1];
                                                                                                vinfos[1].maxsolutions = _nj1;
                                                                                                vinfos[2].jointtype = 1;
                                                                                                vinfos[2].foffset = j2;
                                                                                                vinfos[2].indices[0] = _ij2[0];
                                                                                                vinfos[2].indices[1] = _ij2[1];
                                                                                                vinfos[2].maxsolutions = _nj2;
                                                                                                vinfos[3].jointtype = 1;
                                                                                                vinfos[3].foffset = j3;
                                                                                                vinfos[3].indices[0] = _ij3[0];
                                                                                                vinfos[3].indices[1] = _ij3[1];
                                                                                                vinfos[3].maxsolutions = _nj3;
                                                                                                vinfos[4].jointtype = 1;
                                                                                                vinfos[4].foffset = j4;
                                                                                                vinfos[4].indices[0] = _ij4[0];
                                                                                                vinfos[4].indices[1] = _ij4[1];
                                                                                                vinfos[4].maxsolutions = _nj4;
                                                                                                vinfos[5].jointtype = 1;
                                                                                                vinfos[5].foffset = j5;
                                                                                                vinfos[5].indices[0] = _ij5[0];
                                                                                                vinfos[5].indices[1] = _ij5[1];
                                                                                                vinfos[5].maxsolutions = _nj5;
                                                                                                std::vector<int> vfree(0);
                                                                                                solutions.AddSolution(vinfos,vfree);
                                                                                            }
                                                                                        }
                                                                                    }

                                                                                }

                                                                            }

                                                                        }
                                                                        else
                                                                        {
                                                                            IkReal x842=((IkReal(1.00000000000000))*(sj0));
                                                                            IkReal x843=((r00)*(sj5));
                                                                            IkReal x844=((r11)*(sj0));
                                                                            IkReal x845=((cj5)*(r01));
                                                                            IkReal x846=((IkReal(0.0340000000000000))*(cj5));
                                                                            IkReal x847=((cj0)*(r10));
                                                                            IkReal x848=((cj0)*(cj1));
                                                                            IkReal x849=((cj1)*(cj5));
                                                                            IkReal x850=((sj1)*(sj5));
                                                                            IkReal x851=((r10)*(sj0));
                                                                            IkReal x852=((cj0)*(r01));
                                                                            IkReal x853=((cj5)*(r11));
                                                                            IkReal x854=((cj1)*(r20));
                                                                            IkReal x855=((IkReal(0.0340000000000000))*(cj1)*(sj5));
                                                                            IkReal x856=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                                                            IkReal x857=((r01)*(sj0)*(sj5));
                                                                            IkReal x858=((cj0)*(r11)*(sj5));
                                                                            evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(-2.35619449019234))+(j3)), IkReal(6.28318530717959))));
                                                                            evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x842)))+(((cj0)*(r12))));
                                                                            evalcond[2]=((IkReal(1.00000000167803))+(((IkReal(-1.00000000000000))*(x842)*(x845)))+(((IkReal(-1.00000000000000))*(x842)*(x843)))+(((sj5)*(x847)))+(((cj0)*(x853))));
                                                                            evalcond[3]=((((IkReal(-1.00000000000000))*(x858)))+(((cj5)*(x847)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x842)))+(x857));
                                                                            evalcond[4]=((IkReal(0.123999999983220))+(((IkReal(-0.0340000000000000))*(x858)))+(((x846)*(x847)))+(((IkReal(0.0340000000000000))*(x857)))+(((IkReal(-1.00000000000000))*(px)*(x842)))+(((cj0)*(py)))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x846))));
                                                                            evalcond[5]=((((cj5)*(r21)*(sj1)))+(((x843)*(x848)))+(((x845)*(x848)))+(((x844)*(x849)))+(((r20)*(x850)))+(((cj1)*(sj5)*(x851))));
                                                                            evalcond[6]=((((sj5)*(x854)))+(((IkReal(-1.00000000000000))*(sj1)*(x842)*(x853)))+(((IkReal(-1.00000000000000))*(x845)*(x856)))+(((IkReal(-1.00000000000000))*(r10)*(x842)*(x850)))+(((r21)*(x849)))+(((IkReal(-1.00000000000000))*(x843)*(x856))));
                                                                            evalcond[7]=((((IkReal(-0.0340000000000000))*(r21)*(x850)))+(((IkReal(-1.00000000000000))*(x844)*(x855)))+(((r20)*(sj1)*(x846)))+(((cj1)*(py)*(sj0)))+(((IkReal(-0.338000000000000))*(sj2)))+(((r00)*(x846)*(x848)))+(((pz)*(sj1)))+(((IkReal(0.0800000000000000))*(cj2)))+(((IkReal(-0.0340000000000000))*(r01)*(sj5)*(x848)))+(((px)*(x848)))+(((cj1)*(x846)*(x851))));
                                                                            evalcond[8]=((IkReal(0.369000000000000))+(((IkReal(0.0800000000000000))*(sj2)))+(((IkReal(0.338000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x846)*(x851)))+(((IkReal(-1.00000000000000))*(py)*(sj1)*(x842)))+(((IkReal(0.0340000000000000))*(x850)*(x852)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(sj1)*(x846)))+(((cj1)*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(x855)))+(((x846)*(x854)))+(((IkReal(0.0340000000000000))*(x844)*(x850)))+(((IkReal(-1.00000000000000))*(px)*(x856))));
                                                                            if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
                                                                            {
                                                                                {
                                                                                    IkReal dummyeval[1];
                                                                                    IkReal gconst4;
                                                                                    gconst4=IKsign(((((IkReal(-1.24999999580492e+15))*((sj2)*(sj2))))+(((IkReal(-1.25000000000000e+15))*((cj2)*(cj2))))));
                                                                                    dummyeval[0]=((((IkReal(-1.00000000000000))*((sj2)*(sj2))))+(((IkReal(-1.00000000335606))*((cj2)*(cj2)))));
                                                                                    if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                                    {
                                                                                        {
                                                                                            IkReal dummyeval[1];
                                                                                            dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
                                                                                            if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                                            {
                                                                                                continue;

                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                {
                                                                                                    IkReal j4array[1], cj4array[1], sj4array[1];
                                                                                                    bool j4valid[1]= {false};
                                                                                                    _nj4 = 1;
                                                                                                    IkReal x859=(cj2)*(cj2);
                                                                                                    IkReal x860=(sj2)*(sj2);
                                                                                                    IkReal x861=((cj1)*(sj2));
                                                                                                    IkReal x862=((cj0)*(r02));
                                                                                                    IkReal x863=((IkReal(49999999.9160984))*(r22));
                                                                                                    IkReal x864=((r12)*(sj0));
                                                                                                    IkReal x865=((cj1)*(cj2));
                                                                                                    IkReal x866=((sj1)*(sj2));
                                                                                                    IkReal x867=((cj2)*(sj1));
                                                                                                    if( IKabs(((((IKabs(((x859)+(x860))) != 0)?((IkReal)1/(((x859)+(x860)))):(IkReal)1.0e30))*(((((r22)*(x865)))+(((IkReal(-1.00000000000000))*(x861)*(x862)))+(((IkReal(-1.00000000000000))*(x861)*(x864)))+(((IkReal(-1.00000000000000))*(x864)*(x867)))+(((IkReal(-1.00000000000000))*(r22)*(x866)))+(((IkReal(-1.00000000000000))*(x862)*(x867))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(50000000.0000000))*(x859)))+(((IkReal(50000000.0000000))*(x860))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x859)))+(((IkReal(50000000.0000000))*(x860)))))):(IkReal)1.0e30))*(((((x863)*(x867)))+(((IkReal(49999999.9160984))*(x864)*(x865)))+(((IkReal(-49999999.9160984))*(x862)*(x866)))+(((IkReal(49999999.9160984))*(x862)*(x865)))+(((x861)*(x863)))+(((IkReal(-49999999.9160984))*(x864)*(x866))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x859)+(x860))) != 0)?((IkReal)1/(((x859)+(x860)))):(IkReal)1.0e30))*(((((r22)*(x865)))+(((IkReal(-1.00000000000000))*(x861)*(x862)))+(((IkReal(-1.00000000000000))*(x861)*(x864)))+(((IkReal(-1.00000000000000))*(x864)*(x867)))+(((IkReal(-1.00000000000000))*(r22)*(x866)))+(((IkReal(-1.00000000000000))*(x862)*(x867)))))))+IKsqr(((((IKabs(((((IkReal(50000000.0000000))*(x859)))+(((IkReal(50000000.0000000))*(x860))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x859)))+(((IkReal(50000000.0000000))*(x860)))))):(IkReal)1.0e30))*(((((x863)*(x867)))+(((IkReal(49999999.9160984))*(x864)*(x865)))+(((IkReal(-49999999.9160984))*(x862)*(x866)))+(((IkReal(49999999.9160984))*(x862)*(x865)))+(((x861)*(x863)))+(((IkReal(-49999999.9160984))*(x864)*(x866)))))))-1) <= IKFAST_SINCOS_THRESH )
                                                                                                        continue;
                                                                                                    j4array[0]=IKatan2(((((IKabs(((x859)+(x860))) != 0)?((IkReal)1/(((x859)+(x860)))):(IkReal)1.0e30))*(((((r22)*(x865)))+(((IkReal(-1.00000000000000))*(x861)*(x862)))+(((IkReal(-1.00000000000000))*(x861)*(x864)))+(((IkReal(-1.00000000000000))*(x864)*(x867)))+(((IkReal(-1.00000000000000))*(r22)*(x866)))+(((IkReal(-1.00000000000000))*(x862)*(x867)))))), ((((IKabs(((((IkReal(50000000.0000000))*(x859)))+(((IkReal(50000000.0000000))*(x860))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x859)))+(((IkReal(50000000.0000000))*(x860)))))):(IkReal)1.0e30))*(((((x863)*(x867)))+(((IkReal(49999999.9160984))*(x864)*(x865)))+(((IkReal(-49999999.9160984))*(x862)*(x866)))+(((IkReal(49999999.9160984))*(x862)*(x865)))+(((x861)*(x863)))+(((IkReal(-49999999.9160984))*(x864)*(x866)))))));
                                                                                                    sj4array[0]=IKsin(j4array[0]);
                                                                                                    cj4array[0]=IKcos(j4array[0]);
                                                                                                    if( j4array[0] > IKPI )
                                                                                                    {
                                                                                                        j4array[0]-=IK2PI;
                                                                                                    }
                                                                                                    else if( j4array[0] < -IKPI )
                                                                                                    {
                                                                                                        j4array[0]+=IK2PI;
                                                                                                    }
                                                                                                    j4valid[0] = true;
                                                                                                    for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                                                    {
                                                                                                        if( !j4valid[ij4] )
                                                                                                        {
                                                                                                            continue;
                                                                                                        }
                                                                                                        _ij4[0] = ij4;
                                                                                                        _ij4[1] = -1;
                                                                                                        for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                                        {
                                                                                                            if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                                            {
                                                                                                                j4valid[iij4]=false;
                                                                                                                _ij4[1] = iij4;
                                                                                                                break;
                                                                                                            }
                                                                                                        }
                                                                                                        j4 = j4array[ij4];
                                                                                                        cj4 = cj4array[ij4];
                                                                                                        sj4 = sj4array[ij4];
                                                                                                        {
                                                                                                            IkReal evalcond[4];
                                                                                                            IkReal x868=IKsin(j4);
                                                                                                            IkReal x869=IKcos(j4);
                                                                                                            IkReal x870=((cj1)*(cj5));
                                                                                                            IkReal x871=((r10)*(sj0));
                                                                                                            IkReal x872=((IkReal(1.00000000000000))*(sj1));
                                                                                                            IkReal x873=((r21)*(sj5));
                                                                                                            IkReal x874=((r12)*(sj0));
                                                                                                            IkReal x875=((cj0)*(r02));
                                                                                                            IkReal x876=((IkReal(1.00000000000000))*(cj1));
                                                                                                            IkReal x877=((cj0)*(r00));
                                                                                                            IkReal x878=((cj2)*(x868));
                                                                                                            IkReal x879=((cj0)*(r01)*(sj5));
                                                                                                            IkReal x880=((sj2)*(x868));
                                                                                                            IkReal x881=((r11)*(sj0)*(sj5));
                                                                                                            IkReal x882=((sj2)*(x869));
                                                                                                            IkReal x883=((cj2)*(x869));
                                                                                                            evalcond[0]=((((IkReal(-1.00000000167803))*(x883)))+(((r22)*(sj1)))+(((cj1)*(x874)))+(((cj1)*(x875)))+(x880));
                                                                                                            evalcond[1]=((((IkReal(-1.00000000000000))*(x872)*(x874)))+(((IkReal(-1.00000000000000))*(x872)*(x875)))+(((IkReal(-1.00000000167803))*(x882)))+(((IkReal(-1.00000000000000))*(x878)))+(((cj1)*(r22))));
                                                                                                            evalcond[2]=((((IkReal(-1.00000000000000))*(x872)*(x873)))+(((IkReal(-1.00000000000000))*(x876)*(x879)))+(((x870)*(x871)))+(((x870)*(x877)))+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x876)*(x881)))+(x882)+(((IkReal(1.00000000167803))*(x878))));
                                                                                                            evalcond[3]=((((sj1)*(x881)))+(((IkReal(-1.00000000000000))*(cj5)*(x871)*(x872)))+(((IkReal(-1.00000000000000))*(x873)*(x876)))+(((IkReal(-1.00000000000000))*(x883)))+(((IkReal(-1.00000000000000))*(cj5)*(x872)*(x877)))+(((IkReal(1.00000000167803))*(x880)))+(((sj1)*(x879)))+(((r20)*(x870))));
                                                                                                            if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                                            {
                                                                                                                continue;
                                                                                                            }
                                                                                                        }

                                                                                                        {
                                                                                                            std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                                            vinfos[0].jointtype = 1;
                                                                                                            vinfos[0].foffset = j0;
                                                                                                            vinfos[0].indices[0] = _ij0[0];
                                                                                                            vinfos[0].indices[1] = _ij0[1];
                                                                                                            vinfos[0].maxsolutions = _nj0;
                                                                                                            vinfos[1].jointtype = 1;
                                                                                                            vinfos[1].foffset = j1;
                                                                                                            vinfos[1].indices[0] = _ij1[0];
                                                                                                            vinfos[1].indices[1] = _ij1[1];
                                                                                                            vinfos[1].maxsolutions = _nj1;
                                                                                                            vinfos[2].jointtype = 1;
                                                                                                            vinfos[2].foffset = j2;
                                                                                                            vinfos[2].indices[0] = _ij2[0];
                                                                                                            vinfos[2].indices[1] = _ij2[1];
                                                                                                            vinfos[2].maxsolutions = _nj2;
                                                                                                            vinfos[3].jointtype = 1;
                                                                                                            vinfos[3].foffset = j3;
                                                                                                            vinfos[3].indices[0] = _ij3[0];
                                                                                                            vinfos[3].indices[1] = _ij3[1];
                                                                                                            vinfos[3].maxsolutions = _nj3;
                                                                                                            vinfos[4].jointtype = 1;
                                                                                                            vinfos[4].foffset = j4;
                                                                                                            vinfos[4].indices[0] = _ij4[0];
                                                                                                            vinfos[4].indices[1] = _ij4[1];
                                                                                                            vinfos[4].maxsolutions = _nj4;
                                                                                                            vinfos[5].jointtype = 1;
                                                                                                            vinfos[5].foffset = j5;
                                                                                                            vinfos[5].indices[0] = _ij5[0];
                                                                                                            vinfos[5].indices[1] = _ij5[1];
                                                                                                            vinfos[5].maxsolutions = _nj5;
                                                                                                            std::vector<int> vfree(0);
                                                                                                            solutions.AddSolution(vinfos,vfree);
                                                                                                        }
                                                                                                    }
                                                                                                }

                                                                                            }

                                                                                        }

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        {
                                                                                            IkReal j4array[1], cj4array[1], sj4array[1];
                                                                                            bool j4valid[1]= {false};
                                                                                            _nj4 = 1;
                                                                                            IkReal x884=((IkReal(1.24999999580492e+15))*(sj2));
                                                                                            IkReal x885=((r01)*(sj5));
                                                                                            IkReal x886=((cj5)*(r00));
                                                                                            IkReal x887=((cj5)*(r10));
                                                                                            IkReal x888=((r11)*(sj5));
                                                                                            IkReal x889=((cj1)*(sj0));
                                                                                            IkReal x890=((cj0)*(cj1));
                                                                                            IkReal x891=((IkReal(1.24999999790246e+15))*(cj2));
                                                                                            IkReal x892=((r22)*(sj1));
                                                                                            IkReal x893=((r21)*(sj1)*(sj5));
                                                                                            IkReal x894=((cj5)*(r20)*(sj1));
                                                                                            IkReal x895=((x890)*(x891));
                                                                                            IkReal x896=((x889)*(x891));
                                                                                            if( IKabs(((gconst4)*(((((x886)*(x895)))+(((x884)*(x892)))+(((r12)*(x884)*(x889)))+(((r02)*(x884)*(x890)))+(((IkReal(-1.00000000000000))*(x888)*(x896)))+(((x891)*(x894)))+(((IkReal(-1.00000000000000))*(x885)*(x895)))+(((IkReal(-1.00000000000000))*(x891)*(x893)))+(((x887)*(x896))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x884)*(x893)))+(((x884)*(x894)))+(((x884)*(x887)*(x889)))+(((IkReal(-1.00000000000000))*(r12)*(x896)))+(((IkReal(-1.00000000000000))*(x884)*(x885)*(x890)))+(((x884)*(x886)*(x890)))+(((IkReal(-1.00000000000000))*(r02)*(x895)))+(((IkReal(-1.00000000000000))*(x891)*(x892)))+(((IkReal(-1.00000000000000))*(x884)*(x888)*(x889))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                                                                continue;
                                                                                            j4array[0]=IKatan2(((gconst4)*(((((x886)*(x895)))+(((x884)*(x892)))+(((r12)*(x884)*(x889)))+(((r02)*(x884)*(x890)))+(((IkReal(-1.00000000000000))*(x888)*(x896)))+(((x891)*(x894)))+(((IkReal(-1.00000000000000))*(x885)*(x895)))+(((IkReal(-1.00000000000000))*(x891)*(x893)))+(((x887)*(x896)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x884)*(x893)))+(((x884)*(x894)))+(((x884)*(x887)*(x889)))+(((IkReal(-1.00000000000000))*(r12)*(x896)))+(((IkReal(-1.00000000000000))*(x884)*(x885)*(x890)))+(((x884)*(x886)*(x890)))+(((IkReal(-1.00000000000000))*(r02)*(x895)))+(((IkReal(-1.00000000000000))*(x891)*(x892)))+(((IkReal(-1.00000000000000))*(x884)*(x888)*(x889)))))));
                                                                                            sj4array[0]=IKsin(j4array[0]);
                                                                                            cj4array[0]=IKcos(j4array[0]);
                                                                                            if( j4array[0] > IKPI )
                                                                                            {
                                                                                                j4array[0]-=IK2PI;
                                                                                            }
                                                                                            else if( j4array[0] < -IKPI )
                                                                                            {
                                                                                                j4array[0]+=IK2PI;
                                                                                            }
                                                                                            j4valid[0] = true;
                                                                                            for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                                            {
                                                                                                if( !j4valid[ij4] )
                                                                                                {
                                                                                                    continue;
                                                                                                }
                                                                                                _ij4[0] = ij4;
                                                                                                _ij4[1] = -1;
                                                                                                for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                                {
                                                                                                    if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                                    {
                                                                                                        j4valid[iij4]=false;
                                                                                                        _ij4[1] = iij4;
                                                                                                        break;
                                                                                                    }
                                                                                                }
                                                                                                j4 = j4array[ij4];
                                                                                                cj4 = cj4array[ij4];
                                                                                                sj4 = sj4array[ij4];
                                                                                                {
                                                                                                    IkReal evalcond[4];
                                                                                                    IkReal x897=IKsin(j4);
                                                                                                    IkReal x898=IKcos(j4);
                                                                                                    IkReal x899=((cj1)*(cj5));
                                                                                                    IkReal x900=((r10)*(sj0));
                                                                                                    IkReal x901=((IkReal(1.00000000000000))*(sj1));
                                                                                                    IkReal x902=((r21)*(sj5));
                                                                                                    IkReal x903=((r12)*(sj0));
                                                                                                    IkReal x904=((cj0)*(r02));
                                                                                                    IkReal x905=((IkReal(1.00000000000000))*(cj1));
                                                                                                    IkReal x906=((cj0)*(r00));
                                                                                                    IkReal x907=((cj2)*(x897));
                                                                                                    IkReal x908=((cj0)*(r01)*(sj5));
                                                                                                    IkReal x909=((sj2)*(x897));
                                                                                                    IkReal x910=((r11)*(sj0)*(sj5));
                                                                                                    IkReal x911=((sj2)*(x898));
                                                                                                    IkReal x912=((cj2)*(x898));
                                                                                                    evalcond[0]=((((cj1)*(x904)))+(((cj1)*(x903)))+(((IkReal(-1.00000000167803))*(x912)))+(((r22)*(sj1)))+(x909));
                                                                                                    evalcond[1]=((((IkReal(-1.00000000167803))*(x911)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x907)))+(((IkReal(-1.00000000000000))*(x901)*(x903)))+(((IkReal(-1.00000000000000))*(x901)*(x904))));
                                                                                                    evalcond[2]=((((IkReal(1.00000000167803))*(x907)))+(((cj5)*(r20)*(sj1)))+(((x899)*(x906)))+(((x899)*(x900)))+(((IkReal(-1.00000000000000))*(x905)*(x910)))+(((IkReal(-1.00000000000000))*(x901)*(x902)))+(x911)+(((IkReal(-1.00000000000000))*(x905)*(x908))));
                                                                                                    evalcond[3]=((((IkReal(1.00000000167803))*(x909)))+(((IkReal(-1.00000000000000))*(x902)*(x905)))+(((r20)*(x899)))+(((IkReal(-1.00000000000000))*(x912)))+(((IkReal(-1.00000000000000))*(cj5)*(x901)*(x906)))+(((IkReal(-1.00000000000000))*(cj5)*(x900)*(x901)))+(((sj1)*(x910)))+(((sj1)*(x908))));
                                                                                                    if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                                    {
                                                                                                        continue;
                                                                                                    }
                                                                                                }

                                                                                                {
                                                                                                    std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                                    vinfos[0].jointtype = 1;
                                                                                                    vinfos[0].foffset = j0;
                                                                                                    vinfos[0].indices[0] = _ij0[0];
                                                                                                    vinfos[0].indices[1] = _ij0[1];
                                                                                                    vinfos[0].maxsolutions = _nj0;
                                                                                                    vinfos[1].jointtype = 1;
                                                                                                    vinfos[1].foffset = j1;
                                                                                                    vinfos[1].indices[0] = _ij1[0];
                                                                                                    vinfos[1].indices[1] = _ij1[1];
                                                                                                    vinfos[1].maxsolutions = _nj1;
                                                                                                    vinfos[2].jointtype = 1;
                                                                                                    vinfos[2].foffset = j2;
                                                                                                    vinfos[2].indices[0] = _ij2[0];
                                                                                                    vinfos[2].indices[1] = _ij2[1];
                                                                                                    vinfos[2].maxsolutions = _nj2;
                                                                                                    vinfos[3].jointtype = 1;
                                                                                                    vinfos[3].foffset = j3;
                                                                                                    vinfos[3].indices[0] = _ij3[0];
                                                                                                    vinfos[3].indices[1] = _ij3[1];
                                                                                                    vinfos[3].maxsolutions = _nj3;
                                                                                                    vinfos[4].jointtype = 1;
                                                                                                    vinfos[4].foffset = j4;
                                                                                                    vinfos[4].indices[0] = _ij4[0];
                                                                                                    vinfos[4].indices[1] = _ij4[1];
                                                                                                    vinfos[4].maxsolutions = _nj4;
                                                                                                    vinfos[5].jointtype = 1;
                                                                                                    vinfos[5].foffset = j5;
                                                                                                    vinfos[5].indices[0] = _ij5[0];
                                                                                                    vinfos[5].indices[1] = _ij5[1];
                                                                                                    vinfos[5].maxsolutions = _nj5;
                                                                                                    std::vector<int> vfree(0);
                                                                                                    solutions.AddSolution(vinfos,vfree);
                                                                                                }
                                                                                            }
                                                                                        }

                                                                                    }

                                                                                }

                                                                            }
                                                                            else
                                                                            {
                                                                                IkReal x913=((IkReal(1.00000000000000))*(sj0));
                                                                                IkReal x914=((r00)*(sj5));
                                                                                IkReal x915=((r11)*(sj0));
                                                                                IkReal x916=((cj5)*(r01));
                                                                                IkReal x917=((IkReal(0.0340000000000000))*(cj5));
                                                                                IkReal x918=((cj0)*(r10));
                                                                                IkReal x919=((cj0)*(cj1));
                                                                                IkReal x920=((cj1)*(cj5));
                                                                                IkReal x921=((sj1)*(sj5));
                                                                                IkReal x922=((r10)*(sj0));
                                                                                IkReal x923=((cj0)*(r01));
                                                                                IkReal x924=((cj5)*(r11));
                                                                                IkReal x925=((cj1)*(r20));
                                                                                IkReal x926=((IkReal(0.0340000000000000))*(cj1)*(sj5));
                                                                                IkReal x927=((IkReal(1.00000000000000))*(cj0)*(sj1));
                                                                                IkReal x928=((r01)*(sj0)*(sj5));
                                                                                IkReal x929=((cj0)*(r11)*(sj5));
                                                                                evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.92699081698724))+(j3)), IkReal(6.28318530717959))));
                                                                                evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x913)))+(((cj0)*(r12))));
                                                                                evalcond[2]=((IkReal(1.00000000167803))+(((IkReal(-1.00000000000000))*(x913)*(x914)))+(((IkReal(-1.00000000000000))*(x913)*(x916)))+(((sj5)*(x918)))+(((cj0)*(x924))));
                                                                                evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x913)))+(((IkReal(-1.00000000000000))*(x929)))+(((cj5)*(x918)))+(x928));
                                                                                evalcond[4]=((IkReal(0.123999999983220))+(((x917)*(x918)))+(((IkReal(-1.00000000000000))*(px)*(x913)))+(((IkReal(-0.0340000000000000))*(x929)))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x917)))+(((IkReal(0.0340000000000000))*(x928)))+(((cj0)*(py))));
                                                                                evalcond[5]=((((x915)*(x920)))+(((cj5)*(r21)*(sj1)))+(((x914)*(x919)))+(((cj1)*(sj5)*(x922)))+(((x916)*(x919)))+(((r20)*(x921))));
                                                                                evalcond[6]=((((sj5)*(x925)))+(((IkReal(-1.00000000000000))*(x914)*(x927)))+(((r21)*(x920)))+(((IkReal(-1.00000000000000))*(r10)*(x913)*(x921)))+(((IkReal(-1.00000000000000))*(x916)*(x927)))+(((IkReal(-1.00000000000000))*(sj1)*(x913)*(x924))));
                                                                                evalcond[7]=((((IkReal(-0.0340000000000000))*(r21)*(x921)))+(((cj1)*(x917)*(x922)))+(((px)*(x919)))+(((r00)*(x917)*(x919)))+(((cj1)*(py)*(sj0)))+(((IkReal(-0.338000000000000))*(sj2)))+(((r20)*(sj1)*(x917)))+(((pz)*(sj1)))+(((IkReal(-1.00000000000000))*(x915)*(x926)))+(((IkReal(0.0800000000000000))*(cj2)))+(((IkReal(-0.0340000000000000))*(r01)*(sj5)*(x919))));
                                                                                evalcond[8]=((IkReal(0.369000000000000))+(((IkReal(0.0800000000000000))*(sj2)))+(((IkReal(0.338000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r21)*(x926)))+(((IkReal(-1.00000000000000))*(py)*(sj1)*(x913)))+(((IkReal(0.0340000000000000))*(x915)*(x921)))+(((IkReal(-1.00000000000000))*(px)*(x927)))+(((IkReal(-1.00000000000000))*(sj1)*(x917)*(x922)))+(((IkReal(0.0340000000000000))*(x921)*(x923)))+(((cj1)*(pz)))+(((x917)*(x925)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(sj1)*(x917))));
                                                                                if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
                                                                                {
                                                                                    {
                                                                                        IkReal dummyeval[1];
                                                                                        IkReal gconst5;
                                                                                        gconst5=IKsign(((((IkReal(-1.24999999580492e+15))*((sj2)*(sj2))))+(((IkReal(-1.25000000000000e+15))*((cj2)*(cj2))))));
                                                                                        dummyeval[0]=((((IkReal(-1.00000000000000))*((sj2)*(sj2))))+(((IkReal(-1.00000000335606))*((cj2)*(cj2)))));
                                                                                        if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                                        {
                                                                                            {
                                                                                                IkReal dummyeval[1];
                                                                                                dummyeval[0]=(((sj2)*(sj2))+((cj2)*(cj2)));
                                                                                                if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                                                                                {
                                                                                                    continue;

                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    {
                                                                                                        IkReal j4array[1], cj4array[1], sj4array[1];
                                                                                                        bool j4valid[1]= {false};
                                                                                                        _nj4 = 1;
                                                                                                        IkReal x930=(cj2)*(cj2);
                                                                                                        IkReal x931=(sj2)*(sj2);
                                                                                                        IkReal x932=((cj1)*(sj2));
                                                                                                        IkReal x933=((cj0)*(r02));
                                                                                                        IkReal x934=((IkReal(49999999.9160984))*(r22));
                                                                                                        IkReal x935=((r12)*(sj0));
                                                                                                        IkReal x936=((cj1)*(cj2));
                                                                                                        IkReal x937=((sj1)*(sj2));
                                                                                                        IkReal x938=((cj2)*(sj1));
                                                                                                        if( IKabs(((((IKabs(((x931)+(x930))) != 0)?((IkReal)1/(((x931)+(x930)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x937)))+(((r22)*(x936)))+(((IkReal(-1.00000000000000))*(x935)*(x938)))+(((IkReal(-1.00000000000000))*(x932)*(x933)))+(((IkReal(-1.00000000000000))*(x932)*(x935)))+(((IkReal(-1.00000000000000))*(x933)*(x938))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(50000000.0000000))*(x930)))+(((IkReal(50000000.0000000))*(x931))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x930)))+(((IkReal(50000000.0000000))*(x931)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x933)*(x937)))+(((IkReal(49999999.9160984))*(x933)*(x936)))+(((IkReal(49999999.9160984))*(x935)*(x936)))+(((IkReal(-49999999.9160984))*(x935)*(x937)))+(((x934)*(x938)))+(((x932)*(x934))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x931)+(x930))) != 0)?((IkReal)1/(((x931)+(x930)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x937)))+(((r22)*(x936)))+(((IkReal(-1.00000000000000))*(x935)*(x938)))+(((IkReal(-1.00000000000000))*(x932)*(x933)))+(((IkReal(-1.00000000000000))*(x932)*(x935)))+(((IkReal(-1.00000000000000))*(x933)*(x938)))))))+IKsqr(((((IKabs(((((IkReal(50000000.0000000))*(x930)))+(((IkReal(50000000.0000000))*(x931))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x930)))+(((IkReal(50000000.0000000))*(x931)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x933)*(x937)))+(((IkReal(49999999.9160984))*(x933)*(x936)))+(((IkReal(49999999.9160984))*(x935)*(x936)))+(((IkReal(-49999999.9160984))*(x935)*(x937)))+(((x934)*(x938)))+(((x932)*(x934)))))))-1) <= IKFAST_SINCOS_THRESH )
                                                                                                            continue;
                                                                                                        j4array[0]=IKatan2(((((IKabs(((x931)+(x930))) != 0)?((IkReal)1/(((x931)+(x930)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x937)))+(((r22)*(x936)))+(((IkReal(-1.00000000000000))*(x935)*(x938)))+(((IkReal(-1.00000000000000))*(x932)*(x933)))+(((IkReal(-1.00000000000000))*(x932)*(x935)))+(((IkReal(-1.00000000000000))*(x933)*(x938)))))), ((((IKabs(((((IkReal(50000000.0000000))*(x930)))+(((IkReal(50000000.0000000))*(x931))))) != 0)?((IkReal)1/(((((IkReal(50000000.0000000))*(x930)))+(((IkReal(50000000.0000000))*(x931)))))):(IkReal)1.0e30))*(((((IkReal(-49999999.9160984))*(x933)*(x937)))+(((IkReal(49999999.9160984))*(x933)*(x936)))+(((IkReal(49999999.9160984))*(x935)*(x936)))+(((IkReal(-49999999.9160984))*(x935)*(x937)))+(((x934)*(x938)))+(((x932)*(x934)))))));
                                                                                                        sj4array[0]=IKsin(j4array[0]);
                                                                                                        cj4array[0]=IKcos(j4array[0]);
                                                                                                        if( j4array[0] > IKPI )
                                                                                                        {
                                                                                                            j4array[0]-=IK2PI;
                                                                                                        }
                                                                                                        else if( j4array[0] < -IKPI )
                                                                                                        {
                                                                                                            j4array[0]+=IK2PI;
                                                                                                        }
                                                                                                        j4valid[0] = true;
                                                                                                        for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                                                        {
                                                                                                            if( !j4valid[ij4] )
                                                                                                            {
                                                                                                                continue;
                                                                                                            }
                                                                                                            _ij4[0] = ij4;
                                                                                                            _ij4[1] = -1;
                                                                                                            for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                                            {
                                                                                                                if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                                                {
                                                                                                                    j4valid[iij4]=false;
                                                                                                                    _ij4[1] = iij4;
                                                                                                                    break;
                                                                                                                }
                                                                                                            }
                                                                                                            j4 = j4array[ij4];
                                                                                                            cj4 = cj4array[ij4];
                                                                                                            sj4 = sj4array[ij4];
                                                                                                            {
                                                                                                                IkReal evalcond[4];
                                                                                                                IkReal x939=IKsin(j4);
                                                                                                                IkReal x940=IKcos(j4);
                                                                                                                IkReal x941=((cj1)*(cj5));
                                                                                                                IkReal x942=((r10)*(sj0));
                                                                                                                IkReal x943=((IkReal(1.00000000000000))*(sj1));
                                                                                                                IkReal x944=((r21)*(sj5));
                                                                                                                IkReal x945=((r12)*(sj0));
                                                                                                                IkReal x946=((cj0)*(r02));
                                                                                                                IkReal x947=((IkReal(1.00000000000000))*(cj1));
                                                                                                                IkReal x948=((cj0)*(r00));
                                                                                                                IkReal x949=((cj2)*(x939));
                                                                                                                IkReal x950=((cj0)*(r01)*(sj5));
                                                                                                                IkReal x951=((sj2)*(x939));
                                                                                                                IkReal x952=((r11)*(sj0)*(sj5));
                                                                                                                IkReal x953=((sj2)*(x940));
                                                                                                                IkReal x954=((cj2)*(x940));
                                                                                                                evalcond[0]=((((r22)*(sj1)))+(((cj1)*(x945)))+(((cj1)*(x946)))+(((IkReal(-1.00000000167803))*(x954)))+(x951));
                                                                                                                evalcond[1]=((((IkReal(-1.00000000000000))*(x949)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x943)*(x946)))+(((IkReal(-1.00000000000000))*(x943)*(x945)))+(((IkReal(-1.00000000167803))*(x953))));
                                                                                                                evalcond[2]=((((cj5)*(r20)*(sj1)))+(((x941)*(x948)))+(((x941)*(x942)))+(((IkReal(1.00000000167803))*(x949)))+(((IkReal(-1.00000000000000))*(x947)*(x952)))+(((IkReal(-1.00000000000000))*(x947)*(x950)))+(((IkReal(-1.00000000000000))*(x943)*(x944)))+(x953));
                                                                                                                evalcond[3]=((((IkReal(-1.00000000000000))*(x954)))+(((IkReal(1.00000000167803))*(x951)))+(((IkReal(-1.00000000000000))*(x944)*(x947)))+(((IkReal(-1.00000000000000))*(cj5)*(x943)*(x948)))+(((sj1)*(x950)))+(((sj1)*(x952)))+(((IkReal(-1.00000000000000))*(cj5)*(x942)*(x943)))+(((r20)*(x941))));
                                                                                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                                                {
                                                                                                                    continue;
                                                                                                                }
                                                                                                            }

                                                                                                            {
                                                                                                                std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                                                vinfos[0].jointtype = 1;
                                                                                                                vinfos[0].foffset = j0;
                                                                                                                vinfos[0].indices[0] = _ij0[0];
                                                                                                                vinfos[0].indices[1] = _ij0[1];
                                                                                                                vinfos[0].maxsolutions = _nj0;
                                                                                                                vinfos[1].jointtype = 1;
                                                                                                                vinfos[1].foffset = j1;
                                                                                                                vinfos[1].indices[0] = _ij1[0];
                                                                                                                vinfos[1].indices[1] = _ij1[1];
                                                                                                                vinfos[1].maxsolutions = _nj1;
                                                                                                                vinfos[2].jointtype = 1;
                                                                                                                vinfos[2].foffset = j2;
                                                                                                                vinfos[2].indices[0] = _ij2[0];
                                                                                                                vinfos[2].indices[1] = _ij2[1];
                                                                                                                vinfos[2].maxsolutions = _nj2;
                                                                                                                vinfos[3].jointtype = 1;
                                                                                                                vinfos[3].foffset = j3;
                                                                                                                vinfos[3].indices[0] = _ij3[0];
                                                                                                                vinfos[3].indices[1] = _ij3[1];
                                                                                                                vinfos[3].maxsolutions = _nj3;
                                                                                                                vinfos[4].jointtype = 1;
                                                                                                                vinfos[4].foffset = j4;
                                                                                                                vinfos[4].indices[0] = _ij4[0];
                                                                                                                vinfos[4].indices[1] = _ij4[1];
                                                                                                                vinfos[4].maxsolutions = _nj4;
                                                                                                                vinfos[5].jointtype = 1;
                                                                                                                vinfos[5].foffset = j5;
                                                                                                                vinfos[5].indices[0] = _ij5[0];
                                                                                                                vinfos[5].indices[1] = _ij5[1];
                                                                                                                vinfos[5].maxsolutions = _nj5;
                                                                                                                std::vector<int> vfree(0);
                                                                                                                solutions.AddSolution(vinfos,vfree);
                                                                                                            }
                                                                                                        }
                                                                                                    }

                                                                                                }

                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            {
                                                                                                IkReal j4array[1], cj4array[1], sj4array[1];
                                                                                                bool j4valid[1]= {false};
                                                                                                _nj4 = 1;
                                                                                                IkReal x955=((IkReal(1.24999999580492e+15))*(sj2));
                                                                                                IkReal x956=((r01)*(sj5));
                                                                                                IkReal x957=((cj5)*(r00));
                                                                                                IkReal x958=((cj5)*(r10));
                                                                                                IkReal x959=((r11)*(sj5));
                                                                                                IkReal x960=((cj1)*(sj0));
                                                                                                IkReal x961=((cj0)*(cj1));
                                                                                                IkReal x962=((IkReal(1.24999999790246e+15))*(cj2));
                                                                                                IkReal x963=((r22)*(sj1));
                                                                                                IkReal x964=((r21)*(sj1)*(sj5));
                                                                                                IkReal x965=((cj5)*(r20)*(sj1));
                                                                                                IkReal x966=((x961)*(x962));
                                                                                                IkReal x967=((x960)*(x962));
                                                                                                if( IKabs(((gconst5)*(((((r02)*(x955)*(x961)))+(((IkReal(-1.00000000000000))*(x962)*(x964)))+(((x962)*(x965)))+(((r12)*(x955)*(x960)))+(((IkReal(-1.00000000000000))*(x956)*(x966)))+(((IkReal(-1.00000000000000))*(x959)*(x967)))+(((x957)*(x966)))+(((x958)*(x967)))+(((x955)*(x963))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x962)*(x963)))+(((IkReal(-1.00000000000000))*(x955)*(x956)*(x961)))+(((IkReal(-1.00000000000000))*(x955)*(x959)*(x960)))+(((IkReal(-1.00000000000000))*(r12)*(x967)))+(((x955)*(x957)*(x961)))+(((IkReal(-1.00000000000000))*(x955)*(x964)))+(((x955)*(x958)*(x960)))+(((IkReal(-1.00000000000000))*(r02)*(x966)))+(((x955)*(x965))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                                                                    continue;
                                                                                                j4array[0]=IKatan2(((gconst5)*(((((r02)*(x955)*(x961)))+(((IkReal(-1.00000000000000))*(x962)*(x964)))+(((x962)*(x965)))+(((r12)*(x955)*(x960)))+(((IkReal(-1.00000000000000))*(x956)*(x966)))+(((IkReal(-1.00000000000000))*(x959)*(x967)))+(((x957)*(x966)))+(((x958)*(x967)))+(((x955)*(x963)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x962)*(x963)))+(((IkReal(-1.00000000000000))*(x955)*(x956)*(x961)))+(((IkReal(-1.00000000000000))*(x955)*(x959)*(x960)))+(((IkReal(-1.00000000000000))*(r12)*(x967)))+(((x955)*(x957)*(x961)))+(((IkReal(-1.00000000000000))*(x955)*(x964)))+(((x955)*(x958)*(x960)))+(((IkReal(-1.00000000000000))*(r02)*(x966)))+(((x955)*(x965)))))));
                                                                                                sj4array[0]=IKsin(j4array[0]);
                                                                                                cj4array[0]=IKcos(j4array[0]);
                                                                                                if( j4array[0] > IKPI )
                                                                                                {
                                                                                                    j4array[0]-=IK2PI;
                                                                                                }
                                                                                                else if( j4array[0] < -IKPI )
                                                                                                {
                                                                                                    j4array[0]+=IK2PI;
                                                                                                }
                                                                                                j4valid[0] = true;
                                                                                                for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                                                {
                                                                                                    if( !j4valid[ij4] )
                                                                                                    {
                                                                                                        continue;
                                                                                                    }
                                                                                                    _ij4[0] = ij4;
                                                                                                    _ij4[1] = -1;
                                                                                                    for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                                                    {
                                                                                                        if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                                                        {
                                                                                                            j4valid[iij4]=false;
                                                                                                            _ij4[1] = iij4;
                                                                                                            break;
                                                                                                        }
                                                                                                    }
                                                                                                    j4 = j4array[ij4];
                                                                                                    cj4 = cj4array[ij4];
                                                                                                    sj4 = sj4array[ij4];
                                                                                                    {
                                                                                                        IkReal evalcond[4];
                                                                                                        IkReal x968=IKsin(j4);
                                                                                                        IkReal x969=IKcos(j4);
                                                                                                        IkReal x970=((cj1)*(cj5));
                                                                                                        IkReal x971=((r10)*(sj0));
                                                                                                        IkReal x972=((IkReal(1.00000000000000))*(sj1));
                                                                                                        IkReal x973=((r21)*(sj5));
                                                                                                        IkReal x974=((r12)*(sj0));
                                                                                                        IkReal x975=((cj0)*(r02));
                                                                                                        IkReal x976=((IkReal(1.00000000000000))*(cj1));
                                                                                                        IkReal x977=((cj0)*(r00));
                                                                                                        IkReal x978=((cj2)*(x968));
                                                                                                        IkReal x979=((cj0)*(r01)*(sj5));
                                                                                                        IkReal x980=((sj2)*(x968));
                                                                                                        IkReal x981=((r11)*(sj0)*(sj5));
                                                                                                        IkReal x982=((sj2)*(x969));
                                                                                                        IkReal x983=((cj2)*(x969));
                                                                                                        evalcond[0]=((((r22)*(sj1)))+(((cj1)*(x975)))+(((cj1)*(x974)))+(((IkReal(-1.00000000167803))*(x983)))+(x980));
                                                                                                        evalcond[1]=((((IkReal(-1.00000000000000))*(x978)))+(((cj1)*(r22)))+(((IkReal(-1.00000000167803))*(x982)))+(((IkReal(-1.00000000000000))*(x972)*(x974)))+(((IkReal(-1.00000000000000))*(x972)*(x975))));
                                                                                                        evalcond[2]=((((cj5)*(r20)*(sj1)))+(((IkReal(1.00000000167803))*(x978)))+(((IkReal(-1.00000000000000))*(x972)*(x973)))+(((IkReal(-1.00000000000000))*(x976)*(x979)))+(((x970)*(x977)))+(((x970)*(x971)))+(((IkReal(-1.00000000000000))*(x976)*(x981)))+(x982));
                                                                                                        evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(x971)*(x972)))+(((IkReal(-1.00000000000000))*(x983)))+(((sj1)*(x981)))+(((sj1)*(x979)))+(((IkReal(-1.00000000000000))*(cj5)*(x972)*(x977)))+(((IkReal(1.00000000167803))*(x980)))+(((r20)*(x970)))+(((IkReal(-1.00000000000000))*(x973)*(x976))));
                                                                                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
                                                                                                        {
                                                                                                            continue;
                                                                                                        }
                                                                                                    }

                                                                                                    {
                                                                                                        std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                                                        vinfos[0].jointtype = 1;
                                                                                                        vinfos[0].foffset = j0;
                                                                                                        vinfos[0].indices[0] = _ij0[0];
                                                                                                        vinfos[0].indices[1] = _ij0[1];
                                                                                                        vinfos[0].maxsolutions = _nj0;
                                                                                                        vinfos[1].jointtype = 1;
                                                                                                        vinfos[1].foffset = j1;
                                                                                                        vinfos[1].indices[0] = _ij1[0];
                                                                                                        vinfos[1].indices[1] = _ij1[1];
                                                                                                        vinfos[1].maxsolutions = _nj1;
                                                                                                        vinfos[2].jointtype = 1;
                                                                                                        vinfos[2].foffset = j2;
                                                                                                        vinfos[2].indices[0] = _ij2[0];
                                                                                                        vinfos[2].indices[1] = _ij2[1];
                                                                                                        vinfos[2].maxsolutions = _nj2;
                                                                                                        vinfos[3].jointtype = 1;
                                                                                                        vinfos[3].foffset = j3;
                                                                                                        vinfos[3].indices[0] = _ij3[0];
                                                                                                        vinfos[3].indices[1] = _ij3[1];
                                                                                                        vinfos[3].maxsolutions = _nj3;
                                                                                                        vinfos[4].jointtype = 1;
                                                                                                        vinfos[4].foffset = j4;
                                                                                                        vinfos[4].indices[0] = _ij4[0];
                                                                                                        vinfos[4].indices[1] = _ij4[1];
                                                                                                        vinfos[4].maxsolutions = _nj4;
                                                                                                        vinfos[5].jointtype = 1;
                                                                                                        vinfos[5].foffset = j5;
                                                                                                        vinfos[5].indices[0] = _ij5[0];
                                                                                                        vinfos[5].indices[1] = _ij5[1];
                                                                                                        vinfos[5].maxsolutions = _nj5;
                                                                                                        std::vector<int> vfree(0);
                                                                                                        solutions.AddSolution(vinfos,vfree);
                                                                                                    }
                                                                                                }
                                                                                            }

                                                                                        }

                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    if( 1 )
                                                                                    {
                                                                                        continue;

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }

                                                        }
                                                        else
                                                        {
                                                            {
                                                                IkReal j4array[1], cj4array[1], sj4array[1];
                                                                bool j4valid[1]= {false};
                                                                _nj4 = 1;
                                                                IkReal x984=((IkReal(0.707106781186548))*(sj3));
                                                                IkReal x985=((r22)*(sj1));
                                                                IkReal x986=((cj0)*(r12));
                                                                IkReal x987=((IkReal(0.707106781186548))*(cj3));
                                                                IkReal x988=((r02)*(sj0));
                                                                IkReal x989=((cj0)*(cj1)*(r02));
                                                                IkReal x990=((cj1)*(r12)*(sj0));
                                                                if( IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(sj2)*(x987)))+(((IkReal(-1.00000000000000))*(sj2)*(x984))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(sj2)*(x987)))+(((IkReal(-1.00000000000000))*(sj2)*(x984)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x986)*(x987)))+(((IkReal(-1.00000000000000))*(cj2)*(x984)*(x988)))+(((cj2)*(x987)*(x988)))+(((x987)*(x990)))+(((x984)*(x985)))+(((x984)*(x989)))+(((x987)*(x989)))+(((x985)*(x987)))+(((cj2)*(x984)*(x986)))+(((x984)*(x990))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x987))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x987)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x986)))+(x988))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(sj2)*(x987)))+(((IkReal(-1.00000000000000))*(sj2)*(x984))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(sj2)*(x987)))+(((IkReal(-1.00000000000000))*(sj2)*(x984)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x986)*(x987)))+(((IkReal(-1.00000000000000))*(cj2)*(x984)*(x988)))+(((cj2)*(x987)*(x988)))+(((x987)*(x990)))+(((x984)*(x985)))+(((x984)*(x989)))+(((x987)*(x989)))+(((x985)*(x987)))+(((cj2)*(x984)*(x986)))+(((x984)*(x990)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x987))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x987)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x986)))+(x988)))))-1) <= IKFAST_SINCOS_THRESH )
                                                                    continue;
                                                                j4array[0]=IKatan2(((((IKabs(((((IkReal(-1.00000000000000))*(sj2)*(x987)))+(((IkReal(-1.00000000000000))*(sj2)*(x984))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(sj2)*(x987)))+(((IkReal(-1.00000000000000))*(sj2)*(x984)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x986)*(x987)))+(((IkReal(-1.00000000000000))*(cj2)*(x984)*(x988)))+(((cj2)*(x987)*(x988)))+(((x987)*(x990)))+(((x984)*(x985)))+(((x984)*(x989)))+(((x987)*(x989)))+(((x985)*(x987)))+(((cj2)*(x984)*(x986)))+(((x984)*(x990)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x987))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x984)))+(((IkReal(-1.00000000000000))*(x987)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x986)))+(x988)))));
                                                                sj4array[0]=IKsin(j4array[0]);
                                                                cj4array[0]=IKcos(j4array[0]);
                                                                if( j4array[0] > IKPI )
                                                                {
                                                                    j4array[0]-=IK2PI;
                                                                }
                                                                else if( j4array[0] < -IKPI )
                                                                {
                                                                    j4array[0]+=IK2PI;
                                                                }
                                                                j4valid[0] = true;
                                                                for(int ij4 = 0; ij4 < 1; ++ij4)
                                                                {
                                                                    if( !j4valid[ij4] )
                                                                    {
                                                                        continue;
                                                                    }
                                                                    _ij4[0] = ij4;
                                                                    _ij4[1] = -1;
                                                                    for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                                    {
                                                                        if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                        {
                                                                            j4valid[iij4]=false;
                                                                            _ij4[1] = iij4;
                                                                            break;
                                                                        }
                                                                    }
                                                                    j4 = j4array[ij4];
                                                                    cj4 = cj4array[ij4];
                                                                    sj4 = sj4array[ij4];
                                                                    {
                                                                        IkReal evalcond[6];
                                                                        IkReal x991=IKcos(j4);
                                                                        IkReal x992=IKsin(j4);
                                                                        IkReal x993=((cj1)*(cj5));
                                                                        IkReal x994=((r10)*(sj0));
                                                                        IkReal x995=((IkReal(1.00000000000000))*(sj1));
                                                                        IkReal x996=((r21)*(sj5));
                                                                        IkReal x997=((IkReal(0.707106781186548))*(sj3));
                                                                        IkReal x998=((r12)*(sj0));
                                                                        IkReal x999=((IkReal(0.707106781186548))*(cj3));
                                                                        IkReal x1000=((IkReal(1.00000000000000))*(sj0));
                                                                        IkReal x1001=((cj5)*(r00));
                                                                        IkReal x1002=((cj0)*(r02));
                                                                        IkReal x1003=((r11)*(sj5));
                                                                        IkReal x1004=((IkReal(1.00000000000000))*(cj1));
                                                                        IkReal x1005=((cj2)*(x992));
                                                                        IkReal x1006=((sj2)*(x991));
                                                                        IkReal x1007=((cj0)*(r01)*(sj5));
                                                                        IkReal x1008=((sj2)*(x992));
                                                                        IkReal x1009=((cj2)*(x991));
                                                                        evalcond[0]=((((IkReal(-1.00000000000000))*(x991)*(x999)))+(((IkReal(-1.00000000000000))*(x991)*(x997)))+(((IkReal(-1.00000000000000))*(r02)*(x1000)))+(((cj0)*(r12))));
                                                                        evalcond[1]=((((IkReal(-1.00000000000000))*(x1009)*(x999)))+(x1008)+(((cj1)*(x998)))+(((r22)*(sj1)))+(((x1009)*(x997)))+(((cj1)*(x1002))));
                                                                        evalcond[2]=((((x992)*(x999)))+(((x992)*(x997)))+(((cj0)*(cj5)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(x1003)))+(((r01)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(x1000)*(x1001))));
                                                                        evalcond[3]=((((IkReal(-1.00000000000000))*(x1005)))+(((IkReal(-1.00000000000000))*(x1002)*(x995)))+(((IkReal(-1.00000000000000))*(x995)*(x998)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x1006)*(x999)))+(((x1006)*(x997))));
                                                                        evalcond[4]=((((x993)*(x994)))+(((IkReal(-1.00000000000000))*(cj1)*(x1000)*(x1003)))+(x1006)+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x995)*(x996)))+(((cj0)*(r00)*(x993)))+(((IkReal(-1.00000000000000))*(x1004)*(x1007)))+(((IkReal(-1.00000000000000))*(x1005)*(x997)))+(((x1005)*(x999))));
                                                                        evalcond[5]=((((IkReal(-1.00000000000000))*(x1009)))+(((sj0)*(sj1)*(x1003)))+(((IkReal(-1.00000000000000))*(cj0)*(x1001)*(x995)))+(((sj1)*(x1007)))+(((r20)*(x993)))+(((x1008)*(x999)))+(((IkReal(-1.00000000000000))*(x1004)*(x996)))+(((IkReal(-1.00000000000000))*(cj5)*(x994)*(x995)))+(((IkReal(-1.00000000000000))*(x1008)*(x997))));
                                                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
                                                                        {
                                                                            continue;
                                                                        }
                                                                    }

                                                                    {
                                                                        std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                        vinfos[0].jointtype = 1;
                                                                        vinfos[0].foffset = j0;
                                                                        vinfos[0].indices[0] = _ij0[0];
                                                                        vinfos[0].indices[1] = _ij0[1];
                                                                        vinfos[0].maxsolutions = _nj0;
                                                                        vinfos[1].jointtype = 1;
                                                                        vinfos[1].foffset = j1;
                                                                        vinfos[1].indices[0] = _ij1[0];
                                                                        vinfos[1].indices[1] = _ij1[1];
                                                                        vinfos[1].maxsolutions = _nj1;
                                                                        vinfos[2].jointtype = 1;
                                                                        vinfos[2].foffset = j2;
                                                                        vinfos[2].indices[0] = _ij2[0];
                                                                        vinfos[2].indices[1] = _ij2[1];
                                                                        vinfos[2].maxsolutions = _nj2;
                                                                        vinfos[3].jointtype = 1;
                                                                        vinfos[3].foffset = j3;
                                                                        vinfos[3].indices[0] = _ij3[0];
                                                                        vinfos[3].indices[1] = _ij3[1];
                                                                        vinfos[3].maxsolutions = _nj3;
                                                                        vinfos[4].jointtype = 1;
                                                                        vinfos[4].foffset = j4;
                                                                        vinfos[4].indices[0] = _ij4[0];
                                                                        vinfos[4].indices[1] = _ij4[1];
                                                                        vinfos[4].maxsolutions = _nj4;
                                                                        vinfos[5].jointtype = 1;
                                                                        vinfos[5].foffset = j5;
                                                                        vinfos[5].indices[0] = _ij5[0];
                                                                        vinfos[5].indices[1] = _ij5[1];
                                                                        vinfos[5].maxsolutions = _nj5;
                                                                        std::vector<int> vfree(0);
                                                                        solutions.AddSolution(vinfos,vfree);
                                                                    }
                                                                }
                                                            }

                                                        }

                                                    }

                                                }
                                                else
                                                {
                                                    {
                                                        IkReal j4array[1], cj4array[1], sj4array[1];
                                                        bool j4valid[1]= {false};
                                                        _nj4 = 1;
                                                        IkReal x1010=((IkReal(1.00000000000000))*(sj0));
                                                        if( IKabs(((gconst2)*(((((cj5)*(r00)*(sj0)))+(((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1010)))+(((cj0)*(r11)*(sj5)))+(((IkReal(-1.00000000000000))*(cj0)*(cj5)*(r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x1010)))+(((cj0)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                            continue;
                                                        j4array[0]=IKatan2(((gconst2)*(((((cj5)*(r00)*(sj0)))+(((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1010)))+(((cj0)*(r11)*(sj5)))+(((IkReal(-1.00000000000000))*(cj0)*(cj5)*(r10)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x1010)))+(((cj0)*(r12)))))));
                                                        sj4array[0]=IKsin(j4array[0]);
                                                        cj4array[0]=IKcos(j4array[0]);
                                                        if( j4array[0] > IKPI )
                                                        {
                                                            j4array[0]-=IK2PI;
                                                        }
                                                        else if( j4array[0] < -IKPI )
                                                        {
                                                            j4array[0]+=IK2PI;
                                                        }
                                                        j4valid[0] = true;
                                                        for(int ij4 = 0; ij4 < 1; ++ij4)
                                                        {
                                                            if( !j4valid[ij4] )
                                                            {
                                                                continue;
                                                            }
                                                            _ij4[0] = ij4;
                                                            _ij4[1] = -1;
                                                            for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                                            {
                                                                if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                                                {
                                                                    j4valid[iij4]=false;
                                                                    _ij4[1] = iij4;
                                                                    break;
                                                                }
                                                            }
                                                            j4 = j4array[ij4];
                                                            cj4 = cj4array[ij4];
                                                            sj4 = sj4array[ij4];
                                                            {
                                                                IkReal evalcond[6];
                                                                IkReal x1011=IKcos(j4);
                                                                IkReal x1012=IKsin(j4);
                                                                IkReal x1013=((cj1)*(cj5));
                                                                IkReal x1014=((r10)*(sj0));
                                                                IkReal x1015=((IkReal(1.00000000000000))*(sj1));
                                                                IkReal x1016=((r21)*(sj5));
                                                                IkReal x1017=((IkReal(0.707106781186548))*(sj3));
                                                                IkReal x1018=((r12)*(sj0));
                                                                IkReal x1019=((IkReal(0.707106781186548))*(cj3));
                                                                IkReal x1020=((IkReal(1.00000000000000))*(sj0));
                                                                IkReal x1021=((cj5)*(r00));
                                                                IkReal x1022=((cj0)*(r02));
                                                                IkReal x1023=((r11)*(sj5));
                                                                IkReal x1024=((IkReal(1.00000000000000))*(cj1));
                                                                IkReal x1025=((cj2)*(x1012));
                                                                IkReal x1026=((sj2)*(x1011));
                                                                IkReal x1027=((cj0)*(r01)*(sj5));
                                                                IkReal x1028=((sj2)*(x1012));
                                                                IkReal x1029=((cj2)*(x1011));
                                                                evalcond[0]=((((IkReal(-1.00000000000000))*(x1011)*(x1019)))+(((IkReal(-1.00000000000000))*(x1011)*(x1017)))+(((IkReal(-1.00000000000000))*(r02)*(x1020)))+(((cj0)*(r12))));
                                                                evalcond[1]=((((x1017)*(x1029)))+(x1028)+(((r22)*(sj1)))+(((IkReal(-1.00000000000000))*(x1019)*(x1029)))+(((cj1)*(x1018)))+(((cj1)*(x1022))));
                                                                evalcond[2]=((((cj0)*(cj5)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(x1023)))+(((IkReal(-1.00000000000000))*(x1020)*(x1021)))+(((x1012)*(x1019)))+(((x1012)*(x1017)))+(((r01)*(sj0)*(sj5))));
                                                                evalcond[3]=((((x1017)*(x1026)))+(((IkReal(-1.00000000000000))*(x1025)))+(((IkReal(-1.00000000000000))*(x1019)*(x1026)))+(((IkReal(-1.00000000000000))*(x1015)*(x1018)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(x1015)*(x1022))));
                                                                evalcond[4]=((((cj0)*(r00)*(x1013)))+(x1026)+(((cj5)*(r20)*(sj1)))+(((IkReal(-1.00000000000000))*(x1015)*(x1016)))+(((x1013)*(x1014)))+(((x1019)*(x1025)))+(((IkReal(-1.00000000000000))*(x1017)*(x1025)))+(((IkReal(-1.00000000000000))*(x1024)*(x1027)))+(((IkReal(-1.00000000000000))*(cj1)*(x1020)*(x1023))));
                                                                evalcond[5]=((((sj1)*(x1027)))+(((sj0)*(sj1)*(x1023)))+(((IkReal(-1.00000000000000))*(x1029)))+(((IkReal(-1.00000000000000))*(cj0)*(x1015)*(x1021)))+(((x1019)*(x1028)))+(((IkReal(-1.00000000000000))*(x1016)*(x1024)))+(((r20)*(x1013)))+(((IkReal(-1.00000000000000))*(cj5)*(x1014)*(x1015)))+(((IkReal(-1.00000000000000))*(x1017)*(x1028))));
                                                                if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
                                                                {
                                                                    continue;
                                                                }
                                                            }

                                                            {
                                                                std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                                vinfos[0].jointtype = 1;
                                                                vinfos[0].foffset = j0;
                                                                vinfos[0].indices[0] = _ij0[0];
                                                                vinfos[0].indices[1] = _ij0[1];
                                                                vinfos[0].maxsolutions = _nj0;
                                                                vinfos[1].jointtype = 1;
                                                                vinfos[1].foffset = j1;
                                                                vinfos[1].indices[0] = _ij1[0];
                                                                vinfos[1].indices[1] = _ij1[1];
                                                                vinfos[1].maxsolutions = _nj1;
                                                                vinfos[2].jointtype = 1;
                                                                vinfos[2].foffset = j2;
                                                                vinfos[2].indices[0] = _ij2[0];
                                                                vinfos[2].indices[1] = _ij2[1];
                                                                vinfos[2].maxsolutions = _nj2;
                                                                vinfos[3].jointtype = 1;
                                                                vinfos[3].foffset = j3;
                                                                vinfos[3].indices[0] = _ij3[0];
                                                                vinfos[3].indices[1] = _ij3[1];
                                                                vinfos[3].maxsolutions = _nj3;
                                                                vinfos[4].jointtype = 1;
                                                                vinfos[4].foffset = j4;
                                                                vinfos[4].indices[0] = _ij4[0];
                                                                vinfos[4].indices[1] = _ij4[1];
                                                                vinfos[4].maxsolutions = _nj4;
                                                                vinfos[5].jointtype = 1;
                                                                vinfos[5].foffset = j5;
                                                                vinfos[5].indices[0] = _ij5[0];
                                                                vinfos[5].indices[1] = _ij5[1];
                                                                vinfos[5].maxsolutions = _nj5;
                                                                std::vector<int> vfree(0);
                                                                solutions.AddSolution(vinfos,vfree);
                                                            }
                                                        }
                                                    }

                                                }

                                            }
                                        }
                                    }

                                }

                            }

                        }
                        else
                        {
                            {
                                IkReal j4array[1], cj4array[1], sj4array[1];
                                bool j4valid[1]= {false};
                                _nj4 = 1;
                                IkReal x1030=((IkReal(1.00000000000000))*(sj0));
                                if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1030)))+(((cj5)*(r00)*(sj0)))+(((cj0)*(r11)*(sj5)))+(((IkReal(-1.00000000000000))*(cj0)*(cj5)*(r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r02)*(x1030)))+(((cj0)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
                                    continue;
                                j4array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1030)))+(((cj5)*(r00)*(sj0)))+(((cj0)*(r11)*(sj5)))+(((IkReal(-1.00000000000000))*(cj0)*(cj5)*(r10)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r02)*(x1030)))+(((cj0)*(r12)))))));
                                sj4array[0]=IKsin(j4array[0]);
                                cj4array[0]=IKcos(j4array[0]);
                                if( j4array[0] > IKPI )
                                {
                                    j4array[0]-=IK2PI;
                                }
                                else if( j4array[0] < -IKPI )
                                {
                                    j4array[0]+=IK2PI;
                                }
                                j4valid[0] = true;
                                for(int ij4 = 0; ij4 < 1; ++ij4)
                                {
                                    if( !j4valid[ij4] )
                                    {
                                        continue;
                                    }
                                    _ij4[0] = ij4;
                                    _ij4[1] = -1;
                                    for(int iij4 = ij4+1; iij4 < 1; ++iij4)
                                    {
                                        if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
                                        {
                                            j4valid[iij4]=false;
                                            _ij4[1] = iij4;
                                            break;
                                        }
                                    }
                                    j4 = j4array[ij4];
                                    cj4 = cj4array[ij4];
                                    sj4 = sj4array[ij4];
                                    {
                                        IkReal evalcond[2];
                                        IkReal x1031=IKcos(j4);
                                        IkReal x1032=IKsin(j4);
                                        IkReal x1033=((IkReal(1.00000000000000))*(sj0));
                                        IkReal x1034=((IkReal(0.707106781186548))*(x1032));
                                        IkReal x1035=((IkReal(0.707106781186548))*(x1031));
                                        evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1033)))+(((IkReal(-1.00000000000000))*(cj3)*(x1035)))+(((IkReal(-1.00000000000000))*(sj3)*(x1035)))+(((cj0)*(r12))));
                                        evalcond[1]=((((cj3)*(x1034)))+(((cj0)*(cj5)*(r10)))+(((sj3)*(x1034)))+(((r01)*(sj0)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x1033)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(sj5))));
                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
                                        {
                                            continue;
                                        }
                                    }

                                    {
                                        IkReal dummyeval[1];
                                        IkReal gconst6;
                                        IkReal x1036=(cj4)*(cj4);
                                        IkReal x1037=((IkReal(0.500000000000000))*(x1036));
                                        gconst6=IKsign(((((IkReal(-1.00000000000000))*(x1037)*((cj3)*(cj3))))+(((IkReal(-1.00000000000000))*((sj4)*(sj4))))+(((IkReal(-1.00000000000000))*(x1037)*((sj3)*(sj3))))+(((cj3)*(sj3)*(x1036)))));
                                        IkReal x1038=(cj4)*(cj4);
                                        IkReal x1039=((IkReal(1.00000000000000))*(x1038));
                                        dummyeval[0]=((((IkReal(-1.00000000000000))*(x1039)*((sj3)*(sj3))))+(((IkReal(2.00000000000000))*(cj3)*(sj3)*(x1038)))+(((IkReal(-1.00000000000000))*(x1039)*((cj3)*(cj3))))+(((IkReal(-2.00000000000000))*((sj4)*(sj4)))));
                                        if( IKabs(dummyeval[0]) < 0.0000010000000000  )
                                        {
                                            continue;

                                        }
                                        else
                                        {
                                            {
                                                IkReal j2array[1], cj2array[1], sj2array[1];
                                                bool j2valid[1]= {false};
                                                _nj2 = 1;
                                                IkReal x1040=((cj1)*(sj4));
                                                IkReal x1041=((cj0)*(r02));
                                                IkReal x1042=((r12)*(sj0));
                                                IkReal x1043=((r22)*(sj3));
                                                IkReal x1044=((sj1)*(sj4));
                                                IkReal x1045=((IkReal(0.707106781186548))*(cj1)*(cj4));
                                                IkReal x1046=((IkReal(0.707106781186548))*(cj3)*(cj4)*(sj1));
                                                IkReal x1047=((IkReal(0.707106781186548))*(cj4)*(sj1)*(sj3));
                                                if( IKabs(((gconst6)*(((((x1042)*(x1046)))+(((x1043)*(x1045)))+(((x1040)*(x1042)))+(((x1040)*(x1041)))+(((x1041)*(x1046)))+(((IkReal(-1.00000000000000))*(x1041)*(x1047)))+(((IkReal(-1.00000000000000))*(x1042)*(x1047)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(x1045)))+(((r22)*(x1044))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((x1042)*(x1044)))+(((x1041)*(x1044)))+(((IkReal(-1.00000000000000))*(r22)*(x1046)))+(((IkReal(0.707106781186548))*(cj4)*(sj1)*(x1043)))+(((sj3)*(x1042)*(x1045)))+(((IkReal(-1.00000000000000))*(r22)*(x1040)))+(((IkReal(-1.00000000000000))*(cj3)*(x1042)*(x1045)))+(((sj3)*(x1041)*(x1045)))+(((IkReal(-1.00000000000000))*(cj3)*(x1041)*(x1045))))))) < IKFAST_ATAN2_MAGTHRESH )
                                                    continue;
                                                j2array[0]=IKatan2(((gconst6)*(((((x1042)*(x1046)))+(((x1043)*(x1045)))+(((x1040)*(x1042)))+(((x1040)*(x1041)))+(((x1041)*(x1046)))+(((IkReal(-1.00000000000000))*(x1041)*(x1047)))+(((IkReal(-1.00000000000000))*(x1042)*(x1047)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(x1045)))+(((r22)*(x1044)))))), ((gconst6)*(((((x1042)*(x1044)))+(((x1041)*(x1044)))+(((IkReal(-1.00000000000000))*(r22)*(x1046)))+(((IkReal(0.707106781186548))*(cj4)*(sj1)*(x1043)))+(((sj3)*(x1042)*(x1045)))+(((IkReal(-1.00000000000000))*(r22)*(x1040)))+(((IkReal(-1.00000000000000))*(cj3)*(x1042)*(x1045)))+(((sj3)*(x1041)*(x1045)))+(((IkReal(-1.00000000000000))*(cj3)*(x1041)*(x1045)))))));
                                                sj2array[0]=IKsin(j2array[0]);
                                                cj2array[0]=IKcos(j2array[0]);
                                                if( j2array[0] > IKPI )
                                                {
                                                    j2array[0]-=IK2PI;
                                                }
                                                else if( j2array[0] < -IKPI )
                                                {
                                                    j2array[0]+=IK2PI;
                                                }
                                                j2valid[0] = true;
                                                for(int ij2 = 0; ij2 < 1; ++ij2)
                                                {
                                                    if( !j2valid[ij2] )
                                                    {
                                                        continue;
                                                    }
                                                    _ij2[0] = ij2;
                                                    _ij2[1] = -1;
                                                    for(int iij2 = ij2+1; iij2 < 1; ++iij2)
                                                    {
                                                        if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
                                                        {
                                                            j2valid[iij2]=false;
                                                            _ij2[1] = iij2;
                                                            break;
                                                        }
                                                    }
                                                    j2 = j2array[ij2];
                                                    cj2 = cj2array[ij2];
                                                    sj2 = sj2array[ij2];
                                                    {
                                                        IkReal evalcond[8];
                                                        IkReal x1048=IKcos(j2);
                                                        IkReal x1049=IKsin(j2);
                                                        IkReal x1050=((cj1)*(sj0));
                                                        IkReal x1051=((cj5)*(r10));
                                                        IkReal x1052=((IkReal(1.00000000000000))*(sj1));
                                                        IkReal x1053=((cj0)*(px));
                                                        IkReal x1054=((cj5)*(sj1));
                                                        IkReal x1055=((IkReal(0.0340000000000000))*(sj5));
                                                        IkReal x1056=((cj1)*(r21));
                                                        IkReal x1057=((cj0)*(r01));
                                                        IkReal x1058=((cj1)*(cj5));
                                                        IkReal x1059=((sj1)*(sj5));
                                                        IkReal x1060=((cj0)*(r00));
                                                        IkReal x1061=((r11)*(sj0));
                                                        IkReal x1062=((IkReal(0.0340000000000000))*(r20));
                                                        IkReal x1063=((IkReal(0.707106781186548))*(cj3));
                                                        IkReal x1064=((cj0)*(r02));
                                                        IkReal x1065=((IkReal(0.00707106781186548))*(cj3));
                                                        IkReal x1066=((r10)*(sj5));
                                                        IkReal x1067=((IkReal(1.00000000000000))*(sj5));
                                                        IkReal x1068=((IkReal(0.707106781186548))*(sj3));
                                                        IkReal x1069=((cj1)*(sj5));
                                                        IkReal x1070=((r21)*(x1067));
                                                        IkReal x1071=((sj4)*(x1068));
                                                        IkReal x1072=((sj3)*(x1049));
                                                        IkReal x1073=((sj4)*(x1063));
                                                        IkReal x1074=((cj4)*(x1048));
                                                        IkReal x1075=((cj4)*(x1049));
                                                        evalcond[0]=((((x1068)*(x1074)))+(((IkReal(-1.00000000000000))*(x1063)*(x1074)))+(((r12)*(x1050)))+(((r22)*(sj1)))+(((cj1)*(x1064)))+(((sj4)*(x1049))));
                                                        evalcond[1]=((((x1068)*(x1075)))+(((IkReal(-1.00000000000000))*(sj4)*(x1048)))+(((IkReal(-1.00000000000000))*(x1063)*(x1075)))+(((cj1)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj0)*(x1052)))+(((IkReal(-1.00000000000000))*(x1052)*(x1064))));
                                                        evalcond[2]=((((cj5)*(r11)*(x1050)))+(((x1060)*(x1069)))+(((x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(x1048)*(x1068)))+(((IkReal(-1.00000000000000))*(x1048)*(x1063)))+(((x1050)*(x1066)))+(((r20)*(x1059)))+(((r21)*(x1054))));
                                                        evalcond[3]=((((r20)*(x1069)))+(((IkReal(-1.00000000000000))*(sj5)*(x1052)*(x1060)))+(((IkReal(-1.00000000000000))*(x1049)*(x1063)))+(((IkReal(-1.00000000000000))*(x1049)*(x1068)))+(((cj5)*(x1056)))+(((IkReal(-1.00000000000000))*(cj5)*(x1052)*(x1061)))+(((IkReal(-1.00000000000000))*(sj0)*(x1052)*(x1066)))+(((IkReal(-1.00000000000000))*(cj5)*(x1052)*(x1057))));
                                                        evalcond[4]=((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1052)))+(x1075)+(((IkReal(-1.00000000000000))*(cj1)*(x1057)*(x1067)))+(((IkReal(-1.00000000000000))*(r11)*(x1050)*(x1067)))+(((x1048)*(x1073)))+(((x1050)*(x1051)))+(((r20)*(x1054)))+(((IkReal(-1.00000000000000))*(x1048)*(x1071)))+(((x1058)*(x1060))));
                                                        evalcond[5]=((((IkReal(-1.00000000000000))*(sj0)*(x1051)*(x1052)))+(((x1057)*(x1059)))+(((IkReal(-1.00000000000000))*(x1056)*(x1067)))+(((r20)*(x1058)))+(((IkReal(-1.00000000000000))*(x1049)*(x1071)))+(((IkReal(-1.00000000000000))*(x1074)))+(((x1059)*(x1061)))+(((IkReal(-1.00000000000000))*(cj5)*(x1052)*(x1060)))+(((x1049)*(x1073))));
                                                        evalcond[6]=((((IkReal(0.0800000000000000))*(x1048)))+(((IkReal(0.00707106781186548))*(sj3)*(x1048)))+(((x1054)*(x1062)))+(((x1048)*(x1065)))+(((cj1)*(x1053)))+(((IkReal(-0.338000000000000))*(x1049)))+(((py)*(x1050)))+(((IkReal(-1.00000000000000))*(cj1)*(x1055)*(x1057)))+(((IkReal(-1.00000000000000))*(r11)*(x1050)*(x1055)))+(((IkReal(-1.00000000000000))*(r21)*(sj1)*(x1055)))+(((IkReal(0.0340000000000000))*(x1050)*(x1051)))+(((IkReal(0.0340000000000000))*(x1058)*(x1060)))+(((pz)*(sj1))));
                                                        evalcond[7]=((IkReal(0.369000000000000))+(((IkReal(0.0800000000000000))*(x1049)))+(((IkReal(-1.00000000000000))*(x1052)*(x1053)))+(((IkReal(0.338000000000000))*(x1048)))+(((IkReal(-0.0340000000000000))*(sj0)*(sj1)*(x1051)))+(((sj1)*(x1055)*(x1057)))+(((cj1)*(pz)))+(((sj1)*(x1055)*(x1061)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((IkReal(-1.00000000000000))*(py)*(sj0)*(x1052)))+(((IkReal(0.00707106781186548))*(x1072)))+(((IkReal(-0.0340000000000000))*(x1054)*(x1060)))+(((x1049)*(x1065)))+(((x1058)*(x1062))));
                                                        if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
                                                        {
                                                            continue;
                                                        }
                                                    }

                                                    {
                                                        std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
                                                        vinfos[0].jointtype = 1;
                                                        vinfos[0].foffset = j0;
                                                        vinfos[0].indices[0] = _ij0[0];
                                                        vinfos[0].indices[1] = _ij0[1];
                                                        vinfos[0].maxsolutions = _nj0;
                                                        vinfos[1].jointtype = 1;
                                                        vinfos[1].foffset = j1;
                                                        vinfos[1].indices[0] = _ij1[0];
                                                        vinfos[1].indices[1] = _ij1[1];
                                                        vinfos[1].maxsolutions = _nj1;
                                                        vinfos[2].jointtype = 1;
                                                        vinfos[2].foffset = j2;
                                                        vinfos[2].indices[0] = _ij2[0];
                                                        vinfos[2].indices[1] = _ij2[1];
                                                        vinfos[2].maxsolutions = _nj2;
                                                        vinfos[3].jointtype = 1;
                                                        vinfos[3].foffset = j3;
                                                        vinfos[3].indices[0] = _ij3[0];
                                                        vinfos[3].indices[1] = _ij3[1];
                                                        vinfos[3].maxsolutions = _nj3;
                                                        vinfos[4].jointtype = 1;
                                                        vinfos[4].foffset = j4;
                                                        vinfos[4].indices[0] = _ij4[0];
                                                        vinfos[4].indices[1] = _ij4[1];
                                                        vinfos[4].maxsolutions = _nj4;
                                                        vinfos[5].jointtype = 1;
                                                        vinfos[5].foffset = j5;
                                                        vinfos[5].indices[0] = _ij5[0];
                                                        vinfos[5].indices[1] = _ij5[1];
                                                        vinfos[5].maxsolutions = _nj5;
                                                        std::vector<int> vfree(0);
                                                        solutions.AddSolution(vinfos,vfree);
                                                    }
                                                }
                                            }

                                        }

                                    }
                                }
                            }

                        }

                    }
                }
            }
        }
    }
    return solutions.GetNumSolutions()>0;
}





} // end namespace


#ifdef IKFAST_MAIN
#include <stdio.h>
#include <stdlib.h>
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 )
    {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;

    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]);
    eerot[1] = atof(argv[2]);
    eerot[2] = atof(argv[3]);
    eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]);
    eerot[4] = atof(argv[6]);
    eerot[5] = atof(argv[7]);
    eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]);
    eerot[7] = atof(argv[10]);
    eerot[8] = atof(argv[11]);
    eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ik(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess )
    {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i)
    {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
